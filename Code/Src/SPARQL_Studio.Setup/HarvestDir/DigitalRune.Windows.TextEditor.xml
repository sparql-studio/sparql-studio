<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DigitalRune.Windows.TextEditor</name>
    </assembly>
    <members>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.CodeCompletion">
            <summary>
            Shows the code completion window.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.CodeCompletion.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.Insight">
            <summary>
            Shows the method insight window.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.Insight.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.Cut">
            <summary>
            Cuts the currently selected text and places it in the Windows clipboard.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.Cut.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.Copy">
            <summary>
            Copies the currently selected text and places it in the Windows clipboard.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.Copy.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.Paste">
            <summary>
            Pastes the content of the Windows clipboard into the <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>
            at the current position.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.Paste.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.CaretLeft">
            <summary>
            Moves the caret one position to the left.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.CaretLeft.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.CaretRight">
            <summary>
            Moves the caret one position to the right.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.CaretRight.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.CaretUp">
            <summary>
            Moves the caret up to the previous line.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.CaretUp.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.CaretDown">
            <summary>
            Moves the caret down to the next line.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.CaretDown.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.WordRight">
            <summary>
            Moves the caret to the beginning of the next word.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.WordRight.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.WordLeft">
            <summary>
            Moves the caret to the beginning of the previous word.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.WordLeft.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ScrollLineUp">
            <summary>
            Scrolls the <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/> up by one line.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ScrollLineUp.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ScrollLineDown">
            <summary>
            Scrolls the <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/> down by one line.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ScrollLineDown.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.Home">
            <summary>
            Moves the caret to start of the line.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.Home.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.End">
            <summary>
            Moves the caret to the end of the line.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.End.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.MoveToStart">
            <summary>
            Moves the caret to the start of the document.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.MoveToStart.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.MoveToEnd">
            <summary>
            Moves the document caret to the end of the document.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.MoveToEnd.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.IEditAction">
            <summary>
            Executes a complex action on a <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <remarks>
            <para>
            <see cref="T:DigitalRune.Windows.TextEditor.Actions.IEditAction"/>s are usually complex actions, which manipulate
            the <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/> (document, caret position, current selection, etc.).
            Examples are: Cut, Copy, Paste, Select All, Page-Down, etc.
            </para>
            <para>
            An actions action is usually automatically triggered by the <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>
            when it detects a certain keyboard shortcut. But you can also call actions
            manually from your application. For example: You can invoke an <see cref="T:DigitalRune.Windows.TextEditor.Actions.IEditAction"/>
            when the user selects 'Cut' from your application menu.
            </para>
            <para>
            Action do not require additional parameters. They depend only on the current
            state of the <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/> (document, caret position, current
            selection, etc.).
            </para>
            <para>
            To define a new key for the <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>, you must write a class 
            which implements this interface.
            </para>
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Actions.IEditAction.Keys">
            <value>
            An array of keys on which this edit action occurs.
            </value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.IEditAction.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <remarks>
            When the key which is defined per XML is pressed, this method will be launched.
            </remarks>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.AbstractEditAction">
            <summary>
            Defines the base functionality for an <see cref="T:DigitalRune.Windows.TextEditor.Actions.IEditAction"/>.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Actions.AbstractEditAction.Keys">
            <value>
            An array of keys on which this edit action occurs.
            </value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.AbstractEditAction.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">
            The text area on which to execute the action.
            </param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.AbstractEditAction.Execute(DigitalRune.Windows.TextEditor.TextEditorControl)">
            <summary>
            Executes the action on the active <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/> of a
            <see cref="T:DigitalRune.Windows.TextEditor.TextEditorControl"/>.
            </summary>
            <param name="textEditor">
            The text editor control on which the to execute the action.
            </param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.Tab">
            <summary>
            Inserts a tab/indent.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.Tab.GetIndentationString(DigitalRune.Windows.TextEditor.Document.IDocument)">
            <summary>
            Gets the indentation string of the document.
            </summary>
            <param name="document">The document.</param>
            <returns>The indentation string.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.Tab.GetIndentationString(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Gets the indentation string.
            </summary>
            <param name="document">The document.</param>
            <param name="textArea">The text area.</param>
            <returns>The indentation string.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.Tab.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
            <remarks>
            Executes this edit action
            </remarks>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ShiftTab">
            <summary>
            Removes a tab (removes indentation).
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ShiftTab.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ToggleComment">
            <summary>
            Comments/uncomments the current selection.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ToggleComment.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ToggleLineComment">
            <summary>
            Comments/uncomments the currently selected lines.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ToggleLineComment.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ToggleBlockComment">
            <summary>
            Comments/uncomments the current selection.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ToggleBlockComment.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ToggleBlockComment.FindSelectedCommentRegion(DigitalRune.Windows.TextEditor.Document.IDocument,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Finds the selected comment region.
            </summary>
            <param name="document">The document.</param>
            <param name="commentStart">The comment start.</param>
            <param name="commentEnd">The comment end.</param>
            <param name="selectionStartOffset">The start offset of the selection.</param>
            <param name="selectionEndOffset">The end offset of selection.</param>
            <returns>The description of the block comment.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.BlockCommentRegion">
            <summary>
            Describes a commented region.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.BlockCommentRegion.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Actions.BlockCommentRegion"/> class.
            </summary>
            <param name="commentStart">The comment start.</param>
            <param name="commentEnd">The comment end.</param>
            <param name="startOffset">The offset of the comment start.</param>
            <param name="endOffset">The offset of the comment end.</param>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Actions.BlockCommentRegion.CommentStart">
            <summary>
            Gets the comment start string.
            </summary>
            <value>The comment start string.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Actions.BlockCommentRegion.CommentEnd">
            <summary>
            Gets the comment end string.
            </summary>
            <value>The comment end string.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Actions.BlockCommentRegion.StartOffset">
            <summary>
            Gets the of the comment start string.
            </summary>
            <value>The offset of the comment start string.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Actions.BlockCommentRegion.EndOffset">
            <summary>
            Gets the offset of the comment end string.
            </summary>
            <value>The offset of the comment end string.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.BlockCommentRegion.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.BlockCommentRegion.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.Backspace">
            <summary>
            Removes the last character.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.Backspace.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.Delete">
            <summary>
            Removes the next character.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.Delete.DeleteSelection(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Deletes the currently selected text.
            </summary>
            <param name="textArea">The text area.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.Delete.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.MovePageDown">
            <summary>
            Moves the caret on page down.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.MovePageDown.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.MovePageUp">
            <summary>
            Moves the page up.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.MovePageUp.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.Return">
            <summary>
            Inserts a newline into the document.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.Return.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ToggleEditMode">
            <summary>
            Switches between Insert and Overwrite mode.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ToggleEditMode.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.Undo">
            <summary>
            Undoes the last operation.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.Undo.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.Redo">
            <summary>
            Redoes the last undone operation.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.Redo.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.WordBackspace">
            <summary>
            Removes the characters between the caret and the beginning of the previous word.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.WordBackspace.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.DeleteWord">
            <summary>
            Removes characters between the caret and the beginning of the next word.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.DeleteWord.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.DeleteLine">
            <summary>
            Deletes the current line.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.DeleteLine.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.DeleteToLineEnd">
            <summary>
            Deletes all characters up to the end of the current line.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.DeleteToLineEnd.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.GotoMatchingBrace">
            <summary>
            Moves the caret to the matching brace.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.GotoMatchingBrace.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ShiftCaretRight">
            <summary>
            Moves the caret to the right and extend the selection. 
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ShiftCaretRight.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ShiftCaretLeft">
            <summary>
            Moves the caret to the left and extends the selection.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ShiftCaretLeft.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ShiftCaretUp">
            <summary>
            Moves the caret up and extends the selection.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ShiftCaretUp.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ShiftCaretDown">
            <summary>
            Moves the caret down and extends the selection.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ShiftCaretDown.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ShiftWordRight">
            <summary>
            Moves the caret to the right by one word and extends the selection.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ShiftWordRight.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ShiftWordLeft">
            <summary>
            Moves the caret to the left by one word and extends the selection.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ShiftWordLeft.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ShiftHome">
            <summary>
            Moves the caret to the first position in the line and extends the selection
            to this position.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ShiftHome.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ShiftEnd">
            <summary>
            Moves the caret to the end of the line and extends the selection to this 
            position.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ShiftEnd.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ShiftMoveToStart">
            <summary>
            Moves the caret to the start and extends the selection.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ShiftMoveToStart.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ShiftMoveToEnd">
            <summary>
            Moves the caret to the end and extends the selection.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ShiftMoveToEnd.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ShiftMovePageUp">
            <summary>
            Moves the caret up by one page and extends the selection.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ShiftMovePageUp.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
            <remarks>
            Executes this edit action
            </remarks>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ShiftMovePageDown">
            <summary>
            Moves the caret down by one page and extends the selection.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ShiftMovePageDown.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.SelectWholeDocument">
            <summary>
            Selects the whole document.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.SelectWholeDocument.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ClearAllSelections">
            <summary>
            Clears all selections.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ClearAllSelections.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ToggleBookmark">
            <summary>
            Toggles a bookmark for the current line.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ToggleBookmark.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.GotoPrevBookmark">
            <summary>
            Jumps to the previous bookmark.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.GotoPrevBookmark.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Actions.GotoPrevBookmark"/> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.GotoPrevBookmark.#ctor(System.Predicate{DigitalRune.Windows.TextEditor.Bookmarks.Bookmark})">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Actions.GotoPrevBookmark"/> class.
            </summary>
            <param name="predicate">
            A custom predicate to decide whether to accept the <see cref="T:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark"/>
            or not.
            </param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.GotoPrevBookmark.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.GotoNextBookmark">
            <summary>
            Jumps to the next bookmark.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.GotoNextBookmark.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Actions.GotoNextBookmark"/> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.GotoNextBookmark.#ctor(System.Predicate{DigitalRune.Windows.TextEditor.Bookmarks.Bookmark})">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Actions.GotoNextBookmark"/> class.
            </summary>
            <param name="predicate">
            A custom predicate to decide whether to accept the <see cref="T:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark"/>
            or not.
            </param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.GotoNextBookmark.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ClearAllBookmarks">
            <summary>
            Clears all bookmarks.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ClearAllBookmarks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Actions.ClearAllBookmarks"/> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ClearAllBookmarks.#ctor(System.Predicate{DigitalRune.Windows.TextEditor.Bookmarks.Bookmark})">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Actions.ClearAllBookmarks"/> class.
            </summary>
            <param name="predicate">
            A custom predicate to decide whether to accept the <see cref="T:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark"/>
            or not.
            </param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ClearAllBookmarks.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ToggleFolding">
            <summary>
            Toggles the folding of the current region.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ToggleFolding.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ToggleAllFoldings">
            <summary>
            Toggles the folding of all regions in the document.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ToggleAllFoldings.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.FoldMarkersByCriteria">
            <summary>
            Folds (hides) all regions that match a certain criteria.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.FoldMarkersByCriteria.#ctor(System.Predicate{DigitalRune.Windows.TextEditor.Folding.Fold})">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Actions.FoldMarkersByCriteria"/> class.
            </summary>
            <param name="predicate">
            The predicate that defines whether the region shall be folded.
            </param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.FoldMarkersByCriteria.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.AbstractLineFormatAction">
            <summary>
            Base class for all line formatting actions.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Actions.AbstractLineFormatAction.TextArea">
            <summary>
            Gets the <see cref="P:DigitalRune.Windows.TextEditor.Actions.AbstractLineFormatAction.TextArea"/>.
            </summary>
            <value>The text area.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.AbstractLineFormatAction.Convert(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Formats the specified lines.
            </summary>
            <param name="document">The document.</param>
            <param name="startLine">The start line.</param>
            <param name="endLine">The end line.</param>
            <remarks>
            This method is called for all selections in the document.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.AbstractLineFormatAction.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a certain <see cref="P:DigitalRune.Windows.TextEditor.Actions.AbstractLineFormatAction.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.AbstractSelectionFormatAction">
            <summary>
            Base class for formatting actions on selections.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Actions.AbstractSelectionFormatAction.TextArea">
            <summary>
            Gets the <see cref="P:DigitalRune.Windows.TextEditor.Actions.AbstractSelectionFormatAction.TextArea"/>.
            </summary>
            <value>The text area.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.AbstractSelectionFormatAction.Convert(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Formats the specified region of the document.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
            <remarks>
            This method is called for all selections in the document.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.AbstractSelectionFormatAction.Execute(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Executes the action on a given <see cref="P:DigitalRune.Windows.TextEditor.Actions.AbstractSelectionFormatAction.TextArea"/>.
            </summary>
            <param name="textArea">The text area on which to execute the action.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.RemoveLeadingWS">
            <summary>
            Removes all leading whitespaces for the current selections.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.RemoveLeadingWS.Convert(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Formats the specified lines.
            </summary>
            <param name="document">The document.</param>
            <param name="startLine">The start line.</param>
            <param name="endLine">The end line.</param>
            <remarks>
            This method is called for all selections in the document.
            </remarks>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.RemoveTrailingWS">
            <summary>
            Removes all the trailing whitespaces for the current selections.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.RemoveTrailingWS.Convert(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Formats the specified lines.
            </summary>
            <param name="document">The document.</param>
            <param name="startLine">The start line.</param>
            <param name="endLine">The end line.</param>
            <remarks>
            This method is called for all selections in the document.
            </remarks>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ToUpperCase">
            <summary>
            Converts the current selection into upper-case characters.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ToUpperCase.Convert(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Converts the specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="startOffset">The start offset.</param>
            <param name="length">The length.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ToLowerCase">
            <summary>
            Converts the current selection into lower-case characters.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ToLowerCase.Convert(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Converts the specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="startOffset">The start offset.</param>
            <param name="length">The length.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.InvertCaseAction">
            <summary>
            Inverts the case of the characters for the current selection.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.InvertCaseAction.Convert(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Converts the specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="startOffset">The start offset.</param>
            <param name="length">The length.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.CapitalizeAction">
            <summary>
            Capitalizes all words in the current selection.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.CapitalizeAction.Convert(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Converts the specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="startOffset">The start offset.</param>
            <param name="length">The length.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ConvertTabsToSpaces">
            <summary>
            Converts all tabs in the current selection into spaces.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ConvertTabsToSpaces.Convert(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Converts the specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="startOffset">The start offset.</param>
            <param name="length">The length.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ConvertSpacesToTabs">
            <summary>
            Converts all spaces in the current selection into tabs.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ConvertSpacesToTabs.Convert(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Converts the specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="startOffset">The start offset.</param>
            <param name="length">The length.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ConvertLeadingTabsToSpaces">
            <summary>
            Converts all leadings tabs in the currently selected lines into spaces.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ConvertLeadingTabsToSpaces.Convert(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Converts the specified document.
            </summary>
            <param name="document">The document.</param>
            <param name="y1">The y1.</param>
            <param name="y2">The y2.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.ConvertLeadingSpacesToTabs">
            <summary>
            Converts all leadings spaces in the currently selected lines into tabs.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.ConvertLeadingSpacesToTabs.Convert(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Formats the specified lines.
            </summary>
            <param name="document">The document.</param>
            <param name="startLine">The start line.</param>
            <param name="endLine">The end line.</param>
            <remarks>
            This method is called for all selections in the document.
            </remarks>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Actions.IndentSelection">
            <summary>
            Intents the current selection.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Actions.IndentSelection.Convert(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Formats the specified lines.
            </summary>
            <param name="document">The document.</param>
            <param name="startLine">The start line.</param>
            <param name="endLine">The end line.</param>
            <remarks>
            This method is called for all selections in the document.
            </remarks>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkRenderer">
            <summary>
            Renders graphics for bookmarks.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkRenderer.DrawBreakpoint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)">
            <summary>
            Draws a breakpoint symbol.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="rectangle">The bounding rectangle.</param>
            <param name="enabled"><see langword="true"/> if enabled..</param>
            <param name="willBeHit"><see langword="true"/> if it will be hit.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkRenderer.DrawBookmark(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Draws a bookmark symbol.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="rectangle">The bounding rectangle.</param>
            <param name="enabled"><see langword="true"/> if enabled.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkRenderer.DrawArrow(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws an arrow symbol.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="rectangle">The bounding rectangle.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Bookmarks.IBookmarkFactory">
            <summary>
            A factory object for creating bookmarks.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.IBookmarkFactory.CreateBookmark(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Creates a bookmark.
            </summary>
            <param name="document">The document.</param>
            <param name="location">The location of the bookmark.</param>
            <returns>The bookmark.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager">
            <summary>
            This class handles the bookmarks for a buffer.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.Marks">
            <summary>
            Gets the bookmarks.
            </summary>
            <value>The bookmarks.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.Document">
            <summary>
            Gets the document.
            </summary>
            <value>The document.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.Factory">
            <summary>
            Gets or sets the bookmark factory.
            </summary>
            <value>The bookmark factory.</value>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.Added">
            <summary>
            Occurs when bookmark is added.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.Removed">
            <summary>
            Occurs when bookmark is removed.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager"/>
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.ToggleMarkAt(DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Sets the mark at the line <code>location.Line</code> if it is not set. If the
            line is already marked the mark is cleared.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.AddMark(DigitalRune.Windows.TextEditor.Bookmarks.Bookmark)">
            <summary>
            Adds a bookmark.
            </summary>
            <param name="mark">The bookmark.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.RemoveMark(DigitalRune.Windows.TextEditor.Bookmarks.Bookmark)">
            <summary>
            Removes the bookmark.
            </summary>
            <param name="mark">The bookmark.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.RemoveMarks(System.Predicate{DigitalRune.Windows.TextEditor.Bookmarks.Bookmark})">
            <summary>
            Removes the bookmarks that match a certain criteria.
            </summary>
            <param name="predicate">The predicate.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.IsMarked(System.Int32)">
            <summary>
            Determines whether the specified line has a bookmark.
            </summary>
            <param name="lineNr">The line number.</param>
            <returns>
            true, if a mark at <paramref name="lineNr"/> exists, otherwise false.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.Clear">
            <summary>
            Clears all bookmarks.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.GetFirstMark(System.Predicate{DigitalRune.Windows.TextEditor.Bookmarks.Bookmark})">
            <summary>
            Gets the first bookmark that matches a certain criteria.
            </summary>
            <param name="predicate">The predicate.</param>
            <returns>The first matching bookmark.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.GetLastMark(System.Predicate{DigitalRune.Windows.TextEditor.Bookmarks.Bookmark})">
            <summary>
            Gets the last bookmark that matches a certain criteria.
            </summary>
            <param name="predicate">The predicate.</param>
            <returns>The last matching bookmark.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.GetNextMark(System.Int32)">
            <summary>
            Gets the next bookmark for a given line.
            </summary>
            <param name="curLineNr">The line number.</param>
            <returns>The next bookmark afer the given line.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.GetNextMark(System.Int32,System.Predicate{DigitalRune.Windows.TextEditor.Bookmarks.Bookmark})">
            <summary>
            Gets the next bookmark for a given line.
            </summary>
            <param name="curLineNr">The line number.</param>
            <param name="predicate">The predicate.</param>
            <returns>
            The next bookmark for the given line; if it does not exist it returns <see cref="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.GetFirstMark(System.Predicate{DigitalRune.Windows.TextEditor.Bookmarks.Bookmark})"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.GetPrevMark(System.Int32)">
            <summary>
            Gets the bookmark before a given line.
            </summary>
            <param name="curLineNr">The line number.</param>
            <returns>The previous bookmark.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.GetPrevMark(System.Int32,System.Predicate{DigitalRune.Windows.TextEditor.Bookmarks.Bookmark})">
            <summary>
            Gets the bookmark before a given line.
            </summary>
            <param name="curLineNr">The line number.</param>
            <param name="predicate">The predicate.</param>
            <returns>
            The previous bookmark for the given line; if it does not exist it returns <see cref="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.GetLastMark(System.Predicate{DigitalRune.Windows.TextEditor.Bookmarks.Bookmark})"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.OnAdded(DigitalRune.Windows.TextEditor.Bookmarks.BookmarkEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.Added"/> event.
            </summary>
            <param name="e">The <see cref="T:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.OnRemoved(DigitalRune.Windows.TextEditor.Bookmarks.BookmarkEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.Removed"/> event.
            </summary>
            <param name="e">The <see cref="T:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkManager.AcceptAnyMarkPredicate(DigitalRune.Windows.TextEditor.Bookmarks.Bookmark)">
            <summary>
            Accepts any mark.
            </summary>
            <param name="mark">The mark.</param>
            <returns>Always <see langword="true"/>.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark">
            <summary>
            Description of Bookmark.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.CanToggle">
            <summary>
            Gets if the bookmark can be toggled off using the 'set/unset bookmark' command.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.Document">
            <summary>
            Gets or sets the document.
            </summary>
            <value>The document.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.Anchor">
            <summary>
            Gets the <see cref="T:DigitalRune.Windows.TextEditor.Document.TextAnchor"/> used for this bookmark.
            </summary>
            <value>The anchor used for this bookmark. <see langword="null"/> if the bookmark is not connected to a document.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.Location">
            <summary>
            Gets or sets the location of this bookmark.
            </summary>
            <value>The location of this bookmark.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.Enabled">
            <summary>
            Gets or sets a value indicating whether this bookmark is enabled.
            </summary>
            <value>
            	<see langword="true"/> if this bookmark is enabled; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.LineNumber">
            <summary>
            Gets the line number of this bookmark.
            </summary>
            <value>The line number of this bookmark.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.ColumnNumber">
            <summary>
            Gets the column number of this bookmark.
            </summary>
            <value>The column number of this bookmark.</value>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.DocumentChanged">
            <summary>
            Occurs when the document is has been changed.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.EnabledChanged">
            <summary>
            Occurs when the <see cref="P:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.Enabled"/> property has been changed.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="location">The location of the bookmark.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Document.TextLocation,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="location">The location of the bookmark.</param>
            <param name="enabled">If set to <see langword="true"/> this bookmark is enabled.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.OnDocumentChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.DocumentChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.OnEnabledChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.EnabledChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.Click(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles a click on this bookmark on the <see cref="T:DigitalRune.Windows.TextEditor.IconMargin"/>.
            </summary>
            <param name="parent">The parent control.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns><see langword="true"/> if mouse click has been handled and the bookmark is removed.</returns>
            <remarks>
            Per default a left-click on the bookmark removes it from the icon margin.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.Bookmark.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the bookmark on the <see cref="T:DigitalRune.Windows.TextEditor.IconMargin"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="rectangle">The bounding rectangle.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkEventArgs">
            <summary>
            Event arguments for bookmark related events.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkEventArgs.Bookmark">
            <summary>
            Gets the bookmark.
            </summary>
            <value>The bookmark.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkEventArgs.#ctor(DigitalRune.Windows.TextEditor.Bookmarks.Bookmark)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Bookmarks.BookmarkEventArgs"/> class.
            </summary>
            <param name="bookmark">The bookmark.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Document.DefaultDocument">
            <summary>
            The default <see cref="T:DigitalRune.Windows.TextEditor.Document.IDocument"/> implementation.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.LineManager">
            <summary>
            Gets or sets the line manager.
            </summary>
            <value>The line manager.</value>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Document.DefaultDocument.DocumentChanged">
            <summary>
            Occurs when a document has been changed.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Document.DefaultDocument.UpdateCommited">
            <summary>
            Is fired when CommitUpdate is called
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Document.DefaultDocument.TextContentChanged">
            <summary>
            Occurs when the text content has changed.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Document.DefaultDocument.LineLengthChanged">
            <summary>
            Occurs when length of a line changes.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Document.DefaultDocument.LineCountChanged">
            <summary>
            Occurs when number of lines changes.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Document.DefaultDocument.LineDeleted">
            <summary>
            Occurs when a line is deleted.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.MarkerStrategy">
            <summary>
            Gets the marker strategy.
            </summary>
            <value>The marker strategy.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.TextEditorProperties">
            <summary>
            Gets or sets the text editor properties.
            </summary>
            <value>The text editor properties.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.UndoStack">
            <summary>
            Gets the undo stack.
            </summary>
            <value>The undo stack.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.LineSegmentCollection">
            <summary>
            Gets the line segment collection.
            </summary>
            <value>A collection of all line segments</value>
            <remarks>
            The collection should only be used if you're aware
            of the 'last line ends with a delimiter problem'. Otherwise
            the <see cref="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.GetLineSegment(System.Int32)"/> method should be used.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the document is read-only.
            </summary>
            <value>If <see langword="true"/> the document can't be altered</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.TextBufferStrategy">
            <summary>
            The <see cref="T:DigitalRune.Windows.TextEditor.TextBuffer.ITextBufferStrategy"/> attached to the <see cref="T:DigitalRune.Windows.TextEditor.Document.IDocument"/> instance
            </summary>
            <value>The text buffer strategy.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.FormattingStrategy">
            <summary>
            The <see cref="T:DigitalRune.Windows.TextEditor.Formatting.IFormattingStrategy"/> attached to the <see cref="T:DigitalRune.Windows.TextEditor.Document.IDocument"/> instance
            </summary>
            <value>The formatting strategy.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.FoldingManager">
            <summary>
            The <see cref="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.FoldingManager"/> attached to the <see cref="T:DigitalRune.Windows.TextEditor.Document.IDocument"/> instance
            </summary>
            <value>The folding manager.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.HighlightingStrategy">
            <summary>
            The <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.IHighlightingStrategy"/> attached to the <see cref="T:DigitalRune.Windows.TextEditor.Document.IDocument"/> instance
            </summary>
            <value>The highlighting strategy.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.TextLength">
            <summary>
            Gets the length of the text.
            </summary>
            <value>
            The current length of the sequence of characters that can be edited.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.BookmarkManager">
            <summary>
            The <see cref="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.BookmarkManager"/> attached to the <see cref="T:DigitalRune.Windows.TextEditor.Document.IDocument"/> instance
            </summary>
            <value>The bookmark manager.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.TextContent">
            <summary>
            Gets or sets the whole text as string.
            </summary>
            <value>The whole text as string.</value>
            <remarks>
            When setting the text using the TextContent property, the undo stack is cleared.
            Set TextContent only for actions such as loading a file; if you want to change the current document
            use the Replace method instead.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.TotalNumberOfLines">
            <summary>
            Gets the total number of lines.
            </summary>
            <value>
            The total number of lines, this may be != <c>LineSegments.Count</c>
            if the last line ends with a delimiter.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.UpdateQueue">
            <summary>
            Gets the update queue.
            </summary>
            <value>A container where all TextAreaUpdate objects get stored</value>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Document.DefaultDocument.DocumentAboutToBeChanged">
            <summary>
            Occurs when a document is about to be changed.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.UpdateSegmentListOnDocumentChange``1(System.Collections.Generic.List{``0},DigitalRune.Windows.TextEditor.Document.DocumentEventArgs)">
            <summary>
            Moves, Resizes, Removes a list of segments on insert/remove/replace events.
            </summary>
            <typeparam name="T">A type of segment.</typeparam>
            <param name="list">The list.</param>
            <param name="e">The <see cref="T:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.Insert(System.Int32,System.String)">
            <summary>
            Inserts a string of characters into the sequence.
            </summary>
            <param name="offset">Offset where to insert the string.</param>
            <param name="text">Text to be inserted.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.Remove(System.Int32,System.Int32)">
            <summary>
            Removes some portion of the sequence.
            </summary>
            <param name="offset">Offset of the remove.</param>
            <param name="length">Number of characters to remove.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.Replace(System.Int32,System.Int32,System.String)">
            <summary>
            Replace some portion of the sequence.
            </summary>
            <param name="offset">The offset.</param>
            <param name="length">The number of characters to replace.</param>
            <param name="text">The text to be replaced with.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.GetCharAt(System.Int32)">
            <summary>
            Returns a specific char of the sequence.
            </summary>
            <param name="offset">Offset of the char to get.</param>
            <returns>The character.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.GetText(System.Int32,System.Int32)">
            <summary>
            Fetches a string of characters contained in the sequence.
            </summary>
            <param name="offset">Offset into the sequence to fetch</param>
            <param name="length">The number of characters to copy.</param>
            <returns>
            The text at the <paramref name="offset"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.GetText(DigitalRune.Windows.TextEditor.Document.ISegment)">
            <summary>
            Gets the text of a certain segment.
            </summary>
            <param name="segment">The segment.</param>
            <returns>The text in the segment.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.GetLineNumberForOffset(System.Int32)">
            <summary>
            Gets the line number for the given offset.
            </summary>
            <param name="offset">A offset which points to a character in the line which line number is
            returned.</param>
            <returns>
            An <c>int</c> which value is the line number.
            </returns>
            <remarks>
            Returns a valid line number for the given offset.
            </remarks>
            <exception cref="T:System.ArgumentException">If offset points not to a valid position</exception>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.GetLineSegmentForOffset(System.Int32)">
            <summary>
            Gets the line segment for a given offset.
            </summary>
            <param name="offset">A offset which points to a character in the line which
            is returned.</param>
            <returns>A <see cref="T:DigitalRune.Windows.TextEditor.Document.LineSegment"/> object.</returns>
            <remarks>
            Returns a <see cref="T:DigitalRune.Windows.TextEditor.Document.LineSegment"/> for the given offset.
            </remarks>
            <exception cref="T:System.ArgumentException">If offset points not to a valid position</exception>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.GetLineSegment(System.Int32)">
            <summary>
            Gets the line segment.
            </summary>
            <param name="logicalLine">The line number which is requested.</param>
            <returns>A <see cref="T:DigitalRune.Windows.TextEditor.Document.LineSegment"/> object.</returns>
            <remarks>
            Returns a <see cref="T:DigitalRune.Windows.TextEditor.Document.LineSegment"/> for the given line number.
            This function should be used to get a line instead of getting the
            line using the <see cref="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.LineSegmentCollection"/>.
            </remarks>
            <exception cref="T:System.ArgumentException">If offset points not to a valid position</exception>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.GetFirstLogicalLine(System.Int32)">
            <summary>
            Gets the first logical line for a given physical (visible) line.
            </summary>
            <param name="physicalLine">The physical line number.</param>
            <returns>The logical line number.</returns>
            <remarks>
            	<para>
            A logical line is a line in the document, whereas a physical line is line that
            is rendered in the text editor. A physical line can contain multiple logical lines,
            for example when they are collapsed (see "folding").
            </para>
            	<para>
            The logical line numbers correspond with the line numbers drawn in the line-number margin.
            (Except that logical lines are 0-based and line-numbers drawn are 1-based.)
            </para>
            	<para>
            Example: <c>lineNumber == 100</c>, foldings are in the <see cref="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.FoldingManager"/>
            between 0..1 (2 folded, invisible lines). This method returns 102 as
            the 'logical' line number.
            </para>
            	<para>
            A visible line can contain several logical lines when it contains a (folded)
            folding. This method returns the <b>first</b> logical line that belongs to the
            visible line.
            </para>
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.GetLastLogicalLine(System.Int32)">
            <summary>
            Get the last logical line for a given physical (visible) line.
            </summary>
            <param name="physicalLine">The physical line number.</param>
            <returns>The logical line number.</returns>
            <remarks>
            	<para>
            A logical line is a line in the document, whereas a physical line is line that
            is rendered in the text editor. A physical line can contain multiple logical lines,
            for example when they are collapsed (see "folding").
            </para>
            	<para>
            The logical line numbers correspond with the line numbers drawn in the line-number margin.
            (Except that logical lines are 0-based and line-numbers drawn are 1-based.)
            </para>
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.GetVisibleLine(System.Int32)">
            <summary>
            Get the physical (visible) line for a given logical line.
            </summary>
            <param name="logicalLine">The logical line number.</param>
            <returns>The physical (visible) line number.</returns>
            <remarks>
            	<para>
            A logical line is a line in the document, whereas a physical line is line that
            is rendered in the text editor. A physical line can contain multiple logical lines,
            for example when they are collapsed (see "folding").
            </para>
            	<para>
            The logical line numbers correspond with the line numbers drawn in the line-number margin.
            (Except that logical lines are 0-based and line-numbers drawn are 1-based.)
            </para>
            	<para>
            Example : <c>lineNumber == 100</c>, foldings are in the <see cref="P:DigitalRune.Windows.TextEditor.Document.DefaultDocument.FoldingManager"/>
            between 0..1 (2 folded, invisible lines). This method returns 98 as
            the 'visible' line number.
            </para>
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.GetNextVisibleLineAfter(System.Int32,System.Int32)">
            <summary>
            Skips a certain number of visible lines forwards and returns the line
            number of the next visible line.
            </summary>
            <param name="logicalLine">The current logical line number.</param>
            <param name="visibleLineCount">The number of visible lines to skip.</param>
            <returns>
            The logical line number of the the next visible line.
            </returns>
            <remarks>
            	<para>
            A logical line is a line in the document, whereas a physical line is line that
            is rendered in the text editor. A physical line can contain multiple logical lines,
            for example when they are collapsed (see "folding").
            </para>
            	<para>
            The logical line numbers correspond with the line numbers drawn in the line-number margin.
            (Except that logical lines are 0-based and line-numbers drawn are 1-based.)
            </para>
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.GetNextVisibleLineBefore(System.Int32,System.Int32)">
            <summary>
            Skips a certain number of visible lines backwards and returns the line
            number of the visible line before.
            </summary>
            <param name="logicalLine">The current logical line number.</param>
            <param name="visibleLineCount">The number of visible lines to skip.</param>
            <returns>
            The next visible line before the skipped block of lines.
            </returns>
            <remarks>
            	<para>
            A logical line is a line in the document, whereas a physical line is line that
            is rendered in the text editor. A physical line can contain multiple logical lines,
            for example when they are collapsed (see "folding").
            </para>
            	<para>
            The logical line numbers correspond with the line numbers drawn in the line-number margin.
            (Except that logical lines are 0-based and line-numbers drawn are 1-based.)
            </para>
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.OffsetToPosition(System.Int32)">
            <summary>
            Returns the logical line/column position from an offset
            </summary>
            <param name="offset">The offset.</param>
            <returns>The position.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.PositionToOffset(DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Returns the offset from a logical line/column position
            </summary>
            <param name="p">The position.</param>
            <returns>The offset.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.OnDocumentAboutToBeChanged(DigitalRune.Windows.TextEditor.Document.DocumentEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Document.DefaultDocument.DocumentAboutToBeChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.OnDocumentChanged(DigitalRune.Windows.TextEditor.Document.DocumentEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Document.DefaultDocument.DocumentChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.RequestUpdate(DigitalRune.Windows.TextEditor.TextAreaUpdate)">
            <summary>
            Requests an update.
            </summary>
            <param name="update">The update.</param>
            <remarks>
            Requests an update of the text area.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.CommitUpdate">
            <summary>
            Commits the update.
            </summary>
            <remarks>
            Commits all updates in the queue to the text area (the
            text area will be painted)
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DefaultDocument.OnTextContentChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Document.DefaultDocument.TextContentChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs">
            <summary>
            This class contains more information on a document event
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs.Document">
            <summary>
            Gets the document which is related to the event.
            </summary>
            <value>The document which is related to the event.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs.Offset">
            <summary>
            Gets the offset where the document was changed.
            </summary>
            <value>The offset of the change.</value>
            <remarks>
            Returns <c>-1</c> if no offset was specified for this event.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs.Text">
            <summary>
            Gets the text that is inserted.
            </summary>
            <value>The text that is inserted.</value>
            <returns>
            Returns <see langword="null"/> if no text was inserted.
            </returns>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs.Length">
            <summary>
            Gets the number of characters removed at <see cref="P:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs.Offset"/>.
            </summary>
            <value>The number of character removed.</value>
            <returns>
            <c>-1</c> if no characters were removed.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument)">
            <summary>
            Creates a new instance off <see cref="T:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs"/>
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32)">
            <summary>
            Creates a new instance off <see cref="T:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs"/>
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset where the document was changed.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Creates a new instance off <see cref="T:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs"/>
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset where the document was changed.</param>
            <param name="length">The number of characters removed at <paramref name="offset"/>.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32,System.String)">
            <summary>
            Creates a new instance off <see cref="T:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs"/>
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset where the document was changed.</param>
            <param name="length">The number of characters removed at <paramref name="offset"/>.</param>
            <param name="text">The text inserted at <paramref name="offset"/>.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Document.DocumentFactory">
            <summary>
            This interface represents a container which holds a text sequence and
            all necessary information about it. It is used as the base for a text editor.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DocumentFactory.CreateDocument">
            <summary>
            Creates a new document.
            </summary>
            <returns>The new document.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DocumentFactory.CreateFromTextBuffer(DigitalRune.Windows.TextEditor.TextBuffer.ITextBufferStrategy)">
            <summary>
            Creates a new document and loads the given file.
            </summary>
            <param name="textBuffer">The text buffer.</param>
            <returns>The document.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DocumentFactory.CreateFromFile(System.String)">
            <summary>
            Creates a new document and loads the given file
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>The document.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Document.IDocument">
            <summary>
            Represents a text document that can be shown and edited in a <see cref="T:DigitalRune.Windows.TextEditor.TextEditorControl"/>.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.IDocument.TextEditorProperties">
            <summary>
            Gets or sets the text editor properties.
            </summary>
            <value>The text editor properties.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.IDocument.UndoStack">
            <summary>
            Gets the undo stack.
            </summary>
            <value>The undo stack.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.IDocument.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the document is read-only.
            </summary>
            <value>If <see langword="true"/> the document can't be altered</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.IDocument.FormattingStrategy">
            <summary>
            The <see cref="T:DigitalRune.Windows.TextEditor.Formatting.IFormattingStrategy"/> attached to the <see cref="T:DigitalRune.Windows.TextEditor.Document.IDocument"/> instance
            </summary>
            <value>The formatting strategy.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.IDocument.TextBufferStrategy">
            <summary>
            The <see cref="T:DigitalRune.Windows.TextEditor.TextBuffer.ITextBufferStrategy"/> attached to the <see cref="T:DigitalRune.Windows.TextEditor.Document.IDocument"/> instance
            </summary>
            <value>The text buffer strategy.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.IDocument.FoldingManager">
            <summary>
            The <see cref="P:DigitalRune.Windows.TextEditor.Document.IDocument.FoldingManager"/> attached to the <see cref="T:DigitalRune.Windows.TextEditor.Document.IDocument"/> instance
            </summary>
            <value>The folding manager.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.IDocument.HighlightingStrategy">
            <summary>
            The <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.IHighlightingStrategy"/> attached to the <see cref="T:DigitalRune.Windows.TextEditor.Document.IDocument"/> instance
            </summary>
            <value>The highlighting strategy.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.IDocument.BookmarkManager">
            <summary>
            The <see cref="P:DigitalRune.Windows.TextEditor.Document.IDocument.BookmarkManager"/> attached to the <see cref="T:DigitalRune.Windows.TextEditor.Document.IDocument"/> instance
            </summary>
            <value>The bookmark manager.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.IDocument.MarkerStrategy">
            <summary>
            Gets the marker strategy.
            </summary>
            <value>The marker strategy.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.UpdateSegmentListOnDocumentChange``1(System.Collections.Generic.List{``0},DigitalRune.Windows.TextEditor.Document.DocumentEventArgs)">
            <summary>
            Moves, Resizes, Removes a list of segments on insert/remove/replace events.
            </summary>
            <typeparam name="T">A type of segment.</typeparam>
            <param name="list">The list.</param>
            <param name="e">The <see cref="T:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Document.IDocument.UpdateCommited">
            <summary>
            Is fired when CommitUpdate is called
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Document.IDocument.DocumentAboutToBeChanged">
            <summary>
            Occurs when a document is about to be changed.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Document.IDocument.DocumentChanged">
            <summary>
            Occurs when a document has been changed.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Document.IDocument.TextContentChanged">
            <summary>
            Occurs when the text content has changed.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.IDocument.LineSegmentCollection">
            <summary>
            Gets the line segment collection.
            </summary>
            <value>A collection of all line segments</value>
            <remarks>
            The collection should only be used if you're aware
            of the 'last line ends with a delimiter problem'. Otherwise
            the <see cref="M:DigitalRune.Windows.TextEditor.Document.IDocument.GetLineSegment(System.Int32)"/> method should be used.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.IDocument.TotalNumberOfLines">
            <summary>
            Gets the total number of lines.
            </summary>
            <value>
            The total number of lines in the document.
            </value>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Document.IDocument.LineLengthChanged">
            <summary>
            Occurs when length of a line changes..
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Document.IDocument.LineCountChanged">
            <summary>
            Occurs when number of lines changes.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Document.IDocument.LineDeleted">
            <summary>
            Occurs when a line is deleted.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.GetLineNumberForOffset(System.Int32)">
            <summary>
            Gets the line number for the given offset.
            </summary>
            <param name="offset">
            A offset which points to a character in the line which line number is 
            returned.
            </param>
            <returns>An <c>int</c> which value is the line number.</returns>
            <remarks>
            Returns a valid line number for the given offset.
            </remarks>
            <exception cref="T:System.ArgumentException">If offset points not to a valid position</exception>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.GetLineSegmentForOffset(System.Int32)">
            <summary>
            Gets the line segment for a given offset.
            </summary>
            <param name="offset">A offset which points to a character in the line which
            is returned.</param>
            <returns>A <see cref="T:DigitalRune.Windows.TextEditor.Document.LineSegment"/> object.</returns>
            <remarks>
            Returns a <see cref="T:DigitalRune.Windows.TextEditor.Document.LineSegment"/> for the given offset.
            </remarks>
            <exception cref="T:System.ArgumentException">If offset points not to a valid position</exception>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.GetLineSegment(System.Int32)">
            <summary>
            Gets the line segment.
            </summary>
            <param name="logicalLine">The line number which is requested.</param>
            <returns>A <see cref="T:DigitalRune.Windows.TextEditor.Document.LineSegment"/> object.</returns>
            <remarks>
            Returns a <see cref="T:DigitalRune.Windows.TextEditor.Document.LineSegment"/> for the given line number.
            </remarks>
            <exception cref="T:System.ArgumentException">If offset points not to a valid position</exception>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.GetFirstLogicalLine(System.Int32)">
            <summary>
            Gets the first logical line for a given physical (visible) line.
            </summary>
            <param name="physicalLine">The physical line number.</param>
            <returns>The logical line number.</returns>
            <remarks>
            <para>
            A logical line is a line in the document, whereas a physical line is line that
            is rendered in the text editor. A physical line can contain multiple logical lines, 
            for example when they are collapsed (see "folding").
            </para>
            <para>
            The logical line numbers correspond with the line numbers drawn in the line-number margin.
            (Except that logical lines are 0-based and line-numbers drawn are 1-based.)
            </para>
            <para>
            Example: <c>lineNumber == 100</c>, foldings are in the <see cref="P:DigitalRune.Windows.TextEditor.Document.IDocument.FoldingManager"/>
            between 0..1 (2 folded, invisible lines). This method returns 102 as
            the 'logical' line number.
            </para>
            <para>
            A visible line can contain several logical lines when it contains a (folded)
            folding. This method returns the <b>first</b> logical line that belongs to the 
            visible line.
            </para>
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.GetLastLogicalLine(System.Int32)">
            <summary>
            Get the last logical line for a given physical (visible) line.
            </summary>
            <param name="physicalLine">The physical line number.</param>
            <returns>The logical line number.</returns>
            <remarks>
            <para>
            A logical line is a line in the document, whereas a physical line is line that
            is rendered in the text editor. A physical line can contain multiple logical lines, 
            for example when they are collapsed (see "folding").
            </para>
            <para>
            The logical line numbers correspond with the line numbers drawn in the line-number margin.
            (Except that logical lines are 0-based and line-numbers drawn are 1-based.)
            </para>
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.GetVisibleLine(System.Int32)">
            <summary>
            Get the physical (visible) line for a given logical line.
            </summary>
            <param name="logicalLine">The logical line number.</param>
            <returns>The physical (visible) line number.</returns>
            <remarks>
            <para>
            A logical line is a line in the document, whereas a physical line is line that
            is rendered in the text editor. A physical line can contain multiple logical lines, 
            for example when they are collapsed (see "folding").
            </para>
            <para>
            The logical line numbers correspond with the line numbers drawn in the line-number margin.
            (Except that logical lines are 0-based and line-numbers drawn are 1-based.)
            </para>
            <para>
            Example : <c>lineNumber == 100</c>, foldings are in the <see cref="P:DigitalRune.Windows.TextEditor.Document.IDocument.FoldingManager"/>
            between 0..1 (2 folded, invisible lines). This method returns 98 as
            the 'visible' line number.
            </para>
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.GetNextVisibleLineAfter(System.Int32,System.Int32)">
            <summary>
            Skips a certain number of visible lines forwards and returns the line 
            number of the next visible line.
            </summary>
            <param name="logicalLine">The current logical line number.</param>
            <param name="visibleLineCount">The number of visible lines to skip.</param>
            <returns>The logical line number of the the next visible line.</returns>
            <remarks>
            <para>
            A logical line is a line in the document, whereas a physical line is line that
            is rendered in the text editor. A physical line can contain multiple logical lines, 
            for example when they are collapsed (see "folding").
            </para>
            <para>
            The logical line numbers correspond with the line numbers drawn in the line-number margin.
            (Except that logical lines are 0-based and line-numbers drawn are 1-based.)
            </para>
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.GetNextVisibleLineBefore(System.Int32,System.Int32)">
            <summary>
            Skips a certain number of visible lines backwards and returns the line
            number of the visible line before.
            </summary>
            <param name="logicalLine">The current logical line number.</param>
            <param name="visibleLineCount">The number of visible lines to skip.</param>
            <returns>The next visible line before the skipped block of lines.</returns>
            <remarks>
            <para>
            A logical line is a line in the document, whereas a physical line is line that
            is rendered in the text editor. A physical line can contain multiple logical lines, 
            for example when they are collapsed (see "folding").
            </para>
            <para>
            The logical line numbers correspond with the line numbers drawn in the line-number margin.
            (Except that logical lines are 0-based and line-numbers drawn are 1-based.)
            </para>
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.IDocument.TextContent">
            <summary>
            Gets or sets the whole text as string.
            </summary>
            <value>
            The whole text as string.
            </value>
            <remarks>
            When setting the text using the TextContent property, the undo stack is cleared.
            Set TextContent only for actions such as loading a file; if you want to change the current document
            use the Replace method instead.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.IDocument.TextLength">
            <summary>
            Gets the length of the text.
            </summary>
            <value>
            The current length of the sequence of characters that can be edited.
            </value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.Insert(System.Int32,System.String)">
            <summary>
            Inserts a string of characters into the sequence.
            </summary>
            <param name="offset">Offset where to insert the string.</param>
            <param name="text">Text to be inserted.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.Remove(System.Int32,System.Int32)">
            <summary>
            Removes some portion of the sequence.
            </summary>
            <param name="offset">Offset of the remove.</param>
            <param name="length">Number of characters to remove.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.Replace(System.Int32,System.Int32,System.String)">
            <summary>
            Replace some portion of the sequence.
            </summary>
            <param name="offset">The offset.</param>
            <param name="length">The number of characters to replace.</param>
            <param name="text">The text to be replaced with.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.GetCharAt(System.Int32)">
            <summary>
            Returns a specific char of the sequence.
            </summary>
            <param name="offset">Offset of the char to get.</param>
            <returns>The character.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.GetText(System.Int32,System.Int32)">
            <summary>
            Fetches a string of characters contained in the sequence.
            </summary>
            <param name="offset">Offset into the sequence to fetch</param>
            <param name="length">The number of characters to copy.</param>
            <returns>The text at the <paramref name="offset"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.GetText(DigitalRune.Windows.TextEditor.Document.ISegment)">
            <summary>
            Gets the text of a certain segment.
            </summary>
            <param name="segment">The segment.</param>
            <returns>The text in the segment.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.OffsetToPosition(System.Int32)">
            <summary>
            Returns the logical line/column position from an offset
            </summary>
            <param name="offset">The offset.</param>
            <returns>The position.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.PositionToOffset(DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Returns the offset from a logical line/column position
            </summary>
            <param name="p">The position.</param>
            <returns>The offset.</returns>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.IDocument.UpdateQueue">
            <summary>
            Gets the update queue.
            </summary>
            <value>A container where all TextAreaUpdate objects get stored</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.RequestUpdate(DigitalRune.Windows.TextEditor.TextAreaUpdate)">
            <summary>
            Requests an update.
            </summary>
            <param name="update">The update.</param>
            <remarks>
            Requests an update of the text area.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.IDocument.CommitUpdate">
            <summary>
            Commits the update.
            </summary>
            <remarks>
            Commits all updates in the queue to the text area (the
            text area will be painted)
            </remarks>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Document.ISegment">
            <summary>
            This interface is used to describe a segment (span) inside a text sequence.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.ISegment.Offset">
            <summary>
            Gets or sets the offset.
            </summary>
            <value>The offset where the span begins</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.ISegment.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>The length of the span</value>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Document.DeferredEventList">
            <summary>
            A list of events that are fired after the line manager has finished working.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DeferredEventList.RemovedLines">
            <summary>
            Gets the removed lines.
            </summary>
            <value>The removed lines.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.DeferredEventList.RemovedAnchors">
            <summary>
            Gets the removed text anchors.
            </summary>
            <value>The removed <see cref="T:DigitalRune.Windows.TextEditor.Document.TextAnchor"/>s.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.DeferredEventList.AddRemovedLine(DigitalRune.Windows.TextEditor.Document.LineSegment)">
            <summary>
            Adds the removed line.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Document.LineCountChangedEventArgs">
            <summary>
            Event arguments for events raised by an <see cref="T:DigitalRune.Windows.TextEditor.Document.LineManager"/>.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineCountChangedEventArgs.Document">
            <summary>
            Always a valid Document which is related to the event.
            </summary>
            <value>The document.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineCountChangedEventArgs.StartLine">
            <summary>
            Gets the start line (-1 if no offset was specified for this event).
            </summary>
            <value>The start line (-1 if no offset was specified for this event).</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineCountChangedEventArgs.LineDifference">
            <summary>
            Gets the lines difference (-1 if no length was specified for this event).
            </summary>
            <value>The lines difference (-1 if no length was specified for this event).</value>
            <remarks>
            The line difference is calculated as <i>number of lines after - number of lines before</i>.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineCountChangedEventArgs.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Document.LineCountChangedEventArgs"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="lineStart">The line start.</param>
            <param name="linesMoved">The lines moved.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Document.LineEventArgs">
            <summary>
            Event arguments for events raised by an <see cref="T:DigitalRune.Windows.TextEditor.Document.LineManager"/>.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineEventArgs.Document">
            <summary>
            Gets the document.
            </summary>
            <value>The document.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineEventArgs.LineSegment">
            <summary>
            Gets the line segment.
            </summary>
            <value>The line segment.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineEventArgs.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Document.LineSegment)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Document.LineEventArgs"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="lineSegment">The line segment.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineEventArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineManager.Replace(System.Int32,System.Int32,System.String)">
            <summary>
            Replaces the specified offset.
            </summary>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
            <param name="text">The text.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Document.LineSegmentTree">
            <summary>
            Data structure for efficient management of the line segments (most operations are O(lg n)).
            </summary>
            <remarks>
            <para>
            This implements an augmented red-black tree where each node has fields for the number of
            nodes in its subtree (like an order statistics tree) for access by index(=line number).
            Additionally, each node knows the total length of all segments in its subtree.
            This means we can find nodes by offset in O(lg n) time. Since the offset itself is not stored in
            the line segment but computed from the lengths stored in the tree, we adjusting the offsets when
            text is inserted in one line means we just have to increment the TotalLength of the affected line and
            its parent nodes - an O(lg n) operation.
            However this means getting the line number or offset from a LineSegment is not a constant time
            operation, but takes O(lg n).
            </para>
            <para>
            Note: The tree is never empty, <see cref="M:DigitalRune.Windows.TextEditor.Document.LineSegmentTree.Clear"/> causes it to contain an empty segment.
            </para>
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineSegmentTree.TotalLength">
            <summary>
            Gets the total length of all line segments. Runs in O(1).
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineSegmentTree.SetSegmentLength(DigitalRune.Windows.TextEditor.Document.LineSegment,System.Int32)">
            <summary>
            Updates the length of a line segment. Runs in O(lg n).
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineSegmentTree.Count">
            <summary>
            Gets the number of items in the collections. Runs in O(1).
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineSegmentTree.Item(System.Int32)">
            <summary>
            Gets or sets an item by index. Runs in O(lg n).
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineSegmentTree.IndexOf(DigitalRune.Windows.TextEditor.Document.LineSegment)">
            <summary>
            Gets the index of an item. Runs in O(lg n).
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineSegmentTree.Clear">
            <summary>
            Clears the list. Runs in O(1).
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineSegmentTree.Contains(DigitalRune.Windows.TextEditor.Document.LineSegment)">
            <summary>
            Tests whether an item is in the list. Runs in O(n).
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineSegmentTree.CopyTo(DigitalRune.Windows.TextEditor.Document.LineSegment[],System.Int32)">
            <summary>
            Copies all elements from the list to the array.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Document.LineSegmentTree.Enumerator.Invalid">
            <summary>
            An invalid enumerator value. Calling MoveNext on the invalid enumerator
            will always return false, accessing Current will throw an exception.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineSegmentTree.Enumerator.Current">
            <summary>
            Gets the current value. Runs in O(1).
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineSegmentTree.Enumerator.CurrentIndex">
            <summary>
            Gets the index of the current value. Runs in O(lg n).
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineSegmentTree.Enumerator.CurrentOffset">
            <summary>
            Gets the offset of the current value. Runs in O(lg n).
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineSegmentTree.Enumerator.MoveNext">
            <summary>
            Moves to the next index. Runs in O(lg n), but for k calls, the combined time is only O(k+lg n).
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineSegmentTree.Enumerator.MoveBack">
            <summary>
            Moves to the previous index. Runs in O(lg n), but for k calls, the combined time is only O(k+lg n).
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Document.AnchorMovementType">
            <summary>
            Describes how a <see cref="T:DigitalRune.Windows.TextEditor.Document.TextAnchor"/> is moved when text is inserted.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Document.AnchorMovementType.BeforeInsertion">
            <summary>
            Behaves like a start marker - when text is inserted at the anchor position, the anchor will stay
            before the inserted text.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Document.AnchorMovementType.AfterInsertion">
            <summary>
            Behave like an end marker - when text is insered at the anchor position, the anchor will move
            after the inserted text.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Document.TextAnchor">
            <summary>
            An anchor that can be put into a document and moves around when the document is changed.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.TextAnchor.MovementType">
            <summary>
            Controls how the anchor moves.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.TextAnchor.Line">
            <summary>
            Gets (or sets) the line.
            </summary>
            <value>The line.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.TextAnchor.IsDeleted">
            <summary>
            Gets a value indicating whether this instance is deleted.
            </summary>
            <value>
            	<see langword="true"/> if this instance is deleted; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.TextAnchor.LineNumber">
            <summary>
            Gets the line number.
            </summary>
            <value>The line number.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.TextAnchor.ColumnNumber">
            <summary>
            Gets or sets the column number.
            </summary>
            <value>The column number.</value>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Document.TextAnchor.Deleted">
            <summary>
            Occurs when text containing the anchor is removed.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.TextAnchor.Location">
            <summary>
            Gets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.TextAnchor.Offset">
            <summary>
            Gets the offset.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.TextAnchor.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:DigitalRune.Windows.TextEditor.Document.TextAnchor"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:DigitalRune.Windows.TextEditor.Document.TextAnchor"></see>.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Document.TextLocation">
            <summary>
            A line/column position. (Text editor lines/columns are counting from zero.)
            </summary>
            <remarks>
            For convenience: The line number can be accessed via <see cref="P:DigitalRune.Windows.TextEditor.Document.TextLocation.Y"/> or <see cref="P:DigitalRune.Windows.TextEditor.Document.TextLocation.Line"/>.
            And the column number can be accessed via <see cref="P:DigitalRune.Windows.TextEditor.Document.TextLocation.X"/> or <see cref="P:DigitalRune.Windows.TextEditor.Document.TextLocation.Column"/>. 
            </remarks>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Document.TextLocation.Empty">
            <summary>
            Represents no text location (-1, -1).
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.TextLocation.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/> struct.
            </summary>
            <param name="column">The column.</param>
            <param name="line">The line.</param>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.TextLocation.X">
            <summary>
            Gets or sets the column.
            </summary>
            <value>The column.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.TextLocation.Y">
            <summary>
            Gets or sets the column.
            </summary>
            <value>The column.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.TextLocation.Line">
            <summary>
            Gets or sets the line.
            </summary>
            <value>The line.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.TextLocation.Column">
            <summary>
            Gets or sets the column.
            </summary>
            <value>The column.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.TextLocation.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><see langword="true"/> if this instance is empty; otherwise, <see langword="false"/>.</value>
            <seealso cref="F:DigitalRune.Windows.TextEditor.Document.TextLocation.Empty"/>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.TextLocation.ToString">
            <summary>
            Returns the string representation of this <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>.
            </summary>
            <returns>The string representation of this <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/></returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.TextLocation.GetHashCode">
            <summary>
            Gets the hash-code.
            </summary>
            <returns>The hash-code.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.TextLocation.Equals(System.Object)">
            <summary>
            Determines whether two <see cref="T:System.Object"/> instances are equal.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.TextLocation.Equals(DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Determines whether two <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/> instances are equal.
            </summary>
            <param name="other">The <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/> to compare with the current <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/> is equal to the current <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.TextLocation.op_Equality(DigitalRune.Windows.TextEditor.Document.TextLocation,DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Compares two <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/> instances for equality.
            </summary>
            <param name="a">The first <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>.</param>
            <param name="b">The second <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>s are equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.TextLocation.op_Inequality(DigitalRune.Windows.TextEditor.Document.TextLocation,DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Compares two <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/> instances for inequality.
            </summary>
            <param name="a">The first <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>.</param>
            <param name="b">The second <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>.</param>
            <returns><see langword="true"/> if the specified <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>s are not equal; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.TextLocation.op_LessThan(DigitalRune.Windows.TextEditor.Document.TextLocation,DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Compares two <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/> instances.
            </summary>
            <param name="a">The first <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>.</param>
            <param name="b">The second <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>.</param>
            <returns><see langword="true"/> if the <paramref name="a"/> lies before <paramref name="b"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.TextLocation.op_GreaterThan(DigitalRune.Windows.TextEditor.Document.TextLocation,DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Compares two <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/> instances.
            </summary>
            <param name="a">The first <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>.</param>
            <param name="b">The second <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>.</param>
            <returns><see langword="true"/> if the <paramref name="a"/> lies after <paramref name="b"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.TextLocation.op_LessThanOrEqual(DigitalRune.Windows.TextEditor.Document.TextLocation,DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Compares two <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/> instances.
            </summary>
            <param name="a">The first <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>.</param>
            <param name="b">The second <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>.</param>
            <returns><see langword="true"/> if the <paramref name="a"/> lies before or at the same location as <paramref name="b"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.TextLocation.op_GreaterThanOrEqual(DigitalRune.Windows.TextEditor.Document.TextLocation,DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Compares two <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/> instances.
            </summary>
            <param name="a">The first <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>.</param>
            <param name="b">The second <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>.</param>
            <returns><see langword="true"/> if the <paramref name="a"/> lies after or at the same location as <paramref name="b"/>; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.TextLocation.CompareTo(DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Compares the current <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/> with another <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>.
            </summary>
            <param name="other">The other <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>.</param>
            <returns>
            <c>-1</c> if the current <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/> lies before <paramref name="other"/>, 
            <c>0</c> if they lie at the same location,
            and <c>+1</c> if the current <see cref="T:DigitalRune.Windows.TextEditor.Document.TextLocation"/>lies after <paramref name="other"/>.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Document.LineSegment">
            <summary>
            Describes a line of a document.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineSegment.GetWord(System.Int32)">
            <summary>
            Gets the word at a certain column.
            </summary>
            <param name="column">The column.</param>
            <returns>The word at the specified column.</returns>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineSegment.IsDeleted">
            <summary>
            Gets a value indicating whether this segment has been deleted.
            </summary>
            <value>
            	<see langword="true"/> if this instance is deleted; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineSegment.LineNumber">
            <summary>
            Gets the line number.
            </summary>
            <value>The line number.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineSegment.Offset">
            <summary>
            Gets the offset.
            </summary>
            <value>The offset where the span begins</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineSegment.Length">
            <summary>
            Gets the length of the line (without newline delimiter).
            </summary>
            <value>The length of the line (without the newline delimiter).</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineSegment.DigitalRune#Windows#TextEditor#Document#ISegment#Offset">
            <summary>
            Gets or sets the offset.
            </summary>
            <value>The offset where the span begins</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineSegment.DigitalRune#Windows#TextEditor#Document#ISegment#Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>The length of the span.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineSegment.TotalLength">
            <summary>
            Gets (or sets) the length of the line (including newline delimiter).
            </summary>
            <value>The length of the line (include newline delimiter).</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineSegment.DelimiterLength">
            <summary>
            Gets (or sets) the length of the newline delimiter.
            </summary>
            <value>The length of the newline delimiter.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineSegment.Words">
            <summary>
            Gets or sets the words in the line.
            </summary>
            <value>The words in this line.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineSegment.GetColorForPosition(System.Int32)">
            <summary>
            Gets the highlight color for a position.
            </summary>
            <param name="x">The position (column).</param>
            <returns></returns>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineSegment.HighlightSpanStack">
            <summary>
            Gets or sets the spans in the line with the same highlighting.
            </summary>
            <value>The spans with same highlighting.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineSegment.ToString">
            <summary>
            Converts a <see cref="T:DigitalRune.Windows.TextEditor.Document.LineSegment"/> instance to string (for debug purposes)
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineSegment.CreateAnchor(System.Int32)">
            <summary>
            Creates a new anchor in the current line.
            </summary>
            <param name="column">The column.</param>
            <returns>The <see cref="T:DigitalRune.Windows.TextEditor.Document.TextAnchor"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineSegment.Deleted(DigitalRune.Windows.TextEditor.Document.DeferredEventList@)">
            <summary>
            Is called when the <see cref="T:DigitalRune.Windows.TextEditor.Document.LineSegment"/> is deleted.
            </summary>
            <param name="deferredEventList">The deferred event list.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineSegment.RemovedLinePart(DigitalRune.Windows.TextEditor.Document.DeferredEventList@,System.Int32,System.Int32)">
            <summary>
            Is called when a part of the line is removed.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineSegment.InsertedLinePart(System.Int32,System.Int32)">
            <summary>
            Is called when a part of the line is inserted.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineSegment.MergedWith(DigitalRune.Windows.TextEditor.Document.LineSegment,System.Int32)">
            <summary>
            Merges the <see cref="T:DigitalRune.Windows.TextEditor.Document.TextAnchor"/>s of two lines, if a newline is deleted.
            </summary>
            <param name="deletedLine">The deleted line.</param>
            <param name="firstLineLength">The length of the first line.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineSegment.SplitTo(DigitalRune.Windows.TextEditor.Document.LineSegment)">
            <summary>
            Splits the <see cref="T:DigitalRune.Windows.TextEditor.Document.TextAnchor"/>s of a line if a newline is inserted.
            </summary>
            <param name="followingLine">The following line.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Document.LineLengthChangedEventArgs">
            <summary>
            Event arguments for events raised when the length of lines changes.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Document.LineLengthChangedEventArgs.LengthDifference">
            <summary>
            Gets the length delta.
            </summary>
            <value>The length delta.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineLengthChangedEventArgs.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Document.LineSegment,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Document.LineLengthChangedEventArgs"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="lineSegment">The line segment.</param>
            <param name="difference">The difference (new line length - old line length).</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Document.LineLengthChangedEventArgs.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Folding.CSharpFoldingStrategy">
            <summary>
            A simple folding strategy for C# files.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.CSharpFoldingStrategy.GenerateFolds(DigitalRune.Windows.TextEditor.Document.IDocument,System.String,System.Object)">
            <summary>
            Generates the fold markers.
            </summary>
            <param name="document">The document.</param>
            <param name="fileName">Name of the file.</param>
            <param name="parseInformation">The parse information.</param>
            <returns>A list containing all foldings.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.CSharpFoldingStrategy.MarkBlocks(DigitalRune.Windows.TextEditor.Document.IDocument,System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Folding.Fold})">
            <summary>
            Marks all code blocks (namespaces, classes, methods, etc.) in the document.
            </summary>
            <param name="document">The document.</param>
            <param name="foldMarkers">The fold markers.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.CSharpFoldingStrategy.SkipComment(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32)">
            <summary>
            Skips any comments that start at the current offset.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset.</param>
            <returns>The index of the next character after the comments.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.CSharpFoldingStrategy.MarkBlock(System.String,DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Folding.Fold})">
            <summary>
            Marks the block that starts at the current offset.
            </summary>
            <param name="name">The identifier of the block (e.g. "class", "struct").</param>
            <param name="document">The document.</param>
            <param name="offset">The offset of the identifier.</param>
            <param name="foldMarkers">The fold markers.</param>
            <returns>The index of the next character after the block.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.CSharpFoldingStrategy.MarkMethod(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Folding.Fold})">
            <summary>
            Marks the method whose block starts at the given offset.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset of the method body ('{').</param>
            <param name="folds">The fold markers.</param>
            <returns>The index of the next character after the method.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.CSharpFoldingStrategy.MarkRegions(DigitalRune.Windows.TextEditor.Document.IDocument,System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Folding.Fold})">
            <summary>
            Marks all regions ("#region") in the document.
            </summary>
            <param name="document">The document.</param>
            <param name="folds">The fold markers.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.CSharpFoldingStrategy.FindAndMarkRegions(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Folding.Fold})">
            <summary>
            Finds and marks all regions.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset where the search starts.</param>
            <param name="folds">The fold markers.</param>
            <returns>The index of the next character after the all regions.</returns>
            <remarks>
            This method returns when it finds a "#endregion" string that does not have
            a "#region" statement after <paramref name="offset"/>. In this case it 
            returns the index of the next character after the "#endregion" statement.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.CSharpFoldingStrategy.MarkRegion(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Folding.Fold})">
            <summary>
            Marks the region that starts at the given offset.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset.</param>
            <param name="folds">The fold markers.</param>
            <returns>The index of the next character after the region.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Folding.Fold">
            <summary>
            Describes a section of the text that can be collapsed (folded).
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Folding.Fold.Offset">
            <summary>
            Gets or sets the offset.
            </summary>
            <value>The offset where the span begins</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Folding.Fold.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>The length of the span</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Folding.Fold.StartLine">
            <summary>
            Gets the start line.
            </summary>
            <value>The start line.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Folding.Fold.StartColumn">
            <summary>
            Gets the start column.
            </summary>
            <value>The start column.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Folding.Fold.EndLine">
            <summary>
            Gets the end line.
            </summary>
            <value>The end line.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Folding.Fold.EndColumn">
            <summary>
            Gets the end column.
            </summary>
            <value>The end column.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Folding.Fold.IsFolded">
            <summary>
            Gets or sets a value indicating whether this fold is collapsed (folded).
            </summary>
            <value><see langword="true"/> if this fold is collapsed (folded); otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Folding.Fold.FoldText">
            <summary>
            Gets the label of the fold (shown when folded).
            </summary>
            <value>The label of the fold.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Folding.Fold.InnerText">
            <summary>
            Gets the inner text.
            </summary>
            <value>The inner text.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.Fold.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Folding.Fold"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
            <param name="foldText">The label of the folding (shown when folded).</param>
            <param name="isFolded">Flag that defines whether the text is folded or not.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.Fold.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Folding.Fold"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="startLine">The start line.</param>
            <param name="startColumn">The start column.</param>
            <param name="endLine">The end line.</param>
            <param name="endColumn">The end column.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.Fold.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Folding.Fold"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="startLine">The start line.</param>
            <param name="startColumn">The start column.</param>
            <param name="endLine">The end line.</param>
            <param name="endColumn">The end column.</param>
            <param name="foldText">The label of the folding (shown when folded).</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.Fold.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Folding.Fold"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="startLine">The start line.</param>
            <param name="startColumn">The start column.</param>
            <param name="endLine">The end line.</param>
            <param name="endColumn">The end column.</param>
            <param name="foldText">The label of the folding (shown when folded).</param>
            <param name="isFolded">Flag that defines whether the text is folded or not.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.Fold.CompareTo(DigitalRune.Windows.TextEditor.Folding.Fold)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the other parameter.Zero This object is equal to other. Greater than zero This object is greater than other.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.Fold.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Folding.HlslFoldingStrategy">
            <summary>
            A simple folding strategy for HLSL files.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.HlslFoldingStrategy.#cctor">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Folding.HlslFoldingStrategy"/> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.HlslFoldingStrategy.GenerateFolds(DigitalRune.Windows.TextEditor.Document.IDocument,System.String,System.Object)">
            <summary>
            Generates the fold markers.
            </summary>
            <param name="document">The document.</param>
            <param name="fileName">Name of the file.</param>
            <param name="parseInformation">The parse information.</param>
            <returns>A list containing all foldings.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.HlslFoldingStrategy.MarkBlocks(DigitalRune.Windows.TextEditor.Document.IDocument,System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Folding.Fold})">
            <summary>
            Marks all code blocks (namespaces, classes, methods, etc.) in the document.
            </summary>
            <param name="document">The document.</param>
            <param name="foldMarkers">The fold markers.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.HlslFoldingStrategy.SkipComment(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32)">
            <summary>
            Skips any comments that start at the current offset.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset.</param>
            <returns>The index of the next character after the comments.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.HlslFoldingStrategy.MarkMethod(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Folding.Fold})">
            <summary>
            Marks the method whose block starts at the given offset.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset of the method body ('{').</param>
            <param name="foldMarkers">The fold markers.</param>
            <returns>The index of the next character after the method.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.HlslFoldingStrategy.MarkBlock(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Folding.Fold})">
            <summary>
            Marks the block that starts at the current offset.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset of the identifier.</param>
            <param name="foldMarkers">The fold markers.</param>
            <returns>The index of the next character after the block.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Folding.XmlFoldStart">
            <summary>
            Holds information about the start of a fold in an xml string.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.XmlFoldStart.#ctor(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Folding.XmlFoldStart"/> class.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="name">The name.</param>
            <param name="line">The line.</param>
            <param name="column">The column.</param>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Folding.XmlFoldStart.Line">
            <summary>
            The line where the fold should start.  Lines start from 0.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Folding.XmlFoldStart.Column">
            <summary>
            The column where the fold should start.  Columns start from 0.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Folding.XmlFoldStart.Name">
            <summary>
            The name of the xml item with its prefix if it has one.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Folding.XmlFoldStart.FoldText">
            <summary>
            The text to be displayed when the item is folded.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Folding.XmlFoldingStrategy">
            <summary>
            Determines folds for an xml string in the editor.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Folding.XmlFoldingStrategy.ShowAttributesWhenFolded">
            <summary>
            Gets or sets a value indicating whether attributes should be displayed on folded elements.
            </summary>
            <value>
            <see langword="true"/> if attributes should be displayed on folded elements; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.XmlFoldingStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Folding.XmlFoldingStrategy"/> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.XmlFoldingStrategy.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Folding.XmlFoldingStrategy"/> class.
            </summary>
            <param name="showAttributesWhenFolded">if set to <see langword="true"/> attributes will be displayed on folded elements.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.XmlFoldingStrategy.GenerateFolds(DigitalRune.Windows.TextEditor.Document.IDocument,System.String,System.Object)">
            <summary>
            Adds folds to the text editor around each start-end element pair.
            </summary>
            <remarks>
            <para>If the xml is not well formed then no folds are created.</para> 
            <para>Note that the xml text reader lines and positions start 
            from 1 and the SharpDevelop text editor line information starts
            from 0.</para>
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.XmlFoldingStrategy.CreateCommentFold(DigitalRune.Windows.TextEditor.Document.IDocument,System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Folding.Fold},System.Xml.XmlTextReader)">
            <summary>
            Creates a comment fold if the comment spans more than one line.
            </summary>
            <remarks>The text displayed when the comment is folded is the first 
            line of the comment.</remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.XmlFoldingStrategy.CreateElementFoldStart(System.Xml.XmlTextReader)">
            <summary>
            Creates an XmlFoldStart for the start tag of an element.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.XmlFoldingStrategy.CreateElementFold(DigitalRune.Windows.TextEditor.Document.IDocument,System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Folding.Fold},System.Xml.XmlTextReader,DigitalRune.Windows.TextEditor.Folding.XmlFoldStart)">
            <summary>
            Create an element fold if the start and end tag are on 
            different lines.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.XmlFoldingStrategy.GetAttributeFoldText(System.Xml.XmlTextReader)">
            <summary>
            Gets the element's attributes as a string on one line that will
            be displayed when the element is folded.
            </summary>
            <remarks>
            Currently this puts all attributes from an element on the same
            line of the start tag.  It does not cater for elements where attributes
            are not on the same line as the start tag.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.XmlFoldingStrategy.XmlEncodeAttributeValue(System.String,System.Char)">
            <summary>
            Xml encode the attribute string since the string returned from
            the XmlTextReader is the plain unencoded string and .NET
            does not provide us with an xml encode method.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Folding.IFoldingStrategy">
            <summary>
            This interface is used for the folding capabilities
            of a <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.IFoldingStrategy.GenerateFolds(DigitalRune.Windows.TextEditor.Document.IDocument,System.String,System.Object)">
            <summary>
            Generates the folds.
            </summary>
            <param name="document">The document.</param>
            <param name="fileName">Name of the file.</param>
            <param name="parseInformation">The parse information.</param>
            <returns>A list containing all foldings.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Folding.FoldingManager">
            <summary>
            Manages the folding (<see cref="P:DigitalRune.Windows.TextEditor.Folding.FoldingManager.Folds"/>) of a text buffer.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Folding.FoldingManager.Folds">
            <summary>
            Gets a list of all <see cref="P:DigitalRune.Windows.TextEditor.Folding.FoldingManager.Folds"/>.
            </summary>
            <value>The fold marker.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Folding.FoldingManager.FoldingStrategy">
            <summary>
            Gets or sets the folding strategy.
            </summary>
            <value>The folding strategy.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Folding.FoldingManager"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.GetFoldsFromPosition(System.Int32,System.Int32)">
            <summary>
            Gets the folds from position.
            </summary>
            <param name="line">The line.</param>
            <param name="column">The column.</param>
            <returns>The folds that include the specified position.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.GetFoldsWithStartAt(System.Int32)">
            <summary>
            Gets the folds that start at certain line.
            </summary>
            <param name="lineNumber">The line number.</param>
            <returns>The foldings that start <paramref name="lineNumber"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.GetFoldsWithEndAt(System.Int32)">
            <summary>
            Gets the folds that ends in a certain line.
            </summary>
            <param name="lineNumber">The line number.</param>
            <returns>The folds that end at <paramref name="lineNumber"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.GetFoldedFoldsWithStartAt(System.Int32)">
            <summary>
            Gets the collapsed folds that start at certain line.
            </summary>
            <param name="lineNumber">The line number.</param>
            <returns>The collapsed folds that start at <paramref name="lineNumber"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.GetFoldedFoldsWithStartAfterColumn(System.Int32,System.Int32)">
            <summary>
            Gets the collapsed folds that start after a certain column.
            </summary>
            <param name="lineNumber">The line number.</param>
            <param name="column">The column.</param>
            <returns>The collapsed folds that start in <paramref name="lineNumber"/> somewhere after <paramref name="column"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.GetFoldedFoldsWithEndAt(System.Int32)">
            <summary>
            Gets the folded foldings that end at certain line.
            </summary>
            <param name="lineNumber">The line number.</param>
            <returns>The folded foldings that end at <paramref name="lineNumber"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.IsFoldStart(System.Int32)">
            <summary>
            Determines whether any folds start at the line.
            </summary>
            <param name="lineNumber">The line number.</param>
            <returns>
            	<see langword="true"/> if any folds start at <paramref name="lineNumber"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.IsFoldEnd(System.Int32)">
            <summary>
            Determines whether any folds end at the line.
            </summary>
            <param name="lineNumber">The line number.</param>
            <returns>
            	<see langword="true"/> if any folds end at <paramref name="lineNumber"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.GetFoldsContainingLine(System.Int32)">
            <summary>
            Gets the folds that contain a certain line number (excluding start and end line).
            </summary>
            <param name="lineNumber">The line number.</param>
            <returns>The folds that contain a certain line number.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.IsLineInFolds(System.Int32)">
            <summary>
            Determines whether a line belongs to a fold.
            </summary>
            <param name="lineNumber">The line number.</param>
            <returns>
            	<see langword="true"/> if <paramref name="lineNumber"/> belongs to a fold; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.IsLineVisible(System.Int32)">
            <summary>
            Determines whether a line is visible (not folded).
            </summary>
            <param name="lineNumber">The line number.</param>
            <returns>
            	<see langword="true"/> if <paramref name="lineNumber"/> is visible; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.GetTopLevelFoldedFoldings">
            <summary>
            Gets the top level collapsed folds.
            </summary>
            <returns>The top level collapsed folds.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.UpdateFolds">
            <summary>
            Updates the folds.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.UpdateFolds(System.String,System.Object)">
            <summary>
            Updates the folds.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="parseInfo">The parse info.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.UpdateFolds(System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Folding.Fold})">
            <summary>
            Updates the folds.
            </summary>
            <param name="newFolds">The new folds.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Folding.FoldingManager.NotifyFoldingChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Folding.FoldingManager.FoldingChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Folding.FoldingManager.FoldingChanged">
            <summary>
            Occurs when the foldings have been changed.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Formatting.CSharpFormattingStrategy">
            <summary>
            Formatting strategy for C#.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.CSharpFormattingStrategy.SmartIndentLine(DigitalRune.Windows.TextEditor.TextArea,System.Int32)">
            <summary>
            'Smart' line indentation for C#.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="line">The line.</param>
            <returns>
            The number of whitespaces which are before a non-whitespace character in the line.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.CSharpFormattingStrategy.IndentLines(DigitalRune.Windows.TextEditor.TextArea,System.Int32,System.Int32)">
            <summary>
            This function sets the indentation level in a range of lines.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="begin">The begin.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.CSharpFormattingStrategy.FormatLine(DigitalRune.Windows.TextEditor.TextArea,System.Int32,System.Int32,System.Char)">
            <summary>
            Formats a specific line after <c>ch</c> is pressed.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="line">The line number.</param>
            <param name="cursorOffset">The cursor offset.</param>
            <param name="ch">The ch.</param>
            <returns>
            The caret delta position the caret will be moved this number
            of bytes (e.g. the number of bytes inserted before the caret, or
            removed, if this number is negative)
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.CSharpFormattingStrategy.IsInNonVerbatimString(System.String,System.String)">
            <summary>
            Checks if the cursor is inside a non-verbatim string.
            This method is used to check if a line break was inserted in a string.
            The text editor has already broken the line for us, so we just need to check
            the two lines.
            </summary>
            <param name="start">The part before the line break</param>
            <param name="end">The part after the line break</param>
            <returns>
            True, when the line break was inside a non-verbatim-string, so when
            start does not contain a comment, but a non-even number of ", and
            end contains a non-even number of " before the first comment.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.CSharpFormattingStrategy.GetStartType(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Gets the type of code at offset.<br/>
            0 = Code,<br/>
            1 = Comment,<br/>
            2 = String<br/>
            Block comments and multiline strings are not supported.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.CSharpFormattingStrategy.SearchBracketBackward(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Char,System.Char)">
            <summary>
            Finds the offset of the opening bracket in the block defined by offset skipping
            brackets, strings and comments.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset of an position in the block (before the closing bracket).</param>
            <param name="openBracket">The character for the opening bracket.</param>
            <param name="closingBracket">The character for the closing bracket.</param>
            <returns>
            Returns the offset of the opening bracket or -1 if no matching bracket was found.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.CSharpFormattingStrategy.SearchBracketForward(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Char,System.Char)">
            <summary>
            Finds the offset of the closing bracket in the block defined by offset skipping
            brackets, strings and comments.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset of an position in the block (after the opening bracket).</param>
            <param name="openBracket">The character for the opening bracket.</param>
            <param name="closingBracket">The character for the closing bracket.</param>
            <returns>
            Returns the offset of the closing bracket or -1 if no matching bracket was found.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Formatting.IDocumentAccessor">
            <summary>
            Interface used for the indentation class to access the document.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Formatting.IDocumentAccessor.Dirty">
            <summary>Gets if something was changed in the document.</summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Formatting.IDocumentAccessor.ReadOnly">
            <summary>
            Gets if the current line is read only (because it is not in the
            selected text region)
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Formatting.IDocumentAccessor.LineNumber">
            <summary>Gets the number of the current line.</summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Formatting.IDocumentAccessor.Text">
            <summary>Gets or sets the text of the current line.</summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.IDocumentAccessor.Next">
            <summary>Advances to the next line.</summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.FileAccessor.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Formatting.FileAccessor"/> class.
            </summary>
            <param name="filename">The file name.</param>
            <param name="encoding">The default encoding.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.FileAccessor.Close">
            <summary>
            Closes the file.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Formatting.HlslFormattingStrategy">
            <summary>
            Formatting strategy for HLSL.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.HlslFormattingStrategy.SmartIndentLine(DigitalRune.Windows.TextEditor.TextArea,System.Int32)">
            <summary>
            'Smart' line indentation for HLSL.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="line">The line.</param>
            <returns>
            The number of whitespaces which are before a non-whitespace character in the line.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.HlslFormattingStrategy.IndentLines(DigitalRune.Windows.TextEditor.TextArea,System.Int32,System.Int32)">
            <summary>
            This function sets the indentation level in a range of lines.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="begin">The begin.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.HlslFormattingStrategy.FormatLine(DigitalRune.Windows.TextEditor.TextArea,System.Int32,System.Int32,System.Char)">
            <summary>
            Formats a specific line after <c>ch</c> is pressed.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="line">The line number.</param>
            <param name="cursorOffset">The cursor offset.</param>
            <param name="ch">The ch.</param>
            <returns>
            The caret delta position the caret will be moved this number
            of bytes (e.g. the number of bytes inserted before the caret, or
            removed, if this number is negative)
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.HlslFormattingStrategy.IsInNonVerbatimString(System.String,System.String)">
            <summary>
            Checks if the cursor is inside a non-verbatim string.
            This method is used to check if a line break was inserted in a string.
            The text editor has already broken the line for us, so we just need to check
            the two lines.
            </summary>
            <param name="start">The part before the line break</param>
            <param name="end">The part after the line break</param>
            <returns>
            True, when the line break was inside a non-verbatim-string, so when
            start does not contain a comment, but a non-even number of ", and
            end contains a non-even number of " before the first comment.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.HlslFormattingStrategy.GetStartType(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32)">
            <summary>
            Gets the type of code at offset.<br/>
            0 = Code,<br/>
            1 = Comment,<br/>
            2 = String<br/>
            Block comments and multiline strings are not supported.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.HlslFormattingStrategy.SearchBracketBackward(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Char,System.Char)">
            <summary>
            Finds the offset of the opening bracket in the block defined by offset skipping
            brackets, strings and comments.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset of an position in the block (before the closing bracket).</param>
            <param name="openBracket">The character for the opening bracket.</param>
            <param name="closingBracket">The character for the closing bracket.</param>
            <returns>
            Returns the offset of the opening bracket or -1 if no matching bracket was found.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.HlslFormattingStrategy.SearchBracketForward(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Char,System.Char)">
            <summary>
            Finds the offset of the closing bracket in the block defined by offset skipping
            brackets, strings and comments.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset of an position in the block (after the opening bracket).</param>
            <param name="openBracket">The character for the opening bracket.</param>
            <param name="closingBracket">The character for the closing bracket.</param>
            <returns>
            Returns the offset of the closing bracket or -1 if no matching bracket was found.
            </returns>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Formatting.IndentationSettings.LeaveEmptyLines">
            <summary>Leave empty lines empty.</summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Formatting.DefaultFormattingStrategy">
            <summary>
            This class handles the auto and smart indenting in the text buffer while
            you type.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.DefaultFormattingStrategy.GetIndentation(DigitalRune.Windows.TextEditor.TextArea,System.Int32)">
            <summary>
            Returns the whitespaces which are before a non-whitespace character in the line
            as a string.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="lineNumber">The line number.</param>
            <returns>
            The whitespaces which are before a non-whitespace character in the line
            as a string.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.DefaultFormattingStrategy.AutoIndentLine(DigitalRune.Windows.TextEditor.TextArea,System.Int32)">
            <summary>
            Could be overwritten to define more complex indentation.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="line">The line.</param>
            <returns>
            The number of whitespaces which are before a non-whitespace character in the line.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.DefaultFormattingStrategy.SmartReplaceLine(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Document.LineSegment,System.String)">
            <summary>
            Replaces the text in a line.
            If only whitespace at the beginning and end of the line was changed, this method
            only adjusts the whitespace and doesn't replace the other text.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.DefaultFormattingStrategy.SmartIndentLine(DigitalRune.Windows.TextEditor.TextArea,System.Int32)">
            <summary>
            Could be overwritten to define more complex indentation.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="line">The line.</param>
            <returns>
            The number of whitespaces which are before a non-whitespace character in the line.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.DefaultFormattingStrategy.FormatLine(DigitalRune.Windows.TextEditor.TextArea,System.Int32,System.Int32,System.Char)">
            <summary>
            This function formats a specific line after a character is typed.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="line">The line.</param>
            <param name="caretOffset">The caret offset.</param>
            <param name="ch">The character typed.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.DefaultFormattingStrategy.IndentLine(DigitalRune.Windows.TextEditor.TextArea,System.Int32)">
            <summary>
            This function sets the indentation level in a specific line.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="line">The line.</param>
            <returns>
            The number of whitespaces which are before a non-whitespace character in the line.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.DefaultFormattingStrategy.IndentLines(DigitalRune.Windows.TextEditor.TextArea,System.Int32,System.Int32)">
            <summary>
            This function sets the indentation level in a range of lines.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="begin">The begin.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.DefaultFormattingStrategy.SearchBracketBackward(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Char,System.Char)">
            <summary>
            Finds the offset of the opening bracket in the block defined by offset skipping
            brackets, strings and comments.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset of an position in the block (before the closing bracket).</param>
            <param name="openBracket">The character for the opening bracket.</param>
            <param name="closingBracket">The character for the closing bracket.</param>
            <returns>
            Returns the offset of the opening bracket or -1 if no matching bracket was found.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.DefaultFormattingStrategy.SearchBracketForward(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Char,System.Char)">
            <summary>
            Finds the offset of the closing bracket in the block defined by offset skipping
            brackets, strings and comments.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset of an position in the block (after the opening bracket).</param>
            <param name="openBracket">The character for the opening bracket.</param>
            <param name="closingBracket">The character for the closing bracket.</param>
            <returns>
            Returns the offset of the closing bracket or -1 if no matching bracket was found.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Formatting.IFormattingStrategy">
            <summary>
            This interface handles the auto and smart indenting and formatting
            in the document while you type. Language bindings could overwrite this 
            interface and define their own indentation/formatting.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.IFormattingStrategy.FormatLine(DigitalRune.Windows.TextEditor.TextArea,System.Int32,System.Int32,System.Char)">
            <summary>
            This function formats a specific line after a character is typed.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="line">The line.</param>
            <param name="caretOffset">The caret offset.</param>
            <param name="charTyped">The character typed.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.IFormattingStrategy.IndentLine(DigitalRune.Windows.TextEditor.TextArea,System.Int32)">
            <summary>
            This function sets the indentation level in a specific line.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="line">The line.</param>
            <returns>
            The number of whitespaces which are before a non-whitespace character in the line.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.IFormattingStrategy.IndentLines(DigitalRune.Windows.TextEditor.TextArea,System.Int32,System.Int32)">
            <summary>
            This function sets the indent level in a range of lines.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="begin">The begin.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.IFormattingStrategy.SearchBracketBackward(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Char,System.Char)">
            <summary>
            Finds the offset of the opening bracket in the block defined by offset skipping
            brackets, strings and comments.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset of an position in the block (before the closing bracket).</param>
            <param name="openBracket">The character for the opening bracket.</param>
            <param name="closingBracket">The character for the closing bracket.</param>
            <returns>
            Returns the offset of the opening bracket or -1 if no matching bracket was found.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.IFormattingStrategy.SearchBracketForward(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Char,System.Char)">
            <summary>
            Finds the offset of the closing bracket in the block defined by offset skipping
            brackets, strings and comments.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset of an position in the block (after the opening bracket).</param>
            <param name="openBracket">The character for the opening bracket.</param>
            <param name="closingBracket">The character for the closing bracket.</param>
            <returns>
            Returns the offset of the closing bracket or -1 if no matching bracket was found.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Formatting.XmlFormattingStrategy">
            <summary>
            This class currently inserts the closing tags to typed opening tags
            and does smart indentation for xml files.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.XmlFormattingStrategy.FormatLine(DigitalRune.Windows.TextEditor.TextArea,System.Int32,System.Int32,System.Char)">
            <summary>
            Formats the line.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="line">The line number.</param>
            <param name="caretOffset">The caret offset.</param>
            <param name="charTyped">The character typed.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.XmlFormattingStrategy.SmartIndentLine(DigitalRune.Windows.TextEditor.TextArea,System.Int32)">
            <summary>
            'Smart' line indentation for XML.
            </summary>
            <param name="textArea">The text area.</param>
            <param name="line">The line.</param>
            <returns>
            The number of whitespaces which are before a non-whitespace character in the line.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Formatting.XmlFormattingStrategy.IndentLines(DigitalRune.Windows.TextEditor.TextArea,System.Int32,System.Int32)">
            <summary>
            This function sets the indent level in a range of lines.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightingDefinitionInvalidException">
            <summary>
            Indicates that the highlighting definition that was tried to load was invalid.
            </summary>
            <remarks>
            You get this exception only once per highlighting definition, after that the definition
            is replaced with the default highlighter.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingDefinitionInvalidException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightingDefinitionInvalidException"/> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingDefinitionInvalidException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightingDefinitionInvalidException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingDefinitionInvalidException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightingDefinitionInvalidException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingDefinitionInvalidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightingDefinitionInvalidException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy">
            <summary>
            The default highlighting strategy.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy._currentLine">
            <summary>The current line.</summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy._currentSpanStack">
            <summary>Span stack state variable.</summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.Extensions">
            <summary>
            Gets or sets the file extensions on which this highlighting strategy gets
            used.
            </summary>
            <value>
            The file extensions on which this highlighting strategy gets used.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.DigitColor">
            <summary>
            Gets or sets the color of digits.
            </summary>
            <value>The color of digits.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.EnvironmentColors">
            <summary>
            Gets the environment colors.
            </summary>
            <value>The environment colors.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.ImportSettingsFrom(DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy)">
            <summary>
            Imports the settings from another highlighting strategy.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy"/> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.Name">
            <summary>
            Gets the name of the highlighting strategy (must be unique).
            </summary>
            <value>The name of the highlighting strategy (must be unique).</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.Rules">
            <summary>
            Gets the syntax highlighting rules.
            </summary>
            <value>The syntax highlighting rules.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.FindHighlightRuleSet(System.String)">
            <summary>
            Finds the highlighting rule set.
            </summary>
            <param name="name">The name of the rule set.</param>
            <returns>The rule set.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.AddRuleSet(DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet)">
            <summary>
            Adds the rule set.
            </summary>
            <param name="ruleSet">A rule set.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.ResolveReferences">
            <summary>
            Resolves the references.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.DefaultTextColor">
            <summary>
            Gets the default color for text.
            </summary>
            <value>The default color for text.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.SetColorFor(System.String,DigitalRune.Windows.TextEditor.Highlighting.HighlightColor)">
            <summary>
            Sets the color for an environment element.
            </summary>
            <param name="name">The name of the environment element.</param>
            <param name="color">The highlighting color.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.GetColorFor(System.String)">
            <summary>
            Gets the color of an environment element.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>The color of an environment element.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.GetColor(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Document.LineSegment,System.Int32,System.Int32)">
            <summary>
            Gets the highlighting color for a certain position in the document.
            </summary>
            <param name="document">The document.</param>
            <param name="currentSegment">The current segment.</param>
            <param name="currentOffset">The current offset.</param>
            <param name="currentLength">Length of the current.</param>
            <returns>The highlighting color.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.GetColor(DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet,DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Document.LineSegment,System.Int32,System.Int32)">
            <summary>
            Gets the highlighting color for a certain position in the document.
            </summary>
            <param name="ruleSet">The rule set.</param>
            <param name="document">The document.</param>
            <param name="currentSegment">The current segment.</param>
            <param name="currentOffset">The current offset.</param>
            <param name="currentLength">Length of the current.</param>
            <returns></returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.GetRuleSet(DigitalRune.Windows.TextEditor.Highlighting.Span)">
            <summary>
            Gets the rule set for a span.
            </summary>
            <param name="span">The span.</param>
            <returns>The rule set.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.MarkTokens(DigitalRune.Windows.TextEditor.Document.IDocument)">
            <summary>
            Marks the tokens. Used internally, do not call.
            </summary>
            <param name="document">The document.</param>
            <remarks>
            Used internally, do not call.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.MarkTokensInLine(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Boolean@)">
            <summary>
            Marks the tokens in a line.
            </summary>
            <param name="document">The document.</param>
            <param name="lineNumber">The line number.</param>
            <param name="spanChanged"><see langword="true"/> span has changed.</param>
            <returns><see langword="true"/> if the line has been parsed successfully and the next line can be parsed.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.MarkTokens(DigitalRune.Windows.TextEditor.Document.IDocument,System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Document.LineSegment})">
            <summary>
            Marks the tokens.
            </summary>
            <param name="document">The document.</param>
            <param name="inputLines">The input lines.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.OnParsedLine(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Document.LineSegment,System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Highlighting.TextWord})">
            <summary>
            Called when a line has been parsed.
            </summary>
            <param name="document">The document.</param>
            <param name="currentLine">The current line.</param>
            <param name="words">The words.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.OverrideSpan(System.String,DigitalRune.Windows.TextEditor.Document.IDocument,System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Highlighting.TextWord},DigitalRune.Windows.TextEditor.Highlighting.Span,System.Int32@)">
            <summary>
            Override this message to change the parsing of spans.
            </summary>
            <param name="spanBegin">The span begin.</param>
            <param name="document">The document.</param>
            <param name="words">The words.</param>
            <param name="span">The span.</param>
            <param name="lineOffset">The line offset.</param>
            <returns>
            <see langword="true"/> if this method has parsed the span (customized parsing).
            <see langword="false"/> to parse the span as normal.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.PushCurWord(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Highlighting.HighlightColor@,System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Highlighting.TextWord})">
            <summary>
            pushes the curWord string on the word list, with the
            correct color.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.GetRegString(DigitalRune.Windows.TextEditor.Document.LineSegment,System.Char[],System.Int32,DigitalRune.Windows.TextEditor.Document.IDocument)">
            <summary>
            get the string, which matches the regular expression expr,
            in string s2 at index
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.MatchExpr(DigitalRune.Windows.TextEditor.Document.LineSegment,System.Char[],System.Int32,DigitalRune.Windows.TextEditor.Document.IDocument,System.Boolean)">
            <summary>
            returns true, if the get the string s2 at index matches the expression expr
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy.MatchExpr(DigitalRune.Windows.TextEditor.Document.LineSegment,System.Char[],System.Int32,DigitalRune.Windows.TextEditor.Document.IDocument,System.Boolean,System.Boolean)">
            <summary>
            returns true, if the get the string s2 at index matches the expression expr
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.FontContainer">
            <summary>
            This class is used to generate bold, italic and bold/italic fonts out
            of a base font.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.FontContainer.RegularFont">
            <summary>
            Gets the regular font.
            </summary>
            <value>The regular version of the base font.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.FontContainer.BoldFont">
            <summary>
            Gets the bold font.
            </summary>
            <value>The scaled, bold version of the base font</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.FontContainer.ItalicFont">
            <summary>
            Gets the italic font.
            </summary>
            <value>The scaled, italic version of the base font</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.FontContainer.BoldItalicFont">
            <summary>
            Gets the bold/italic font.
            </summary>
            <value>The scaled, bold/italic version of the base font</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.FontContainer.TwipsPerPixelY">
            <summary>
            Gets the twips per pixel in y direction.
            </summary>
            <value>The twips per pixel in y direction.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.FontContainer.DefaultFont">
            <summary>
            Gets or sets the default font.
            </summary>
            <value>The base font.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.FontContainer.ParseFont(System.String)">
            <summary>
            Converts a string to <see cref="T:System.Drawing.Font"/> object.
            </summary>
            <param name="font">The font.</param>
            <returns>The font.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.FontContainer.#ctor(System.Drawing.Font)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.FontContainer"/> class.
            </summary>
            <param name="defaultFont">The default font.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightBackground">
            <summary>
            Extends the highlighting color with a background image.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightBackground.BackgroundImage">
            <summary>
            Gets the background image.
            </summary>
            <value>The image used as background.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightBackground.#ctor(System.Xml.XmlElement)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightBackground"/>
            </summary>
            <param name="el">The XML element that describes the highlighting color.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightBackground.#ctor(System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightBackground"/>
            </summary>
            <param name="color">The color.</param>
            <param name="backgroundcolor">The backgroundcolor.</param>
            <param name="bold">if set to <see langword="true"/> [bold].</param>
            <param name="italic">if set to <see langword="true"/> [italic].</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightBackground.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightBackground"/> class.
            </summary>
            <param name="systemColor">Color of the system.</param>
            <param name="systemBackgroundColor">Color of the system background.</param>
            <param name="bold">if set to <see langword="true"/> [bold].</param>
            <param name="italic">if set to <see langword="true"/> [italic].</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor">
            <summary>
            A color/style used for highlighting.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor.HasForeground">
            <summary>
            Gets a value indicating whether <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor"/> has foreground color.
            </summary>
            <value>
            	<see langword="true"/> if this <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor"/> has foreground color; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor.HasBackground">
            <summary>
            Gets a value indicating whether <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor"/> has background color.
            </summary>
            <value>
            	<see langword="true"/> if this <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor"/> has background color; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor.Bold">
            <summary>
            Gets a value indicating whether the font will be displayed bold style.
            </summary>
            <value>If <see langword="true"/> the font will be displayed bold style.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor.Italic">
            <summary>
            Gets a value indicating whether the font will be displayed italic style.
            </summary>
            <value>If <see langword="true"/> the font will be displayed italic style.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor.BackgroundColor">
            <summary>
            Gets the background color.
            </summary>
            <value>The background color used</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor.Color">
            <summary>
            Gets foreground color.
            </summary>
            <value>The foreground color used.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor.GetFont(DigitalRune.Windows.TextEditor.Highlighting.FontContainer)">
            <summary>
            Gets the font.
            </summary>
            <param name="fontContainer">The font container.</param>
            <returns>The font.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor.#ctor(System.Xml.XmlElement)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor"/>
            </summary>
            <param name="el">The XML element that describes the highlighting color.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor.#ctor(System.Xml.XmlElement,DigitalRune.Windows.TextEditor.Highlighting.HighlightColor)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor"/>
            </summary>
            <param name="el">The XML element that describes the highlighting color.</param>
            <param name="defaultColor">The default highlighting color.</param>
            <remarks>
            Attributes that are not explicitly set in the XML element will be inherited
            from <paramref name="defaultColor"/>.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor.#ctor(System.Drawing.Color,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor"/>
            </summary>
            <param name="color">The foreground color.</param>
            <param name="bold">If set to <see langword="true"/> use bold style.</param>
            <param name="italic">If set to <see langword="true"/> use italic style.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor.#ctor(System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor"/>
            </summary>
            <param name="color">The foreground color.</param>
            <param name="backgroundColor">The background color.</param>
            <param name="bold">If set to <see langword="true"/> use bold style.</param>
            <param name="italic">If set to <see langword="true"/> use italic style.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor"/>
            </summary>
            <param name="systemColor">The foreground color (name of a color in <see cref="T:System.Drawing.SystemColors"/>).</param>
            <param name="systemBackgroundColor">The background color (name of a color in <see cref="T:System.Drawing.SystemColors"/>).</param>
            <param name="bold">If set to <see langword="true"/> use bold style.</param>
            <param name="italic">If set to <see langword="true"/> use italic style.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor"/>
            </summary>
            <param name="systemColor">The foreground color (name of a color in <see cref="T:System.Drawing.SystemColors"/>).</param>
            <param name="bold">If set to <see langword="true"/> use bold style.</param>
            <param name="italic">If set to <see langword="true"/> use italic style.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor.ToString">
            <summary>
            Converts a <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor"/> instance to string (for debug purposes)
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightingColorNotFoundException">
            <summary>
            Exception which occurs when a highlighting color is not found.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingColorNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightingColorNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingColorNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightingColorNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingColorNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightingColorNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingColorNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightingColorNotFoundException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightingDefinitionParser">
            <summary>
            Parses syntax highlighting definitions and creates a highlighting strategy.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingDefinitionParser.Parse(DigitalRune.Windows.TextEditor.Highlighting.SyntaxMode,System.Xml.XmlReader)">
            <summary>
            Parses a highlighting definition.
            </summary>
            <param name="syntaxMode">The syntax highlighting mode.</param>
            <param name="xmlReader">The XML reader.</param>
            <returns>The highlighting strategy.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingDefinitionParser.Parse(DigitalRune.Windows.TextEditor.Highlighting.DefaultHighlightingStrategy,DigitalRune.Windows.TextEditor.Highlighting.SyntaxMode,System.Xml.XmlReader)">
            <summary>
            Parses a highlighting definition.
            </summary>
            <param name="highlighter">The highlighting strategy, which is set.</param>
            <param name="syntaxMode">The syntax highlighting mode.</param>
            <param name="xmlReader">The XML reader.</param>
            <returns></returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightingManager">
            <summary>
            Manages syntax highlighting.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Highlighting.HighlightingManager.SyntaxHighlightingReloaded">
            <summary>
            Occurs when syntax highlighting definitions are reloaded.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightingManager.HighlightingDefinitions">
            <summary>
            Gets the syntax highlighting definitions.
            </summary>
            <value>The syntax highlighting definitions.</value>
            <remarks>
            This is a hash table from extension name to highlighting definition, 
            OR from extension name to pair SyntaxMode,ISyntaxModeFileProvider
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightingManager.DefaultHighlighting">
            <summary>
            Gets the default highlighting strategy.
            </summary>
            <value>The default highlighting strategy.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightingManager.Manager">
            <summary>
            Gets the manager (singleton).
            </summary>
            <value>The manager.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightingManager"/> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingManager.AddSyntaxModeFileProvider(DigitalRune.Windows.TextEditor.Highlighting.ISyntaxModeFileProvider)">
            <summary>
            Adds the syntax mode provider.
            </summary>
            <param name="syntaxModeFileProvider">The syntax mode file provider.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingManager.AddHighlightingStrategy(DigitalRune.Windows.TextEditor.Highlighting.IHighlightingStrategy)">
            <summary>
            Adds the highlighting strategy.
            </summary>
            <param name="highlightingStrategy">The highlighting strategy.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingManager.ReloadSyntaxModes">
            <summary>
            Reloads the syntax modes.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingManager.FindHighlighter(System.String)">
            <summary>
            Finds the syntax highlighting strategy.
            </summary>
            <param name="name">The name of the syntax highlighting strategy.</param>
            <returns>The syntax highlighting strategy.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingManager.FindHighlighterForFile(System.String)">
            <summary>
            Finds the syntax highlighting strategy for file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>The syntax highlighting strategy.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingManager.OnSyntaxHighlightingReloaded(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Highlighting.HighlightingManager.SyntaxHighlightingReloaded"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightingStrategyFactory">
            <summary>
            Factory for creating syntax highlighting strategies.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingStrategyFactory.CreateHighlightingStrategy">
            <summary>
            Creates the default syntax highlighting strategy.
            </summary>
            <returns>The default syntax highlighting strategy</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingStrategyFactory.CreateHighlightingStrategy(System.String)">
            <summary>
            Creates the syntax highlighting strategy.
            </summary>
            <param name="name">The name of the syntax highlighting strategy.</param>
            <returns>The syntax highlighting strategy</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightingStrategyFactory.CreateHighlightingStrategyForFile(System.String)">
            <summary>
            Creates the syntax highlighting strategy for a file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns>The syntax highlighting strategy.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet">
            <summary>
            Defines a set of syntax highlighting rules.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet.Delimiters">
            <summary>
            Gets an array that defines for each character whether it is an delimiter.
            </summary>
            <value>
            An array that defines for each character whether it is an delimiter.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet.Spans">
            <summary>
            Gets the spans.
            </summary>
            <value>The spans.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet.Highlighter">
            <summary>
            Gets or sets the highlighting strategy.
            </summary>
            <value>The highlighting strategy.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet.KeyWords">
            <summary>
            Gets the lookup table for keywords.
            </summary>
            <value>The lookup table for keywords.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet.PrevMarkers">
            <summary>
            Gets the lookup table for strings that mark the previous token.
            </summary>
            <value>The lookup table for strings that mark the previous token.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet.NextMarkers">
            <summary>
            Gets the lookup table for strings that mark the next token.
            </summary>
            <value>The lookup table for strings that mark the next token.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet.EscapeCharacter">
            <summary>
            Gets the escape character.
            </summary>
            <value>The escape character.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet.IgnoreCase">
            <summary>
            Gets a value indicating whether this rule is case-sensitive or not.
            </summary>
            <value><see langword="true"/> if case-insensitive; <see langword="false"/> if case-sensitive.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet.HighlightDigits">
            <summary>
            Gets a value indicating whether digits should be highlighted.
            </summary>
            <value>
            	<see langword="true"/> if digits in the span are highlighted; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet.Reference">
            <summary>
            Gets the reference rule set.
            </summary>
            <value>The reference rule set.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet"/> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet.#ctor(System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet"/> class.
            </summary>
            <param name="el">The XML element that describes the rule set.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet.MergeFrom(DigitalRune.Windows.TextEditor.Highlighting.HighlightRuleSet)">
            <summary>
            Merges spans etc. from the other rule set into this rule set.
            </summary>
            <param name="ruleSet">The rule set.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.IHighlightingStrategy">
            <summary>
            A highlighting strategy for a buffer.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.IHighlightingStrategy.Name">
            <summary>
            Gets the name of the highlighting strategy (must be unique).
            </summary>
            <value>The name of the highlighting strategy (must be unique).</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.IHighlightingStrategy.Extensions">
            <summary>
            Gets the file extensions on which this highlighting strategy gets used.
            </summary>
            <value>
            The file extensions on which this highlighting strategy gets used.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.IHighlightingStrategy.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.IHighlightingStrategy.GetColorFor(System.String)">
            <summary>
            Gets the color of an environment element.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>The color of an environment element.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.IHighlightingStrategy.MarkTokens(DigitalRune.Windows.TextEditor.Document.IDocument,System.Collections.Generic.List{DigitalRune.Windows.TextEditor.Document.LineSegment})">
            <summary>
            Marks the tokens. Used internally, do not call.
            </summary>
            <param name="document">The document.</param>
            <param name="lines">The lines.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.IHighlightingStrategy.MarkTokens(DigitalRune.Windows.TextEditor.Document.IDocument)">
            <summary>
            Marks the tokens. Used internally, do not call.
            </summary>
            <param name="document">The document.</param>
            <remarks>
            Used internally, do not call.
            </remarks>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.IHighlightingStrategyUsingRuleSets">
            <summary>
            A highlighting strategy that is based on rule sets.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.IHighlightingStrategyUsingRuleSets.GetRuleSet(DigitalRune.Windows.TextEditor.Highlighting.Span)">
            <summary>
            Gets the rule set for the given span.
            </summary>
            <param name="span">The span.</param>
            <returns>The rule set.</returns>
            <remarks>
            Used internally, do not call
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.IHighlightingStrategyUsingRuleSets.GetColor(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Document.LineSegment,System.Int32,System.Int32)">
            <summary>
            Gets the highlighting color for the specified text.
            </summary>
            <param name="document">The document.</param>
            <param name="line">The line.</param>
            <param name="index">The index.</param>
            <param name="length">The length.</param>
            <returns>The highlighting color for the specified text.</returns>
            <remarks>
            Used internally, do not call
            </remarks>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.NextMarker">
            <summary>
            Used to mark next token.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.NextMarker.What">
            <summary>
            Gets the string that indicates that the next token should be marked.
            </summary>
            <value>The string that indicates that the next token should be marked.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.NextMarker.Color">
            <summary>
            Gets the highlighting color for the next token.
            </summary>
            <value>Color for marking next token.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.NextMarker.MarkMarker">
            <summary>
            Gets a value indicating whether indication text (<see cref="P:DigitalRune.Windows.TextEditor.Highlighting.NextMarker.What"/>) should 
            marked with the same color.
            </summary>
            <value>
            <see langword="true"/> if the indication text (<see cref="P:DigitalRune.Windows.TextEditor.Highlighting.NextMarker.What"/>) should 
            marked with the same color.
            </value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.NextMarker.#ctor(System.Xml.XmlElement)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.NextMarker"/>
            </summary>
            <param name="mark">The XML element that defines this <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.NextMarker"/>.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.PrevMarker">
            <summary>
            Used to mark previous token.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.PrevMarker.What">
            <summary>
            Gets the string that indicates that the previous token should be marked.
            </summary>
            <value>The string that indicates that the previous token should be marked.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.PrevMarker.Color">
            <summary>
            Gets the highlighting color for the previous token.
            </summary>
            <value>Color for marking previous token.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.PrevMarker.MarkMarker">
            <summary>
            Gets a value indicating whether indication text (<see cref="P:DigitalRune.Windows.TextEditor.Highlighting.PrevMarker.What"/>) should 
            marked with the same color.
            </summary>
            <value>
            <see langword="true"/> if the indication text (<see cref="P:DigitalRune.Windows.TextEditor.Highlighting.PrevMarker.What"/>) should 
            marked with the same color.
            </value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.PrevMarker.#ctor(System.Xml.XmlElement)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.PrevMarker"/>
            </summary>
            <param name="mark">The XML element that defines this <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.PrevMarker"/>.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.Span">
            <summary>
            Defines a span (for example: strings, line comments, block comments, etc.).
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.Span.Begin">
            <summary>
            Gets the expression that defines the begin of the span.
            </summary>
            <value>The expression that defines the begin of the span.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.Span.End">
            <summary>
            Gets the expression that defines the end of the span.
            </summary>
            <value>The expression that defines the end of the span.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.Span.RuleSet">
            <summary>
            Gets or sets the rule set.
            </summary>
            <value>The rule set.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.Span.IgnoreCase">
            <summary>
            Gets or sets a value indicating whether to ignore the case.
            </summary>
            <value><see langword="true"/> to ignore the case; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.Span.StopEOL">
            <summary>
            Gets a value indicating whether stop the span at the end of the line.
            </summary>
            <value><see langword="true"/> if the span stops at the end of the line; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.Span.IsBeginStartOfLine">
            <summary>
            Gets a value indicating whether this span starts with the begin of a line.
            </summary>
            <value>A value indicating whether this span starts with the begin of a line.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.Span.IsBeginSingleWord">
            <summary>
            Gets a value indicating whether this span begins with a single word.
            </summary>
            <value>
            	<see langword="true"/> if this span begins with a single word; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.Span.IsEndSingleWord">
            <summary>
            Gets a value indicating whether this span ends with a single word.
            </summary>
            <value>
            	<see langword="true"/> if this span ends with a single word; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.Span.Color">
            <summary>
            Gets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.Span.BeginColor">
            <summary>
            Gets the color of the begin of the span.
            </summary>
            <value>The color of the begin of the span.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.Span.EndColor">
            <summary>
            Gets the end color of the span.
            </summary>
            <value>The end color of the span.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.Span.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.Span.Rule">
            <summary>
            Gets the rule applied to this span.
            </summary>
            <value>The rule applied to this span.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.Span.EscapeCharacter">
            <summary>
            Gets the escape character of the span. The escape character is a character that can be used in front
            of the span end to make it not end the span. The escape character followed by another escape character
            means the escape character was escaped like in @"a "" b" literals in C#.
            The default value '\0' means no escape character is allowed.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.Span.#ctor(System.Xml.XmlElement)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.Span"/> class.
            </summary>
            <param name="span">The XML element that describes the span.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.TextWordType">
            <summary>
            Types of words in a line.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Highlighting.TextWordType.Word">
            <summary>A word.</summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Highlighting.TextWordType.Space">
            <summary>A space.</summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Highlighting.TextWordType.Tab">
            <summary>A tab.</summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord">
            <summary>
            This class represents single words with color information, two special versions of a word are
            spaces and tabs.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord.SpaceTextWord">
            <summary>
            A space (special type of <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord"/>).
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.TextWord.SpaceTextWord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord.SpaceTextWord"/> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.TextWord.SpaceTextWord.#ctor(DigitalRune.Windows.TextEditor.Highlighting.HighlightColor)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord.SpaceTextWord"/> class.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.TextWord.SpaceTextWord.GetFont(DigitalRune.Windows.TextEditor.Highlighting.FontContainer)">
            <summary>
            Gets the font.
            </summary>
            <param name="fontContainer">The font container.</param>
            <returns>Always <see langword="null"/>.</returns>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.TextWord.SpaceTextWord.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type (<see cref="F:DigitalRune.Windows.TextEditor.Highlighting.TextWordType.Space"/>).</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.TextWord.SpaceTextWord.IsWhiteSpace">
            <summary>
            Gets a value indicating whether this instance is a whitespace.
            </summary>
            <value>
            	<see langword="true"/>.
            </value>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord.TabTextWord">
            <summary>
            A tab (special type of <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord"/>).
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.TextWord.TabTextWord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord.TabTextWord"/> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.TextWord.TabTextWord.#ctor(DigitalRune.Windows.TextEditor.Highlighting.HighlightColor)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord.TabTextWord"/> class.
            </summary>
            <param name="color">The color.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.TextWord.TabTextWord.GetFont(DigitalRune.Windows.TextEditor.Highlighting.FontContainer)">
            <summary>
            Gets the font.
            </summary>
            <param name="fontContainer">The font container.</param>
            <returns>Always <see langword="null"/>.</returns>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.TextWord.TabTextWord.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type (<see cref="F:DigitalRune.Windows.TextEditor.Highlighting.TextWordType.Tab"/>).</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.TextWord.TabTextWord.IsWhiteSpace">
            <summary>
            Gets a value indicating whether this instance is a whitespace.
            </summary>
            <value>
            	<see langword="true"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.TextWord.Space">
            <summary>
            Gets a space (special type of <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord"/>).
            </summary>
            <value>The space.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.TextWord.Tab">
            <summary>
            Gets a tab (special type of <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord"/>).
            </summary>
            <value>The tab.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.TextWord.Offset">
            <summary>
            Gets the offset of the word in the current line.
            </summary>
            <value>The offset of the word in the current line.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.TextWord.Length">
            <summary>
            Gets the length of the word.
            </summary>
            <value>The length of the word.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.TextWord.Split(DigitalRune.Windows.TextEditor.Highlighting.TextWord@,System.Int32)">
            <summary>
            Splits the word into two parts. 
            </summary>
            <param name="word">The word.</param>
            <param name="pos">The position, which lies in the range <c>[1, Length - 1]</c>.</param>
            <returns>The part after <paramref name="pos"/> is returned as a new <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord"/>.</returns>
            <remarks>
            The part before <paramref name="pos"/> is assigned to
            the reference parameter <paramref name="word"/>, the part after <paramref name="pos"/> is returned.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.TextWord.HasDefaultColor">
            <summary>
            Gets a value indicating whether this instance has default color.
            </summary>
            <value>
            	<see langword="true"/> if this instance has default color; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.TextWord.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.TextWord.Word">
            <summary>
            Gets the word.
            </summary>
            <value>The word.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.TextWord.GetFont(DigitalRune.Windows.TextEditor.Highlighting.FontContainer)">
            <summary>
            Gets the font.
            </summary>
            <param name="fontContainer">The font container.</param>
            <returns>The font.</returns>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.TextWord.Color">
            <summary>
            Gets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.TextWord.Bold">
            <summary>
            Gets a value indicating whether this <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord"/> is bold.
            </summary>
            <value><see langword="true"/> if bold; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.TextWord.Italic">
            <summary>
            Gets a value indicating whether this <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord"/> is italic.
            </summary>
            <value><see langword="true"/> if italic; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.TextWord.SyntaxColor">
            <summary>
            Gets or sets the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.HighlightColor"/>.
            </summary>
            <value>The color for the syntax highlighting.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.TextWord.IsWhiteSpace">
            <summary>
            Gets a value indicating whether this instance is a whitespace.
            </summary>
            <value>
            	<see langword="true"/> if this instance is whitespace; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.TextWord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord"/> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.TextWord.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Document.LineSegment,System.Int32,System.Int32,DigitalRune.Windows.TextEditor.Highlighting.HighlightColor,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord"/> class.
            </summary>
            <param name="document">The document.</param>
            <param name="line">The line.</param>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
            <param name="color">The color.</param>
            <param name="hasDefaultColor">if set to <see langword="true"/> [has default color].</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.TextWord.ToString">
            <summary>
            Converts a <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.TextWord"/> instance to string (for debug purposes)
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.LookupTable">
            <summary>
            This class implements a keyword map. It implements a digital search tree (tries) to find
            a word.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.LookupTable.Count">
            <summary>
            Gets the number of elements in the table.
            </summary>
            <value>The number of elements in the table.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.LookupTable.Item(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Document.LineSegment,System.Int32,System.Int32)">
            <summary>
            Get the object that was inserted under the keyword.
            </summary>
            <value>The object that was inserted under the keyword.</value>
            <remarks>
            <para>
            The keyword is taken from an <see cref="T:DigitalRune.Windows.TextEditor.Document.IDocument"/> at a given location
            (line, offset in line, length).
            </para>
            <para>
            Returns <see langword="null"/>, if no such keyword exists.
            </para>
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.LookupTable.Item(System.String)">
            <summary>
            Gets or sets an object in the tree under the keyword.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.LookupTable.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.LookupTable"/>
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.ISyntaxModeFileProvider">
            <summary>
            Provides syntax highlighting definitions.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.ISyntaxModeFileProvider.SyntaxModes">
            <summary>
            Gets the provided syntax highlighting modes.
            </summary>
            <value>The syntax highlighting modes.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.ISyntaxModeFileProvider.GetSyntaxModeFile(DigitalRune.Windows.TextEditor.Highlighting.SyntaxMode)">
            <summary>
            Gets the syntax highlighting definition for a certain syntax.
            </summary>
            <param name="syntaxMode">The syntax.</param>
            <returns>The syntax highlighting definition.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.ISyntaxModeFileProvider.UpdateSyntaxModeList">
            <summary>
            Updates the list of syntax highlighting modes.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.SyntaxMode">
            <summary>
            Describes a syntax highlighting mode.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.SyntaxMode.FileName">
            <summary>
            Gets or sets the file name of the syntax highlighting definition file.
            </summary>
            <value>The file name of the syntax highlighting definition file.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.SyntaxMode.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.SyntaxMode.Extensions">
            <summary>
            Gets or sets the file extensions of files of files that have this syntax.
            </summary>
            <value>The file extensions.</value>
            <remarks>
            For example: C++ file extension are ".c;.h;.cc;.C;.cpp;.hpp"
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.SyntaxMode.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.SyntaxMode"/> class.
            </summary>
            <param name="fileName">Name of the syntax highlighting definition file.</param>
            <param name="name">The name of the syntax.</param>
            <param name="extensions">
            The file extensions (extensions need to be separated by ';', '|' or ','). 
            For example: <c>".htm;.html"</c>
            </param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.SyntaxMode.#ctor(System.String,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.SyntaxMode"/> class.
            </summary>
            <param name="fileName">Name of the syntax highlighting definition file.</param>
            <param name="name">The name of the syntax.</param>
            <param name="extensions">The file extensions (for example: <c>".html"</c>, <c>".htm"</c>, etc.)</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.SyntaxMode.GetSyntaxModes(System.IO.Stream)">
            <summary>
            Gets a list of provided syntax modes.
            </summary>
            <param name="xmlSyntaxModeStream">The XML syntax mode stream.</param>
            <returns>A list of provided syntax modes.</returns>
            <remarks>
            Have a look at <c>Resources/SyntaxModes.xml</c> in this project.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.SyntaxMode.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.ResourceSyntaxModeProvider">
            <summary>
            Provides that syntax highlighting defintions which are stored as resources
            in this assembly.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.ResourceSyntaxModeProvider.SyntaxModes">
            <summary>
            Gets the provided syntax highlighting modes.
            </summary>
            <value>The syntax highlighting modes.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.ResourceSyntaxModeProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.ResourceSyntaxModeProvider"/> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.ResourceSyntaxModeProvider.GetSyntaxModeFile(DigitalRune.Windows.TextEditor.Highlighting.SyntaxMode)">
            <summary>
            Gets the syntax highlighting definition for a certain syntax.
            </summary>
            <param name="syntaxMode">The syntax.</param>
            <returns>The syntax highlighting definition.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.ResourceSyntaxModeProvider.UpdateSyntaxModeList">
            <summary>
            Updates the list of syntax highlighting modes.
            </summary>
            <remarks>
            Has no effect in this case, because the resources cannot change during
            runtime.
            </remarks>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.FileSyntaxModeProvider">
            <summary>
            Provides syntax highlighting definitions which are stored in a directory.
            </summary>
            <remarks>
            The directory needs to contain the syntax modes file (<c>"SyntaxModes.xml"</c>) 
            and a syntax highlighting definition for each syntax (<c>"*.xshd"</c>).
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.FileSyntaxModeProvider.SyntaxModes">
            <summary>
            Gets the provided syntax highlighting modes.
            </summary>
            <value>The syntax highlighting modes.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.FileSyntaxModeProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.FileSyntaxModeProvider"/> class.
            </summary>
            <param name="directory">The directory.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.FileSyntaxModeProvider.UpdateSyntaxModeList">
            <summary>
            Updates the list of syntax highlighting modes.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.FileSyntaxModeProvider.GetSyntaxModeFile(DigitalRune.Windows.TextEditor.Highlighting.SyntaxMode)">
            <summary>
            Gets the syntax highlighting definition for a certain syntax.
            </summary>
            <param name="syntaxMode">The syntax.</param>
            <returns>The syntax highlighting definition.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.SpanStack">
            <summary>
            A stack of Span instances. 
            </summary>
            <remarks>
            Works like Stack&lt;Span&gt;, but can be cloned quickly because it is 
            implemented as linked list.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.SpanStack.IsEmpty">
            <summary>
            Gets a value indicating whether stack is empty.
            </summary>
            <value><see langword="true"/> if the stack is empty; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.SpanStack.Pop">
            <summary>
            Removes a span from the top of the stack.
            </summary>
            <returns>The span on top of the stack.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.SpanStack.Peek">
            <summary>
            Returns the span on top of the stack (but does not remove it from the stack).
            </summary>
            <returns>The span on top of the stack.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.SpanStack.Push(DigitalRune.Windows.TextEditor.Highlighting.Span)">
            <summary>
            Puts a span on top of the stack.
            </summary>
            <param name="s">The span.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.SpanStack.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A clone of this stack.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.SpanStack.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.SpanStack.GetEnumerator">
            <summary>
            Gets the enumerator for this stack.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlighting.SpanStack.Enumerator">
            <summary>
            Enumerates a <see cref="T:DigitalRune.Windows.TextEditor.Highlighting.SpanStack"/> from top to bottom of the stack.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlighting.SpanStack.Enumerator.Current">
            <summary>
            Gets the current span.
            </summary>
            <value>The current.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.SpanStack.Enumerator.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.SpanStack.Enumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the stack (top-down).
            </summary>
            <returns>
            <see langword="true"/> if the enumerator was successfully advanced to the next element; <see langword="false"/> if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlighting.SpanStack.Enumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Markers.MarkerType">
            <summary>
            Defines the type of a <see cref="T:DigitalRune.Windows.TextEditor.Markers.Marker"/>.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Markers.MarkerType.Invisible">
            <summary>
            An invisible marker.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Markers.MarkerType.SolidBlock">
            <summary>
            A solid colored block in the background of the text.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Markers.MarkerType.Underlined">
            <summary>
            An underline.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Markers.MarkerType.WaveLine">
            <summary>
            A zigzag line below the text.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Markers.MarkerStrategy">
            <summary>
            Manages the list of markers and provides ways to retrieve markers for 
            specific positions.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Markers.MarkerStrategy.Document">
            <summary>
            Gets the document.
            </summary>
            <value>The document.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Markers.MarkerStrategy.TextMarker">
            <summary>
            Gets the text markers.
            </summary>
            <value>The text markers.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Markers.MarkerStrategy.AddMarker(DigitalRune.Windows.TextEditor.Markers.Marker)">
            <summary>
            Adds a text marker.
            </summary>
            <param name="item">The text marker.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Markers.MarkerStrategy.InsertMarker(System.Int32,DigitalRune.Windows.TextEditor.Markers.Marker)">
            <summary>
            Inserts a text marker.
            </summary>
            <param name="index">The index at which to insert the marker.</param>
            <param name="item">The text marker.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Markers.MarkerStrategy.RemoveMarker(DigitalRune.Windows.TextEditor.Markers.Marker)">
            <summary>
            Removes a text marker.
            </summary>
            <param name="item">The text marker.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Markers.MarkerStrategy.Clear">
            <summary>
            Removes all text markers.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Markers.MarkerStrategy.RemoveAll(System.Predicate{DigitalRune.Windows.TextEditor.Markers.Marker})">
            <summary>
            Removes all text markers that match a given criteria.
            </summary>
            <param name="match">The match.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Markers.MarkerStrategy.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Markers.MarkerStrategy"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Markers.MarkerStrategy.GetMarkers(System.Int32)">
            <summary>
            Retrieves the text markers that contain a specific offset.
            </summary>
            <param name="offset">The offset in the document.</param>
            <returns>
            The text marker at <paramref name="offset"/>. Returns an empty list if
            no marker contains the offset.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Markers.MarkerStrategy.GetMarkers(System.Int32,System.Int32)">
            <summary>
            Retrieves all text markers in a given region.
            </summary>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
            <returns>A list of all text markers in this region.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Markers.MarkerStrategy.GetMarkers(DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Retrieves a list of all text markers at a given position.
            </summary>
            <param name="position">The position in the document.</param>
            <returns>A list of all text markers at <paramref name="position"/>.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Markers.Marker">
            <summary>
            Marks a part of a document.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Markers.Marker.Offset">
            <summary>
            Gets or sets the offset.
            </summary>
            <value>The offset where the span begins</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Markers.Marker.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>The length of the span</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Markers.Marker.MarkerType">
            <summary>
            Gets the type of the text marker.
            </summary>
            <value>The type of the text marker.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Markers.Marker.Color">
            <summary>
            Gets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Markers.Marker.TextColor">
            <summary>
            Gets the foreground color of the text.
            </summary>
            <value>The foreground color of the text.</value>
            <remarks>
            Only relevant when <see cref="P:DigitalRune.Windows.TextEditor.Markers.Marker.MarkerType"/> is <c>SolidBlock</c>.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Markers.Marker.OverrideTextColor">
            <summary>
            Gets a value indicating whether to override the foreground color of the text.
            </summary>
            <value>
            <see langword="true"/> if the foreground color of the text shall be overriden; otherwise, 
            <see langword="false"/>.
            </value>
            <remarks>
            Only relevant when <see cref="P:DigitalRune.Windows.TextEditor.Markers.Marker.MarkerType"/> is <c>SolidBlock</c>.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Markers.Marker.IsReadOnly">
            <summary>
            Marks the text segment as read-only.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Markers.Marker.ToolTip">
            <summary>
            Gets or sets the tool tip of the text marker.
            </summary>
            <value>The tool tip.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Markers.Marker.EndOffset">
            <summary>
            Gets the last offset that is inside the marker region.
            </summary>
            <value>The end offset.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Markers.Marker.#ctor(System.Int32,System.Int32,DigitalRune.Windows.TextEditor.Markers.MarkerType)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Markers.Marker"/> class.
            </summary>
            <param name="offset">The offset of the marked region.</param>
            <param name="length">The length of the marked region.</param>
            <param name="markerType">Type of the text marker.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Markers.Marker.#ctor(System.Int32,System.Int32,DigitalRune.Windows.TextEditor.Markers.MarkerType,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Markers.Marker"/> class.
            </summary>
            <param name="offset">The offset of the marked region.</param>
            <param name="length">The length of the marked region.</param>
            <param name="markerType">Type of the text marker.</param>
            <param name="color">The color of the text marker.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Markers.Marker.#ctor(System.Int32,System.Int32,DigitalRune.Windows.TextEditor.Markers.MarkerType,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Markers.Marker"/> class.
            </summary>
            <param name="offset">The offset of the marked region.</param>
            <param name="length">The length of the marked region.</param>
            <param name="markerType">Type of the text marker.</param>
            <param name="color">The color of the text marker.</param>
            <param name="foreColor">The foreground color of the text.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Markers.Marker.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Markers.Marker.IsReadOnlyPredicate(DigitalRune.Windows.TextEditor.Markers.Marker)">
            <summary>
            Determines whether the given marker is read-only.
            </summary>
            <param name="marker">The marker.</param>
            <returns>
            	<see langword="true"/> if the specified marker is read-only; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Utilities.CheckedList`1">
            <summary>
            A <see cref="T:System.Collections.Generic.IList`1"/> that checks that it is only accessed on the thread that created it, 
            and that it is not modified while an enumerator is running.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Utilities.MouseWheelHandler">
            <summary>
            Accumulates mouse wheel deltas and reports the actual number of lines to scroll.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.MouseWheelHandler.GetScrollAmount(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Gets the amount of lines to scroll.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns>The number of lines to scroll.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Utilities.AugmentableRedBlackTree`2">
            <summary>
            Description of RedBlackTree.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.AugmentableRedBlackTree`2.Find(`0)">
            <summary>
            Returns the iterator pointing to the specified item, or an iterator in End state if the item is not found.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.AugmentableRedBlackTree`2.LowerBound(`0)">
            <summary>
            Returns the iterator pointing to the first item greater or equal to <paramref name="item"/>.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.AugmentableRedBlackTree`2.UpperBound(`0)">
            <summary>
            Returns the iterator pointing to the first item greater than <paramref name="item"/>.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.AugmentableRedBlackTree`2.Begin">
            <summary>
            Gets a tree iterator that starts on the first node.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.AugmentableRedBlackTree`2.GetEnumerator">
            <summary>
            Gets a tree iterator that starts one node before the first node.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Utilities.RtfWriter">
            <summary>
            Converts the selected text of a <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/> into Rich Text Format.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.RtfWriter.GenerateRtf(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Generates the Rich Text from the selection of a <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area.</param>
            <returns>The selected text in Rich Text Format.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.RtfWriter.GenerateRtfInternal(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Generates the Rich Text from the selection of a <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="textArea">The text area.</param>
            <returns>The selected text in Rich Text Format.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Utilities.FileReader">
            <summary>
            Reads text files with automatic detection of the encoding.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.FileReader.IsUnicode(System.Text.Encoding)">
            <summary>
            Determines whether the specified encoding is Unicode.
            </summary>
            <param name="encoding">The encoding.</param>
            <returns>
            	<see langword="true"/> if the specified encoding is Unicode; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.FileReader.ReadFileContent(System.IO.Stream,System.Text.Encoding@)">
            <summary>
            Reads the content of the file.
            </summary>
            <param name="fs">The file stream.</param>
            <param name="encoding">The encoding.</param>
            <returns>The contents of the file.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.FileReader.ReadFileContent(System.String,System.Text.Encoding)">
            <summary>
            Reads the content of the file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="encoding">The encoding.</param>
            <returns>The contents of the file.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.FileReader.OpenStream(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Opens a stream.
            </summary>
            <param name="fs">The fs.</param>
            <param name="defaultEncoding">The default encoding.</param>
            <returns>The stream reader.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Utilities.WeakCollection`1">
            <summary>
            A collection that allows its elements to be garbage-collected (unless there are other
            references to the elements). 
            </summary>
            <remarks>
            <para>
            Elements will disappear from the collection when they are garbage-collected.
            </para>
            <para>
            The <see cref="T:DigitalRune.Windows.TextEditor.Utilities.WeakCollection`1"/> is not thread-safe, not even for read-only access!
            No methods may be called on the <see cref="T:DigitalRune.Windows.TextEditor.Utilities.WeakCollection`1"/> while it is enumerated, not 
            even a <see cref="M:DigitalRune.Windows.TextEditor.Utilities.WeakCollection`1.Contains(`0)"/> or creating a second enumerator.
            </para>
            <para>
            The <see cref="T:DigitalRune.Windows.TextEditor.Utilities.WeakCollection`1"/> does not preserve any order among its contents; the 
            ordering may be different each time the collection is enumerated.
            </para>
            <para>
            Since items may disappear at any time when they are garbage collected, this class
            cannot provide a useful implementation for <see cref="P:System.Collections.Generic.ICollection`1.Count"/> and thus cannot 
            implement the <see cref="T:System.Collections.Generic.ICollection`1"/> interface.	
            </para>
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.WeakCollection`1.Add(`0)">
            <summary>
            Adds an element to the collection.
            </summary>
            <param name="item">The item to add.</param>
            <remarks>
            Runtime: O(n).
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.WeakCollection`1.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
            <remarks>
            Runtime: O(n).
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.WeakCollection`1.Contains(`0)">
            <summary>
            Checks if the collection contains an item.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<see langword="true"/> if the collection contains the specified item; otherwise, <see langword="false"/>.
            </returns>
            <remarks>
            Runtime: O(n).
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.WeakCollection`1.Remove(`0)">
            <summary>
            Removes an element from the collection.
            </summary>
            <param name="item">The item to remove.</param>
            <returns>
            <see langword="true"/> if the item is found and removed, <see langword="false"/> when the item is not found.
            </returns>
            <remarks>
            Runtime: O(n).
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.WeakCollection`1.GetEnumerator">
            <summary>
            Enumerates the collection. 
            </summary>
            <remarks>
            Each MoveNext() call on the enumerator is O(1), thus the enumeration is O(n).
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Utilities.WeakCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.TextHelper">
            <summary>
            Helper functions for manipulating text.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.TextHelper.CharacterType">
            <summary>
            Types of characters
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.TextHelper.CharacterType.LetterDigitOrUnderscore">
            <summary>
            A letter, digit or underscore.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.TextHelper.CharacterType.WhiteSpace">
            <summary>
            A whitespace character.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.TextHelper.CharacterType.Other">
            <summary>
            Any other character (no letter, digit, or whitespace).
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.IsLetterDigitOrUnderscore(System.Char)">
            <summary>
            Determines whether a character is a letter, a digit, or an underscore.
            </summary>
            <param name="c">The character.</param>
            <returns>
            <see langword="true"/> if <paramref name="c"/> is a letter, a digit, or an underscore; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.GetCharacterType(System.Char)">
            <summary>
            Gets the type of the character.
            </summary>
            <param name="c">The character.</param>
            <returns>The character type.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.GetLineAsString(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32)">
            <summary>
            Gets the line of the document as <see cref="T:System.String"/>.
            </summary>
            <param name="document">The document.</param>
            <param name="lineNumber">The line number.</param>
            <returns>The line as <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.IsEmptyLine(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32)">
            <summary>
            Determines whether a line of a document is empty (no characters or whitespaces).
            </summary>
            <param name="document">The document.</param>
            <param name="lineNumber">The line number.</param>
            <returns>
            <see langword="true"/> if line is empty of filled with whitespaces; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.IsEmptyLine(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Document.LineSegment)">
            <summary>
            Determines whether a line of a document is empty (no characters or whitespaces).
            </summary>
            <param name="document">The document.</param>
            <param name="line">The line.</param>
            <returns>
            	<see langword="true"/> if line is empty of filled with whitespaces; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.FindFirstNonWhitespace(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32)">
            <summary>
            Gets the offset of the first non-whitespace character.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset where to start the search.</param>
            <returns>
            The offset of the first non-whitespace at or after <paramref name="offset"/>.
            <see cref="P:DigitalRune.Windows.TextEditor.Document.IDocument.TextLength"/> is returned if no non-whitespace is found.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.FindOpeningBracket(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Char,System.Char)">
            <summary>
            Finds the offset of the opening bracket in the block defined by offset skipping
            brackets, strings and comments.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset of an position in the block (before the closing bracket).</param>
            <param name="openBracket">The character for the opening bracket.</param>
            <param name="closingBracket">The character for the closing bracket.</param>
            <returns>
            Returns the offset of the opening bracket or -1 if no matching bracket was found.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.FindClosingBracket(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Char,System.Char)">
            <summary>
            Finds the offset of the closing bracket in the block defined by offset skipping
            brackets, strings and comments.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset of an position in the block (after the opening bracket).</param>
            <param name="openBracket">The character for the opening bracket.</param>
            <param name="closingBracket">The character for the closing bracket.</param>
            <returns>
            Returns the offset of the closing bracket or -1 if no matching bracket was found.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.GetIdentifierAt(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32)">
            <summary>
            Gets the identifier at the given offset in the document.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset of part of the identifier.</param>
            <returns>The identifier at <paramref name="offset"/>.</returns>
            <remarks>
            An identifier is a single word consisting of letters, digits, or underscores.
            An identifier must start with a letter or underscore.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.FindStartOfIdentifier(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32)">
            <summary>
            Finds the start of the identifier at the given offset.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset.</param>
            <returns>
            The offset of the first character of the identifier; or -1 if there is no
            identifier at the specified offset.
            </returns>
            <remarks>
            <para>
            An identifier is a single word consisting of letters, digits, or underscores.
            An identifier must start with a letter or underscore.
            </para>
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.FindEndOfIdentifier(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32)">
            <summary>
            Finds the end of the identifier at the given offset.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset.</param>
            <returns>
            The offset of the last character of the identifier; or -1 if there is no
            identifier at the specified offset.
            </returns>
            <remarks>
            <para>
            An identifier is a single word consisting of letters, digits, or underscores.
            An identifier must start with a letter or underscore.
            </para>
            <para>
            <strong>Important: </strong>This method does not guarantee that the word
            at <paramref name="offset"/> is an identifier - it could also be a number instead of
            an identifier. To make sure that the current word is really an identifier, you should 
            search for the start of the identifier and check whether it starts with a letter or 
            underscore.
            </para>
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.FindPrevWordStart(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32)">
            <summary>
            Finds the start offset the word at or before the specified offset.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset.</param>
            <returns>The start of the word before <paramref name="offset"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.FindNextWordStart(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32)">
            <summary>
            Finds the offset where the next word starts.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset.</param>
            <returns>The start of the next word after <paramref name="offset"/>.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.GetWordBeforeCaret(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Gets the word before caret.
            </summary>
            <returns>The word.</returns>
            <remarks>
            The 
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.DeleteWordBeforeCaret(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Deletes the word before caret.
            </summary>
            <returns>The new offset of the caret.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.GetExpressionBeforeOffset(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32)">
            <summary>
            Gets the expression before a given offset.
            </summary>
            <param name="document">The document.</param>
            <param name="initialOffset">The initial offset.</param>
            <returns>The expression.</returns>
            <remarks>
            This method returns the expression before a specified offset.
            That method is used in code completion to determine the expression before
            the caret. The expression can be passed to a parser to resolve the type
            or similar.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.CompareSegment(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Document.ISegment,System.String)">
            <summary>
            Checks whether a region (offset + length) matches a given word.
            </summary>
            <param name="document">The document.</param>
            <param name="segment">The segment of the document to compare against <paramref name="word"/>.</param>
            <param name="word">The word.</param>
            <returns><see langword="true"/> if region matches word.</returns>
            <remarks>
            The comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.CompareSegment(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Document.ISegment,System.String,System.Boolean)">
            <summary>
            Checks whether a region (offset + length) matches a given word.
            </summary>
            <param name="document">The document.</param>
            <param name="segment">The segment of the document to compare against <paramref name="word"/>.</param>
            <param name="word">The word.</param>
            <param name="caseSensitive">If set to <see langword="true"/> the comparison is case-sensitive.</param>
            <returns><see langword="true"/> if region matches word.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.CompareSegment(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32,System.String)">
            <summary>
            Checks whether a region (offset + length) matches a given word.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
            <param name="word">The word.</param>
            <returns><see langword="true"/> if region matches word.</returns>
            <remarks>
            The comparison is case-sensitive.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.CompareSegment(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Checks whether a region (offset + length) matches a given word.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
            <param name="word">The word.</param>
            <param name="caseSensitive">If set to <see langword="true"/> the comparison is case-sensitive.</param>
            <returns><see langword="true"/> if region matches word.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextHelper.LeadingWhitespaceToTabs(System.String,System.Int32)">
            <summary>
            Converts leading whitespaces to tabs.
            </summary>
            <param name="line">The line.</param>
            <param name="tabIndent">The indentation size.</param>
            <returns>The converted line.</returns>
            <remarks>
            This function takes a string and converts the whitespace in front of
            it to tabs. If the length of the whitespace at the start of the string
            was not a whole number of tabs then there will still be some spaces just
            before the text starts.
            the output string will be of the form:
            <list type="number">
            <item><description>zero or more tabs</description></item>
            <item><description>zero or more spaces (less than tabIndent)</description></item>
            <item><description>the rest of the line</description></item>
            </list>
            </remarks>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.TextBuffer.GapTextBufferStrategy">
            <summary>
            Implements a text buffer using the 'gap text' strategy.
            </summary>
            <remark>
            <para>
            Internal implementation: The text buffer is implemented as an array of 
            characters. A gap is inserted at the position where characters are inserted
            or removed. This minimizes the number of copy operations and memory 
            reallocations. Subsequent insert operations are just inserted into the 
            gap - no memory copy/allocation. Only when the insert position changes or 
            the gap is full the buffer needs to be restructured.
            </para>
            <para>
            <b>Warning: </b><see cref="T:DigitalRune.Windows.TextEditor.TextBuffer.GapTextBufferStrategy"/> is not thread-safe.
            </para>
            </remark>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextBuffer.GapTextBufferStrategy.Length">
            <summary>
            Gets the length of the sequence of characters.
            </summary>
            <value>
            The current length of the sequence of characters that can be edited.
            </value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextBuffer.GapTextBufferStrategy.SetContent(System.String)">
            <summary>
            This method sets the stored content.
            </summary>
            <param name="text">The string that represents the character sequence.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextBuffer.GapTextBufferStrategy.GetCharAt(System.Int32)">
            <summary>
            Returns a specific character of the sequence.
            </summary>
            <param name="offset">Offset of the char to get.</param>
            <returns>The character at the specified offset.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextBuffer.GapTextBufferStrategy.GetText(System.Int32,System.Int32)">
            <summary>
            Fetches a string of characters contained in the sequence.
            </summary>
            <param name="offset">Offset into the sequence to fetch</param>
            <param name="length">Number of characters to copy.</param>
            <returns>The string at the specified offset.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextBuffer.GapTextBufferStrategy.Insert(System.Int32,System.String)">
            <summary>
            Inserts a string of characters into the sequence.
            </summary>
            <param name="offset">Offset where to insert the string.</param>
            <param name="text">Text to be inserted.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextBuffer.GapTextBufferStrategy.Remove(System.Int32,System.Int32)">
            <summary>
            Removes some portion of the sequence.
            </summary>
            <param name="offset">Offset of the remove.</param>
            <param name="length">Number of characters to remove.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextBuffer.GapTextBufferStrategy.Replace(System.Int32,System.Int32,System.String)">
            <summary>
            Replace some portion of the sequence.
            </summary>
            <param name="offset">Offset.</param>
            <param name="length">Number of characters to replace.</param>
            <param name="text">Text to be replaced with.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.TextBuffer.ITextBufferStrategy">
            <summary>
            Describes a sequence of characters that can be edited. 	
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextBuffer.ITextBufferStrategy.Length">
            <summary>
            Gets the length of the sequence of characters.
            </summary>
            <value>
            The current length of the sequence of characters that can be edited.
            </value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextBuffer.ITextBufferStrategy.Insert(System.Int32,System.String)">
            <summary>
            Inserts a string of characters into the sequence.
            </summary>
            <param name="offset">
            Offset where to insert the string.
            </param>
            <param name="text">
            Text to be inserted.
            </param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextBuffer.ITextBufferStrategy.Remove(System.Int32,System.Int32)">
            <summary>
            Removes some portion of the sequence.
            </summary>
            <param name="offset">
            Offset of the remove.
            </param>
            <param name="length">
            Number of characters to remove.
            </param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextBuffer.ITextBufferStrategy.Replace(System.Int32,System.Int32,System.String)">
            <summary>
            Replace some portion of the sequence.
            </summary>
            <param name="offset">
            Offset.
            </param>
            <param name="length">
            Number of characters to replace.
            </param>
            <param name="text">
            Text to be replaced with.
            </param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextBuffer.ITextBufferStrategy.GetText(System.Int32,System.Int32)">
            <summary>
            Fetches a string of characters contained in the sequence.
            </summary>
            <param name="offset">Offset into the sequence to fetch</param>
            <param name="length">Number of characters to copy.</param>
            <returns>The string at the specified offset.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextBuffer.ITextBufferStrategy.GetCharAt(System.Int32)">
            <summary>
            Returns a specific character of the sequence.
            </summary>
            <param name="offset">Offset of the char to get.</param>
            <returns>The character at the specified offset.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextBuffer.ITextBufferStrategy.SetContent(System.String)">
            <summary>
            This method sets the stored content.
            </summary>
            <param name="text">
            The string that represents the character sequence.
            </param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionDataProvider">
            <summary>
            Provides base functionality of an <see cref="T:DigitalRune.Windows.TextEditor.Completion.ICompletionDataProvider"/>.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionDataProvider.ImageList">
            <summary>
            Gets the image list that holds the images for completion data.
            </summary>
            <value>The image list that holds the images for completion data.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionDataProvider.DefaultIndex">
            <summary>
            Gets the index of the element in the list that is chosen by default.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionDataProvider.PreSelection">
            <summary>
            Gets or sets the pre-selection.
            </summary>
            <value>The pre-selection.</value>
            <remarks>
            	<para>
            The pre-selection is string that is used to select the entry in the
            completion window, when creating the window. When no pre-selection is
            set, then no entry in the completion window will be selected.
            </para>
            	<example>
            Here is an example how to use the pre-selection: Imagine you have method
            <c>MyClass.MethodXyz()</c>. When the user types <c>myClass.Meth</c> and
            then calls the completion window, you should use the string <c>Meth</c>
            as pre-selection. The completion window can automatically select the
            first entry that starts with <c>Meth</c>.
            </example>
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionDataProvider.InsertSpace">
            <summary>
            Gets or sets a value indicating whether a space should be inserted in front of the 
            completed expression.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionDataProvider.CommitKeys">
            <summary>
            Gets or sets the characters that commit the completion and trigger the
            text insertion.
            </summary>
            <value>The commit triggers.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionDataProvider.GenerateCompletionData(System.String,DigitalRune.Windows.TextEditor.TextArea,System.Char)">
            <summary>
            Generates the completion data. This method is called by the text editor control.
            </summary>
            <param name="fileName">The name of the file.</param>
            <param name="textArea">The text area.</param>
            <param name="charTyped">The character typed.</param>
            <returns>The completion data.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionDataProvider.ProcessKey(System.Char)">
            <summary>
            Gets if pressing 'key' should trigger the insertion of the currently selected element.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionDataProvider.IsCommitKey(System.Char)">
            <summary>
            Determines whether a key shall commit the completion.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<see langword="true"/> if <paramref name="key"/> shall commit the completion; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionDataProvider.InsertAction(DigitalRune.Windows.TextEditor.Completion.ICompletionData,DigitalRune.Windows.TextEditor.TextArea,System.Int32,System.Char)">
            <summary>
            Executes the insertion.
            </summary>
            <param name="data">The completion data.</param>
            <param name="textArea">The text area.</param>
            <param name="insertionOffset">The insertion offset.</param>
            <param name="key">The key.</param>
            <returns>
            Returns <see langword="true"/> when the insert action has processed the character
            <paramref name="key"/>; <see langword="false"/> when the character was not processed.
            </returns>
            <remarks>
            The provider should set the caret position and then call <see cref="M:DigitalRune.Windows.TextEditor.Completion.ICompletionData.InsertAction(DigitalRune.Windows.TextEditor.TextArea,System.Char)"/>
            on <paramref name="data"/>
            </remarks>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow">
            <summary>
            Provides the base functionality of all completion windows.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow._addDropShadow">
            <summary>Indicates whether to add drop shadow.</summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.CreateParams">
            <summary>
            Gets the create params.
            </summary>
            <value>The create params.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.DrawingSize">
            <summary>
            The size of the completion window.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            <returns>True if the window will not be activated when it is shown; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.TextEditorControl">
            <summary>
            The text editor control.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.#ctor(System.Windows.Forms.Form,DigitalRune.Windows.TextEditor.TextEditorControl)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow"/> class.
            </summary>
            <param name="parentForm">The parent form.</param>
            <param name="control">The text editor control.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.SetLocation">
            <overloads>
            <summary>
            Sets the location of the window relative to a text location.
            </summary>
            </overloads>
            <summary>
            Sets the location relative to the current caret position.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.SetLocation(DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Sets the location relative to the specified text.
            </summary>
            <param name="caretLocation">The text location.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.AddShadowToWindow(System.Windows.Forms.CreateParams)">
            <summary>
            Adds a shadow to the create params if it is supported by the operating system.
            </summary>
            <param name="createParams">The create params.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.ShowCompletionWindow">
            <summary>
            Shows the completion window.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.ProcessKeyEvent(System.Char)">
            <summary>
            Processes key-events.
            </summary>
            <param name="ch">The character pressed.</param>
            <returns>
            <see langword="true"/> if the key has been handled by the completion window; 
            otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.ProcessTextAreaKey(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Processes dialog-key events (escape, tab, etc.).
            </summary>
            <param name="sender">The sender.</param>
            <param name="keyEventArgs">
            The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.OnOpacityChanged">
            <summary>
            Called when <see cref="P:System.Windows.Forms.Form.Opacity"/> is changed.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.CaretOffsetChanged(System.Object,System.EventArgs)">
            <summary>
            Handles changes of the caret position.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.TextEditorLostFocus(System.Object,System.EventArgs)">
            <summary>
            Handles the lost-focus event of the <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.OnClosed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.Closed"></see> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.AbstractCompletionWindow.ControlMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Invoked when the mouse moves over this form or any child control.
            Shows the mouse cursor on the text area if it has been hidden.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <remarks>
            Derived classes should attach this handler to the MouseMove event
            of all created controls which are not added to the Controls
            collection.
            </remarks>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Completion.CompletionEventArgs">
            <summary>
            Provides arguments for an code completion event.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Completion.CompletionEventArgs.Empty">
            <summary>
            Default <see cref="T:DigitalRune.Windows.TextEditor.Completion.CompletionEventArgs"/>.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.CompletionEventArgs.Key">
            <summary>
            Gets the character that was inserted and raised this event.
            </summary>
            <value>The character. <c>'\0'</c> if no character was inserted.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.CompletionEventArgs.UserData">
            <summary>
            Gets custom data specified by the caller of the completion window.
            </summary>
            <value>The user data.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionEventArgs.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Completion.CompletionEventArgs" /> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionEventArgs.#ctor(System.Char)">
            <summary>
            Constructs a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Completion.CompletionEventArgs"/> class.
            </summary>
            <param name="ch">The character that is going to be inserted.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionEventArgs.#ctor(System.Object)">
            <summary>
            Constructs a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Completion.CompletionEventArgs"/> class.
            </summary>
            <param name="userData">The user data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionEventArgs.#ctor(System.Char,System.Object)">
            <summary>
            Constructs a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Completion.CompletionEventArgs"/> class.
            </summary>
            <param name="ch">The character that is going to be inserted.</param>
            <param name="userData">The user data.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Completion.CompletionListView">
            <summary>
            The list view of a code completion window.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.CompletionListView.FilterList">
            <summary>
            Gets or sets a value indicating whether to automatically filter the list based on the current selection.
            </summary>
            <value><see langword="true"/> to filter the list; otherwise, <see langword="false"/>.</value>
            <remarks>
            If <see cref="P:DigitalRune.Windows.TextEditor.Completion.CompletionListView.FilterList"/> is <see langword="true"/> the list is narrowed down, while the user types.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.CompletionListView.ImageList">
            <summary>
            Gets or sets the image list.
            </summary>
            <value>The image list.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.CompletionListView.FirstVisibleItem">
            <summary>
            Gets or sets the first visible item.
            </summary>
            <value>The first visible item.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.CompletionListView.MaxVisibleItem">
            <summary>
            Gets the number of maximal visible items.
            </summary>
            <value>The maximal visible items.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.CompletionListView.SelectedItem">
            <summary>
            Gets the selected completion data.
            </summary>
            <value>The selected completion data.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.CompletionListView.ItemCount">
            <summary>
            Gets the number of visible items in the list.
            </summary>
            <value>The number of visible items.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.CompletionListView.ImageWidth">
            <summary>
            Gets the width of the image.
            </summary>
            <value>The width of the image.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.CompletionListView.ItemHeight">
            <summary>
            Gets the height of an item.
            </summary>
            <value>The height of a single item.</value>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Completion.CompletionListView.SelectedItemChanged">
            <summary>
            Occurs after the selected item has changed.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Completion.CompletionListView.FirstItemChanged">
            <summary>
            Occurs when the first item has changed.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Completion.CompletionListView.ItemCountChanged">
            <summary>
            Occurs when number of items in the list has changed.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionListView.#ctor(DigitalRune.Windows.TextEditor.Completion.ICompletionData[])">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Completion.CompletionListView"/> class.
            </summary>
            <param name="completionData">The completion data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionListView.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionListView.SelectItem(System.Int32)">
            <summary>
            Selects item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionListView.CenterViewOn(System.Int32)">
            <summary>
            Centers the view on certain item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionListView.ClearSelection">
            <summary>
            Clears the selection.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionListView.PageDown">
            <summary>
            Scrolls one page down.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionListView.PageUp">
            <summary>
            Scrolls one page up.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionListView.SelectNextItem">
            <summary>
            Selects the next item.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionListView.SelectPrevItem">
            <summary>
            Selects the previous item.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionListView.SelectItemWithStart(System.String)">
            <summary>
            Selects the item that starts with a certain string.
            </summary>
            <param name="startText">The start of the item.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionListView.ApplyFilter(System.String)">
            <summary>
            Filters all items and keeps only those that start with the given text.
            </summary>
            <param name="filter">The filter string (case-insensitive).</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionListView.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="pe">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionListView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionListView.OnFirstItemChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Completion.CompletionListView.FirstItemChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionListView.OnItemCountChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Completion.CompletionListView.ItemCountChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionListView.OnSelectedItemChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Completion.CompletionListView.SelectedItemChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Completion.CompletionWindow">
            <summary>
            The default code completion window.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionWindow.ShowCompletionWindow(System.Windows.Forms.Form,DigitalRune.Windows.TextEditor.TextEditorControl,System.String,DigitalRune.Windows.TextEditor.Completion.ICompletionDataProvider,System.Char,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Shows the completion window.
            </summary>
            <param name="parent">The parent.</param>
            <param name="control">The text editor control.</param>
            <param name="fileName">Name of the file.</param>
            <param name="completionDataProvider">The completion data provider.</param>
            <param name="firstChar">The first char.</param>
            <param name="showDeclarationWindow"><see langword="true"/> to show declaration window; otherwise <see langword="false"/>.</param>
            <param name="fixedListViewWidth"><see langword="true"/> to use a fixed width in the list view.</param>
            <param name="closeAutomatically"><see langword="true"/> to close the completion window automatically.</param>
            <returns>The code completion window.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionWindow.#ctor(DigitalRune.Windows.TextEditor.Completion.ICompletionDataProvider,DigitalRune.Windows.TextEditor.Completion.ICompletionData[],System.Windows.Forms.Form,DigitalRune.Windows.TextEditor.TextEditorControl,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Completion.CompletionWindow"/> class.
            </summary>
            <param name="completionDataProvider">The completion data provider.</param>
            <param name="completionData">The completion data.</param>
            <param name="parentForm">The parent form.</param>
            <param name="control">The text editor control.</param>
            <param name="showDeclarationWindow"><see langword="true"/> to show declaration window; otherwise <see langword="false"/>.</param>
            <param name="fixedListViewWidth"><see langword="true"/> to use a fixed width in the list view.</param>
            <param name="closeAutomatically"><see langword="true"/> to close the completion window automatically.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionWindow.SetLocation(DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Sets the location.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionWindow.HandleMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles mouse wheel events.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionWindow.ProcessKeyEvent(System.Char)">
            <summary>
            Processes key-events.
            </summary>
            <param name="ch">The character pressed.</param>
            <returns>
            	<see langword="true"/> if the key has been handled by the completion window;
            otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionWindow.CaretOffsetChanged(System.Object,System.EventArgs)">
            <summary>
            Handles changes of the caret position.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionWindow.ProcessTextAreaKey(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Processes dialog-key events (escape, tab, etc.).
            </summary>
            <param name="sender">The sender.</param>
            <param name="keyEventArgs">
            The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionWindow.Dispose(System.Boolean)">
            <summary>
            Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.Form"/>.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionWindow.GetListViewWidth(System.Int32,System.Int32)">
            <summary>
            Gets the list view width large enough to handle the longest completion data
            text string.
            </summary>
            <param name="defaultWidth">The default width of the list view.</param>
            <param name="height">The height of the list view.  This is
            used to determine if the scrollbar is visible.</param>
            <returns>The list view width to accommodate the longest completion
            data text string; otherwise the default width.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.CompletionWindow.OnOpacityChanged">
            <summary>
            Called when <see cref="P:System.Windows.Forms.Form.Opacity"/> is changed.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Completion.DeclarationViewWindow">
            <summary>
            A tool-tip window.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.DeclarationViewWindow.Description">
            <summary>
            Gets or sets the description that is shown in the <see cref="T:DigitalRune.Windows.TextEditor.Completion.DeclarationViewWindow"/>.
            </summary>
            <value>The description shown in the window.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.DeclarationViewWindow.FixedWidth">
            <summary>
            Gets or sets a value indicating whether whether the width is fixed.
            </summary>
            <value><see langword="true"/> if the width is fixed; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.DeclarationViewWindow.GetRequiredLeftHandSideWidth(System.Drawing.Point)">
            <summary>
            Gets the required width for the declaration window when should be shown on the left.
            </summary>
            <param name="p">The position of the declaration window.</param>
            <returns>The required width.</returns>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Completion.DeclarationViewWindow.HideOnClick">
            <summary>
            Gets or sets a value indicating whether to close the window on mouse click.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.DeclarationViewWindow.#ctor(System.Windows.Forms.Form)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Completion.DeclarationViewWindow"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.DeclarationViewWindow.CreateParams">
            <summary>
            Gets the create params.
            </summary>
            <value>The create params.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.DeclarationViewWindow.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            <value></value>
            <returns>True if the window will not be activated when it is shown; otherwise, false. The default is false.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.DeclarationViewWindow.OnClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Click"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.DeclarationViewWindow.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="paintEventArgs">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.DeclarationViewWindow.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control. 
            </summary>
            <param name="paintEventArgs">
            A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains 
            information about the control to paint.
            </param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Completion.DefaultCompletionData">
            <summary>
            The default implementation for <see cref="T:DigitalRune.Windows.TextEditor.Completion.ICompletionData"/>.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.DefaultCompletionData.ImageIndex">
            <summary>
            Gets the index of the image.
            </summary>
            <value>The index of the image.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.DefaultCompletionData.Text">
            <summary>
            Gets or sets the completion text.
            </summary>
            <value>The completion text.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.DefaultCompletionData.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.DefaultCompletionData.Priority">
            <summary>
            Gets a priority value for the completion data item.
            </summary>
            <value></value>
            <remarks>
            When selecting items by their start characters, the item with the highest
            priority is selected first.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.DefaultCompletionData.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Completion.DefaultCompletionData"/> class.
            </summary>
            <param name="text">The completion text.</param>
            <param name="description">The description.</param>
            <param name="imageIndex">Index of the image.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.DefaultCompletionData.InsertAction(DigitalRune.Windows.TextEditor.TextArea,System.Char)">
            <summary>
            Insert the element represented by the completion data into the text
            editor.
            </summary>
            <param name="textArea">TextArea to insert the completion data in.</param>
            <param name="ch">Character that should be inserted after the completion data. <c>'\0'</c>
            when no character should be inserted.</param>
            <returns>
            Returns true when the insert action has processed the character
            <paramref name="ch"/>; false when the character was not processed.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.DefaultCompletionData.Compare(DigitalRune.Windows.TextEditor.Completion.ICompletionData,DigitalRune.Windows.TextEditor.Completion.ICompletionData)">
            <summary>
            Compares two instances of <see cref="T:DigitalRune.Windows.TextEditor.Completion.ICompletionData"/>.
            </summary>
            <param name="a">The first instance of <see cref="T:DigitalRune.Windows.TextEditor.Completion.ICompletionData"/>.</param>
            <param name="b">The second instance of <see cref="T:DigitalRune.Windows.TextEditor.Completion.ICompletionData"/>.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than obj. Zero This instance is equal to obj. Greater than zero This instance is greater than obj.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Completion.ICompletionData">
            <summary>
            An entry for a code completion window.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.ICompletionData.ImageIndex">
            <summary>
            Gets the index of the image.
            </summary>
            <value>The index of the image.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.ICompletionData.Text">
            <summary>
            Gets or sets the completion text.
            </summary>
            <value>The completion text.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.ICompletionData.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.ICompletionData.Priority">
            <summary>
            Gets a priority value for the completion data item.
            </summary>
            <remarks>
            When selecting items by their start characters, the item with the highest
            priority is selected first.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.ICompletionData.InsertAction(DigitalRune.Windows.TextEditor.TextArea,System.Char)">
            <summary>
            Insert the element represented by the completion data into the text
            editor.
            </summary>
            <param name="textArea">
            TextArea to insert the completion data in.
            </param>
            <param name="ch">
            Character that should be inserted after the completion data. <c>'\0'</c>
            when no character should be inserted.
            </param>
            <returns>
            Returns true when the insert action has processed the character
            <paramref name="ch"/>; false when the character was not processed.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Completion.CompletionDataProviderKeyResult">
            <summary>
            Describes the action that shall be run with a key-press.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Completion.CompletionDataProviderKeyResult.NormalKey">
            <summary>
            Normal key, used to choose an entry from the completion list
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Completion.CompletionDataProviderKeyResult.InsertionKey">
            <summary>
            This key triggers insertion of the completed expression
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Completion.CompletionDataProviderKeyResult.BeforeStartKey">
            <summary>
            Increment both start and end offset of completion region when inserting this
            key. Can be used to insert whitespace (or other characters) in front of the expression
            while the completion window is open.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Completion.ICompletionDataProvider">
            <summary>
            Generates the completion data for a <see cref="T:DigitalRune.Windows.TextEditor.Completion.CompletionWindow"/> and
            checks key presses to trigger an insertion.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.ICompletionDataProvider.ImageList">
            <summary>
            Gets the image list that holds the image for completion data.
            </summary>
            <value>The image list that holds the image for completion data.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.ICompletionDataProvider.PreSelection">
            <summary>
            Gets or sets the pre-selection.
            </summary>
            <value>The pre-selection.</value>
            <remarks>
            <para>
            The pre-selection is string that is used to select the entry in the 
            completion window, when creating the window. When no pre-selection is
            set, then no entry in the completion window will be selected. 
            </para>
            <example>
            Here is an example how to use the pre-selection: Imagine you have method
            <c>MyClass.MethodXyz()</c>. When the user types <c>myClass.Meth</c> and 
            then calls the completion window, you should use the string <c>Meth</c>
            as pre-selection. The completion window can automatically select the 
            first entry that starts with <c>Meth</c>.
            </example>
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.ICompletionDataProvider.DefaultIndex">
            <summary>
            Gets the index of the element in the list that is chosen by default.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.ICompletionDataProvider.GenerateCompletionData(System.String,DigitalRune.Windows.TextEditor.TextArea,System.Char)">
            <summary>
            Generates the completion data. This method is called by the text editor control.
            </summary>
            <param name="fileName">the name of the file.</param>
            <param name="textArea">The text area.</param>
            <param name="charTyped">The character typed.</param>
            <returns>The completion data.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.ICompletionDataProvider.ProcessKey(System.Char)">
            <summary>
            Processes a key press and returns the action to be run with the key.
            </summary>
            <param name="key">The key.</param>
            <returns>The action that shall be performed.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.ICompletionDataProvider.InsertAction(DigitalRune.Windows.TextEditor.Completion.ICompletionData,DigitalRune.Windows.TextEditor.TextArea,System.Int32,System.Char)">
            <summary>
            Executes the insertion.
            </summary>
            <param name="data">The completion data.</param>
            <param name="textArea">The text area.</param>
            <param name="insertionOffset">The insertion offset.</param>
            <param name="key">The key.</param>
            <returns>
            Returns <see langword="true"/> when the insert action has processed the character
            <paramref name="key"/>; <see langword="false"/> when the character was not processed.
            </returns>
            <remarks>
            The provider should set the caret position and then call <see cref="M:DigitalRune.Windows.TextEditor.Completion.ICompletionData.InsertAction(DigitalRune.Windows.TextEditor.TextArea,System.Char)"/>
            on <paramref name="data"/>
            </remarks>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Completion.TextCompletionDataProvider">
            <summary>
            Provides completion data for simple texts.
            </summary>
            <remarks>
            This <see cref="T:DigitalRune.Windows.TextEditor.Completion.ICompletionDataProvider"/> provides completion data for 
            one type: Simple texts (<see cref="T:System.String"/>s). The text in the completion 
            window is copied directly into the document.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.TextCompletionDataProvider.ImageList">
            <summary>
            Gets the image list that holds the image for completion data.
            </summary>
            <value>The image list that holds the image for completion data.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.TextCompletionDataProvider.#ctor(System.String[],System.Windows.Forms.ImageList,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Completion.TextCompletionDataProvider"/> class.
            </summary>
            <param name="texts">The completion texts.</param>
            <param name="imageList">The image list.</param>
            <param name="imageIndex">Index of the image in the <paramref name="imageList"/>.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.TextCompletionDataProvider.GenerateCompletionData(System.String,DigitalRune.Windows.TextEditor.TextArea,System.Char)">
            <summary>
            Generates the completion data. This method is called by the text editor control.
            </summary>
            <param name="fileName">the name of the file.</param>
            <param name="textArea">The text area.</param>
            <param name="charTyped">The character typed.</param>
            <returns>The completion data.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Completion.SnippetCompletionData">
            <summary>
            Completion data for a <see cref="T:DigitalRune.Windows.TextEditor.Completion.Snippet"/> (text template).
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.SnippetCompletionData.ImageIndex">
            <summary>
            Gets the index of the image in the <see cref="T:System.Windows.Forms.ImageList"/> of the 
            <see cref="T:DigitalRune.Windows.TextEditor.Completion.CompletionWindow"/>.
            </summary>
            <value>The index of the image.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.SnippetCompletionData.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.SnippetCompletionData.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.SnippetCompletionData.Priority">
            <summary>
            Gets a priority value for the completion data item.
            When selecting items by their start characters, the item with the highest
            priority is selected first.
            </summary>
            <value></value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.SnippetCompletionData.#ctor(DigitalRune.Windows.TextEditor.Completion.Snippet,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Completion.SnippetCompletionData"/> class.
            </summary>
            <param name="snippet">The snippet.</param>
            <param name="imageIndex">Index of the image in the <see cref="T:System.Windows.Forms.ImageList"/> of the 
            <see cref="T:DigitalRune.Windows.TextEditor.Completion.CompletionWindow"/>.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.SnippetCompletionData.InsertAction(DigitalRune.Windows.TextEditor.TextArea,System.Char)">
            <summary>
            Insert the element represented by the completion data into the text
            editor.
            </summary>
            <param name="textArea">TextArea to insert the completion data in.</param>
            <param name="ch">Character that should be inserted after the completion data. \0 when no
            character should be inserted.</param>
            <returns>
            Returns true when the insert action has processed the character
            <paramref name="ch"/>; false when the character was not processed.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Completion.SnippetCompletionDataProvider">
            <summary>
            Provides the completion data for <see cref="T:DigitalRune.Windows.TextEditor.Completion.Snippet"/>s (text templates).
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.SnippetCompletionDataProvider.ImageList">
            <summary>
            Gets the image list that holds the image for completion data.
            </summary>
            <value>The image list that holds the image for completion data.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.SnippetCompletionDataProvider.#ctor(System.Collections.Generic.IEnumerable{DigitalRune.Windows.TextEditor.Completion.Snippet},System.Windows.Forms.ImageList,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Completion.SnippetCompletionDataProvider"/> class.
            </summary>
            <param name="snippets">The snippets (text template).</param>
            <param name="imageList">The image list.</param>
            <param name="imageIndex">Index of the image in the <paramref name="imageList"/>.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.SnippetCompletionDataProvider.GenerateCompletionData(System.String,DigitalRune.Windows.TextEditor.TextArea,System.Char)">
            <summary>
            Generates the completion data. This method is called by the text editor control.
            </summary>
            <param name="fileName">the name of the file.</param>
            <param name="textArea">The text area.</param>
            <param name="charTyped">The character typed.</param>
            <returns>The completion data.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Completion.Snippet">
            <summary>
            Defines a snippet (text template) which can be inserted in the 
            text editor by typing or selecting a shortcut.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.Snippet.Shortcut">
            <summary>
            Gets or sets the shortcut.
            </summary>
            <value>The shortcut.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.Snippet.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Completion.Snippet.Text">
            <summary>
            Gets or sets the text that is inserted in the text editor
            if the snippet is selected.
            </summary>
            <value>The text.</value>
            <remarks>
            As a special character snippets can contain the character '|'. This character marks the 
            position where the caret will be placed after the snippet is expanded.
            </remarks>
            <example>
            Here is an example snippet that defines a while-loop. Note how the '|' is placed inside the
            parenthesis. When the user expands the snippet, the caret will be placed where the '|' is.
            <code>
            Snippet whileLoop = new Snippet("while", "while (|)\n{\n}", "while loop")
            </code>
            </example>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.Snippet.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Completion.Snippet"/> class.
            </summary>
            <param name="shortcut">The shortcut.</param>
            <param name="text">The template text.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.Snippet.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Completion.Snippet"/> class.
            </summary>
            <param name="shortcut">The shortcut.</param>
            <param name="text">The text.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.Snippet.Insert(DigitalRune.Windows.TextEditor.TextEditorControl)">
            <summary>
            Inserts the snippet into the text editor at the current caret position.
            </summary>
            <param name="textEditorControl">The text editor control.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.Snippet.Insert(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Inserts the snippet into the text editor at the current caret position.
            </summary>
            <param name="textArea">The text area.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Completion.Snippet.ShowTemplateCompletionWindow(DigitalRune.Windows.TextEditor.TextEditorControl,System.Collections.Generic.IEnumerable{DigitalRune.Windows.TextEditor.Completion.Snippet},System.Windows.Forms.ImageList,System.Int32,System.Char)">
            <summary>
            Shows the template completion window.
            </summary>
            <param name="textEditorControl">The text editor control.</param>
            <param name="snippets">The snippets (text template).</param>
            <param name="imageList">The image list to use in the completion window.</param>
            <param name="snippetImageIndex">Index of the snippet image in the <paramref name="imageList"/>.</param>
            <param name="ch">The character that is going to be inserted. <c>'\0'</c> if no character.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Insight.AbstractInsightDataProvider">
            <summary>
            Provides base functionality of an <see cref="T:DigitalRune.Windows.TextEditor.Insight.IInsightDataProvider"/>.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Insight.AbstractInsightDataProvider.DefaultIndex">
            <summary>
            Gets the index of the entry to initially select.
            </summary>
            <value>The index of the entry to initially select.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Insight.AbstractInsightDataProvider.ArgumentStartOffset">
            <summary>
            Gets the offset in the document where the arguments start.
            </summary>
            <value>The start offset of the method's arguments.</value>
            <remarks>
            <para>
            For example, if the document contains the text <c>"Foo(x, ...)"</c> 
            then <see cref="P:DigitalRune.Windows.TextEditor.Insight.AbstractInsightDataProvider.ArgumentStartOffset"/> would be <c>4</c>.
            </para>
            <para>
            <see cref="T:DigitalRune.Windows.TextEditor.Insight.AbstractInsightDataProvider"/> requires this information to track
            the caret. When the caret moves before <see cref="P:DigitalRune.Windows.TextEditor.Insight.AbstractInsightDataProvider.ArgumentStartOffset"/>,
            then the insight window is closed automatically.
            </para>
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Insight.AbstractInsightDataProvider.TextArea">
            <summary>
            Gets the <see cref="P:DigitalRune.Windows.TextEditor.Insight.AbstractInsightDataProvider.TextArea"/>.
            </summary>
            <value>The text area.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Insight.AbstractInsightDataProvider.InsightDataCount">
            <summary>
            Gets the number of available insight entries, e.g. the number of available
            overloads to call.
            </summary>
            <value>The number of available insight entries.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.AbstractInsightDataProvider.GetInsightData(System.Int32)">
            <summary>
            Gets the text to display in the insight window.
            </summary>
            <param name="number">The number of the active insight entry.
            Multiple insight entries might be multiple overloads of the same method.</param>
            <returns>The text to display, e.g. a multi-line string where
            the first line is the method definition, followed by a description.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.AbstractInsightDataProvider.SetupDataProvider(System.String,DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Tells the insight provider to prepare its data.
            </summary>
            <param name="fileName">The name of the edited file.</param>
            <param name="textArea">The text area in which the file is being edited.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.AbstractInsightDataProvider.SetupDataProvider(System.String)">
            <summary>
            Tells the insight provider to prepare its data.
            </summary>
            <param name="fileName">The name of the edited file.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.AbstractInsightDataProvider.CaretOffsetChanged">
            <summary>
            Notifies the insight provider that the caret offset has changed.
            </summary>
            <returns>
            Return <see langword="true"/> to close the insight window (e.g. when the
            caret was moved outside the region where insight is displayed for).
            Return <see langword="false"/> to keep the window open.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Insight.IInsightDataProvider">
            <summary>
            Provides insight information for a certain method (and its overloads).
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.IInsightDataProvider.SetupDataProvider(System.String,DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Tells the insight provider to prepare its data.
            </summary>
            <param name="fileName">The name of the edited file.</param>
            <param name="textArea">The text area in which the file is being edited.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.IInsightDataProvider.CaretOffsetChanged">
            <summary>
            Notifies the insight provider that the caret offset has changed.
            </summary>
            <returns>Return <see langword="true"/> to close the insight window (e.g. when the
            caret was moved outside the region where insight is displayed for).
            Return <see langword="false"/> to keep the window open.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.IInsightDataProvider.GetInsightData(System.Int32)">
            <summary>
            Gets the text to display in the insight window.
            </summary>
            <param name="number">The number of the active insight entry.
            Multiple insight entries might be multiple overloads of the same method.</param>
            <returns>The text to display, e.g. a multi-line string where
            the first line is the method definition, followed by a description.</returns>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Insight.IInsightDataProvider.InsightDataCount">
            <summary>
            Gets the number of available insight entries, e.g. the number of available
            overloads to call.
            </summary>
            <value>The number of available insight entries.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Insight.IInsightDataProvider.DefaultIndex">
            <summary>
            Gets the index of the entry to initially select.
            </summary>
            <value>The index of the entry to initially select.</value>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Insight.InsightEventArgs">
            <summary>
            Provides arguments for an method insight event.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Insight.InsightEventArgs.Empty">
            <summary>
            The default <see cref="T:DigitalRune.Windows.TextEditor.Insight.InsightEventArgs"/>.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Insight.InsightEventArgs.Key">
            <summary>
            Gets the character that was inserted and raised this event.
            </summary>
            <value>The character. <c>'\0'</c> if no character was inserted.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.InsightEventArgs.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Insight.InsightEventArgs" /> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.InsightEventArgs.#ctor(System.Char)">
            <summary>
            Constructs a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Insight.InsightEventArgs"/> class.
            </summary>
            <param name="ch">The character that is going to be inserted.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Insight.InsightWindow">
            <summary>
            Shows insight information for methods (and its overloads).
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.InsightWindow.#ctor(System.Windows.Forms.Form,DigitalRune.Windows.TextEditor.TextEditorControl)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Insight.InsightWindow"/> class.
            </summary>
            <param name="parentForm">The parent form.</param>
            <param name="control">The text editor.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.InsightWindow.ShowInsightWindow">
            <summary>
            Shows the insight window.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.InsightWindow.ProcessTextAreaKey(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Processes dialog-key events (escape, tab, etc.).
            </summary>
            <param name="sender">The sender.</param>
            <param name="keyEventArgs">
            The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.InsightWindow.CaretOffsetChanged(System.Object,System.EventArgs)">
            <summary>
            Handles changes of the caret position.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.InsightWindow.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.InsightWindow.HandleMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the mouse wheel.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.InsightWindow.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="pe">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.InsightWindow.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Is called when the control paints the background.
            </summary>
            <param name="pe">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Insight.InsightWindow.AddInsightDataProvider(DigitalRune.Windows.TextEditor.Insight.IInsightDataProvider,System.String)">
            <summary>
            Adds the insight data provider.
            </summary>
            <param name="provider">The provider.</param>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.TextEditorControl">
            <summary>
            The text editor control.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.TextEditorControl.EditActions">
            <summary>
            This dictionary contains all editor keys, where the key is the key combination and the 
            value the action.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.IsEditAction(System.Windows.Forms.Keys)">
            <summary>
            Determines whether a certain key (or key combination) is associated with an
            edit action.
            </summary>
            <param name="keyData">The key data.</param>
            <returns>
            	<see langword="true"/> if the key is associated with an edit action; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.GetEditAction(System.Windows.Forms.Keys)">
            <summary>
            Gets the edit action of a given key.
            </summary>
            <param name="keyData">The key data.</param>
            <returns>The edit action. (<see langword="null"/> if no action is bound to <paramref name="keyData"/>.)</returns>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.IsInUpdate">
            <summary>
            Gets a value indicating whether this instance is in currently in an update.
            </summary>
            <value>
            <see langword="true"/>, if the text area is updating it's status, while
            it updates it status no redraw operation occurs.
            </value>
            <seealso cref="M:DigitalRune.Windows.TextEditor.TextEditorControl.BeginUpdate"/>
            <see cref="M:DigitalRune.Windows.TextEditor.TextEditorControl.EndUpdate"/>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.BeginUpdate">
            <summary>
            Begin of update.
            </summary>
            <remarks>
            Call this method before a long update operation. This
            'locks' the text area so that no screen update occurs.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.EndUpdate">
            <summary>
            End of update.
            </summary>
            <remarks>
            Call this method to 'unlock' the text area. After this call
            screen update can occur.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.CompletionWindowVisible">
            <summary>
            Gets a value indicating whether the completion window is shown.
            </summary>
            <value>
            	<see langword="true"/> if the completion window is shown; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.TextEditorControl.CompletionRequest">
            <summary>
            Event raised when completion window should be shown.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.RequestCompletionWindow">
            <summary>
            Request a completion window.
            </summary>
            <remarks>
            <para>
            This method request a completion window. This method does not create the code completion 
            window itself, instead it raises the <see cref="E:DigitalRune.Windows.TextEditor.TextEditorControl.CompletionRequest"/> event.
            </para>
            <para>
            The event <see cref="E:DigitalRune.Windows.TextEditor.TextEditorControl.CompletionRequest"/> is delayed until the <see cref="T:DigitalRune.Windows.TextEditor.TextEditorControl"/>
            is in a suitable state (e.g. after all is update and redrawn).
            </para>
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.RequestCompletionWindow(System.Object)">
            <summary>
            Request a completion window.
            </summary>
            <remarks>
            <para>
            This method requests a completion window. This method does not create the code completion 
            window itself, instead it raises the <see cref="E:DigitalRune.Windows.TextEditor.TextEditorControl.CompletionRequest"/> event.
            </para>
            <para>
            The event <see cref="E:DigitalRune.Windows.TextEditor.TextEditorControl.CompletionRequest"/> is delayed until the <see cref="T:DigitalRune.Windows.TextEditor.TextEditorControl"/>
            is in a suitable state (e.g. after all is update and redrawn).
            </para>
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.OnCompletionRequest(DigitalRune.Windows.TextEditor.Completion.CompletionEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.TextEditorControl.CompletionRequest" /> event.
            </summary>
            <param name="e"><see cref="T:DigitalRune.Windows.TextEditor.Completion.CompletionEventArgs" /> object that provides the arguments for the event.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.ShowCompletionWindow(DigitalRune.Windows.TextEditor.Completion.ICompletionDataProvider,System.Char,System.Boolean)">
            <summary>
            Shows the completion window.
            </summary>
            <param name="completionDataProvider">The completion data provider.</param>
            <param name="ch">The character that was typed - or <c>'\0'</c> if no character was typed.</param>
            <param name="closeAutomatically"><see langword="true"/> to close the completion wnidow automatically.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.CloseCompletionWindow">
            <summary>
            Closes the completion window.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.InsightWindowVisible">
            <summary>
            Gets a value indicating whether the insight window is shown at the moment.
            </summary>
            <value>
            	<see langword="true"/> if the insight window is visible; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.TextEditorControl.InsightRequest">
            <summary>
            Occurs when method insight is requested.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.RequestInsightWindow">
            <summary>
            Shows the insight window.
            </summary>
            <remarks>
            The <see cref="T:DigitalRune.Windows.TextEditor.TextEditorControl"/> does not know how to display the method
            insight window. This method does not create the method insight window
            itself, instead it raises the <see cref="E:DigitalRune.Windows.TextEditor.TextEditorControl.InsightRequest"/> event.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.OnInsightRequest(DigitalRune.Windows.TextEditor.Insight.InsightEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.TextEditorControl.InsightRequest" /> event.
            </summary>
            <param name="e"><see cref="T:DigitalRune.Windows.TextEditor.Insight.InsightEventArgs" /> object that provides the arguments for the event.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.ShowInsightWindow(DigitalRune.Windows.TextEditor.Insight.IInsightDataProvider)">
            <summary>
            Shows the insight window.
            </summary>
            <param name="insightDataProvider">The insight data provider.</param>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.PrintDocument">
            <summary>
            Gets the print document.
            </summary>
            <value>The print document.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.TextRenderingHint">
            <summary>
            Gets or sets the text rendering hint.
            </summary>
            <value>
            Specifies the quality of text rendering (whether to use hinting and/or anti-aliasing).
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.ShowSpaces">
            <summary>
            Gets or sets a value indicating whether to display spaces in the text area.
            </summary>
            <value><see langword="true"/> to display spaces in the text area; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.ShowTabs">
            <summary>
            Gets or sets a value indicating whether to display tabs.
            </summary>
            <value><see langword="true"/> to display tabs; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.ShowEOLMarkers">
            <summary>
            Gets or sets a value indicating whether display the end-of-line marker.
            </summary>
            <value><see langword="true"/> to display the end-of-line marker; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.ShowHRuler">
            <summary>
            Gets or sets a value indicating whether to show horizontal ruler (columns).
            </summary>
            <value><see langword="true"/> to show the horizontal ruler; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.ShowVRuler">
            <summary>
            Gets or sets a value indicating whether to show the vertical ruler (vertical guide).
            </summary>
            <value><see langword="true"/> to show the vertical ruler; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.VRulerRow">
            <summary>
            Gets or sets the column of the vertical ruler.
            </summary>
            <value>The column of vertical ruler.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.ShowLineNumbers">
            <summary>
            Gets or sets a value indicating whether to show line numbers.
            </summary>
            <value><see langword="true"/> if line numbers are shown; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.ShowInvalidLines">
            <summary>
            Gets or sets a value indicating whether to show invalid lines.
            </summary>
            <value><see langword="true"/> to show invalid lines; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.EnableFolding">
            <summary>
            Gets or sets a value indicating whether to enable folding.
            </summary>
            <value><see langword="true"/> if folding is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.ShowMatchingBracket">
            <summary>
            Gets or sets a value indicating whether to highlight matching brackets.
            </summary>
            <value>
            <see langword="true"/> if matching brackets are highlighted; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.IsIconBarVisible">
            <summary>
            Gets or sets a value indicating whether the icon bar visible.
            </summary>
            <value>
            	<see langword="true"/> if the icon bar visible; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.TabIndent">
            <summary>
            Gets or sets the width of a tab character.
            </summary>
            <value>The width in spaces of a tab character.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.IndentationSize">
            <summary>
            Gets or sets the width of the indentation.
            </summary>
            <value>The width in spaces of the indentation.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.LineViewerStyle">
            <summary>
            Gets or sets the style the current line is highlighted.
            </summary>
            <value>The line viewer style.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.IndentStyle">
            <summary>
            Gets or sets the indent style.
            </summary>
            <value>The indent style</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.ConvertTabsToSpaces">
            <summary>
            Gets or sets a value indicating whether to convert tabs to spaces.
            </summary>
            <value>
            	<see langword="true"/> to convert tabs to spaces; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.HideMouseCursor">
            <summary>
            Gets or sets a value indicating whether to hide the mouse cursor while typing.
            </summary>
            <value><see langword="true"/> to hide the mouse cursor; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.AllowCaretBeyondEOL">
            <summary>
            Gets or sets a value indicating whether allow placing a caret beyond
            the end of the line (often called virtual space).
            </summary>
            <value>
            <see langword="true"/> if placing the caret beyond the end of line is allowed; 
            otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.BracketMatchingStyle">
            <summary>
            Gets or sets the bracket matching style.
            </summary>
            <value>The bracket matching style.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.Font">
            <summary>
            Gets or sets the font of the text area.
            </summary>
            <value>
            The base font of the text area. No bold or italic fonts
            can be used because bold/italic is reserved for highlighting
            purposes.
            </value>
            <returns>The <see cref="P:DigitalRune.Windows.TextEditor.TextEditorControl.Font"></see> to apply to the text displayed by the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont"></see> property.</returns>
            <PermissionSet>
            <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
            <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.DocumentSelectionMode">
            <summary>
            Gets or sets the document selection mode.
            </summary>
            <value>The document selection mode.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.ShowScrollBars">
            <summary>
            Gets or sets a value indicating whether to show scroll bars.
            </summary>
            <value><see langword="true"/> to display scroll bars; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.EnableCompletion">
            <summary>
            Gets or sets a value indicating whether to enable code completion.
            </summary>
            <value><see langword="true"/> if code completion is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.EnableMethodInsight">
            <summary>
            Gets or sets a value indicating whether to enable method insight.
            </summary>
            <value><see langword="true"/> if method insight is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.TextEditorControl.ToolTipRequest">
            <summary>
            Occurs when a tool tip is requested.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.OnToolTipRequest(DigitalRune.Windows.TextEditor.ToolTipRequestEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.TextEditorControl.ToolTipRequest" /> event.
            </summary>
            <param name="e"><see cref="T:DigitalRune.Windows.TextEditor.ToolTipRequestEventArgs" /> object that provides the arguments for the event.</param>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.ActiveTextAreaControl">
            <summary>
            Gets the active text area.
            </summary>
            <value>The active text area.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.EnableUndo">
            <summary>
            Gets a value indicating whether undo is enabled (something on the undo-stack).
            </summary>
            <value><see langword="true"/> if undo is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.EnableRedo">
            <summary>
            Gets a value indicating whether redo is enabled (something on the redo-stack).
            </summary>
            <value><see langword="true"/> if redo is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.EnableCopy">
            <summary>
            Gets a value indicating whether 'Copy' is enabled.
            </summary>
            <value><see langword="true"/> if 'Copy' is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.EnableCut">
            <summary>
            Gets a value indicating whether 'Cut' is enabled.
            </summary>
            <value><see langword="true"/> if 'Cut' is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.EnablePaste">
            <summary>
            Gets a value indicating whether 'Paste' is enabled (i.e. something is in the clipboard).
            </summary>
            <value><see langword="true"/> if 'Paste' is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.EnableDelete">
            <summary>
            Gets a value indicating whether 'Delete' is enabled (i.e. something is in the clipboard).
            </summary>
            <value><see langword="true"/> if 'Delete' is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.EnableSelectAll">
            <summary>
            Gets a value indicating whether 'Select All' is enabled.
            </summary>
            <value><see langword="true"/> if 'Select All' is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.IsViewSplit">
            <summary>
            Gets a value indicating whether this control is split into two views.
            </summary>
            <value>
            	<see langword="true"/> if this control is into two views; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.TextEditorControl.ActiveTextAreaControlChanged">
            <summary>
            Occurs when the active text area changes.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.TextEditorControl.SelectionChanged">
            <summary>
            Occurs when the selection within a text area is changed.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.TextEditorControl.TextAreaDialogKeyPress">
            <summary>
            Occurs when the a dialog key (Tab, Return, Escape, arrow keys, etc.) is pressed on 
            the <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.TextEditorControl.TextAreaKeyPress">
            <summary>
            Occurs when the a standard key (non-dialog key) is pressed on the <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.TextEditorControl.ContextMenuRequest">
            <summary>
            Occurs when the context menu is requested.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.TextEditorControl"/> class.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.InitializeTextAreaControl(DigitalRune.Windows.TextEditor.TextAreaControl)">
            <summary>
            Initializes the text area control.
            </summary>
            <param name="newControl">The new control.</param>
            <remarks>
            <para>
            A <see cref="T:DigitalRune.Windows.TextEditor.TextEditorControl"/> can contain multiple <see cref="T:DigitalRune.Windows.TextEditor.TextAreaControl"/>s. 
            E.g. for showing a split-view of the document.
            </para>
            <para>
            This method is called when a new <see cref="T:DigitalRune.Windows.TextEditor.TextAreaControl"/> is created.
            </para>
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.OptionsChanged">
            <summary>
            Notifies all views that options have changed.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.ToggleSplitView">
            <summary>
            Shows/hides a vertical split view of the document.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.Undo">
            <summary>
            Undoes the last changes in the document.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.Redo">
            <summary>
            Redoes the last undone changes.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.SetHighlighting(System.String)">
            <summary>
            Sets the syntax highlighting mode.
            </summary>
            <param name="name">The name of the syntax highlighting mode.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.OnSelectionChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.TextEditorControl.SelectionChanged" /> event.
            </summary>
            <param name="e"><see cref="T:System.EventArgs" /> object that provides the arguments for the event.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.OnTextAreaDialogKeyPress(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.TextEditorControl.TextAreaDialogKeyPress"/> event.
            </summary>
            <param name="keyEventArgs">
            The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance  containing the event data.
            </param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.OnTextAreaKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.TextEditorControl.TextAreaKeyPress"/> event.
            </summary>
            <param name="keyEventArgs">
            The <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.OnContextMenuRequest(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.TextEditorControl.ContextMenuRequest"/> event.
            </summary>
            <param name="mouseEventArgs">
            The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.TextEditorProperties">
            <summary>
            Gets or sets the text editor properties.
            </summary>
            <value>The text editor properties.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.Encoding">
            <summary>
            Gets or sets the encoding.
            </summary>
            <value>Current file's character encoding</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.FileName">
            <summary>
            Gets or sets the name of the current file.
            </summary>
            <value>The current file name</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.Document">
            <summary>
            Gets or sets the document.
            </summary>
            <value>The current document</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.Text">
            <summary>
            Gets or sets the content of the current document.
            </summary>
            <value>The content of the current document as <see cref="T:System.String"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether the document is read-only.
            </summary>
            <value>If set to <see langword="true"/> the contents can't be altered.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextEditorControl.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <value>
            The default size of the control.
            </value>
            <remarks>
            Supposedly this is the way to do it according to .NET docs,
            as opposed to setting the size in the constructor
            </remarks>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.TextEditorControl.FileNameChanged">
            <summary>
            Occurs when the file name is changed.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.TextEditorControl.DocumentAboutToBeChanged">
            <summary>
            Occurs when a document is about to be changed.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.TextEditorControl.DocumentChanged">
            <summary>
            Occurs when a document has been changed.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.LoadFile(System.String)">
            <summary>
            Loads the file.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.LoadFile(System.String,System.Boolean,System.Boolean)">
            <summary>
            Loads a file.
            </summary>
            <param name="fileName">The name of the file to open.</param>
            <param name="autoLoadHighlighting">Automatically load the highlighting for the file.</param>
            <param name="autodetectEncoding">Automatically detect file encoding and set Encoding property to the detected encoding.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.LoadFile(System.String,System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>
            Loads a file from the specified stream.
            </summary>
            <param name="fileName">The name of the file to open. Used to find the correct highlighting strategy
            if autoLoadHighlighting is active, and sets the filename property to this value.</param>
            <param name="stream">The stream to actually load the file content from.</param>
            <param name="autoLoadHighlighting">Automatically load the highlighting for the file</param>
            <param name="autodetectEncoding">Automatically detect file encoding and set Encoding property to the detected encoding.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.CanSaveWithCurrentEncoding">
            <summary>
            Gets if the document can be saved with the current encoding without losing data.
            </summary>
            <returns>
            	<see langword="true"/> if the document can be saved with the current encoding; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.SaveFile(System.String)">
            <summary>
            Saves the file.
            </summary>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.SaveFile(System.IO.Stream)">
            <summary>
            Saves the text editor content into the specified stream.
            (Does not close the stream.)
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.GetRangeDescription(System.Int32,System.Int32)">
            <summary>
            Gets the range description.
            </summary>
            <param name="selectedItem">The selected item.</param>
            <param name="itemCount">The item count.</param>
            <returns>The range description.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.Refresh">
            <summary>
            Forces the control to invalidate its client area and immediately redraw itself and any child controls.
            </summary>
            <remarks>
            Overwritten refresh method that does nothing if the control is in
            an update cycle.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.OnFileNameChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.TextEditorControl.FileNameChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.OnDocumentAboutToBeChanged(DigitalRune.Windows.TextEditor.Document.DocumentEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.TextEditorControl.DocumentAboutToBeChanged"/> event.
            </summary>
            <param name="documentEventArgs">The <see cref="T:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.OnDocumentChanged(DigitalRune.Windows.TextEditor.Document.DocumentEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.TextEditorControl.DocumentChanged"/> event.
            </summary>
            <param name="documentEventArgs">The <see cref="T:DigitalRune.Windows.TextEditor.Document.DocumentEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextEditorControl.OnReloadHighlighting(System.Object,System.EventArgs)">
            <summary>
            Called when reloading the highlighting.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Undo.UndoableDelete">
            <summary>
            Implements an undoable delete operation for the <see cref="T:DigitalRune.Windows.TextEditor.Document.IDocument"/>.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoableDelete.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.String)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Undo.UndoableDelete"/>
            </summary>	
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoableDelete.Undo">
            <summary>
            Undoes the last operation
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoableDelete.Redo">
            <summary>
            Redoes the last operation
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Undo.UndoableInsert">
            <summary>
            Implements an undoable insert operation for the <see cref="T:DigitalRune.Windows.TextEditor.Document.IDocument"/>.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoableInsert.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.String)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Undo.UndoableInsert"/>
            </summary>	
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoableInsert.Undo">
            <summary>
            Undoes the last operation
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoableInsert.Redo">
            <summary>
            Redoes the last operation
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Undo.UndoableReplace">
            <summary>
            Implements an undoable replace operation for the <see cref="T:DigitalRune.Windows.TextEditor.Document.IDocument"/>.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoableReplace.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32,System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Undo.UndoableReplace"/>
            </summary>	
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoableReplace.Undo">
            <summary>
            Undoes the last operation
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoableReplace.Redo">
            <summary>
            Redoes the last operation
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Undo.IUndoableOperation">
            <summary>
            This Interface describes a the basic Undo/Redo operation
            all undoable operations must implement this interface.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.IUndoableOperation.Undo">
            <summary>
            Undoes the last operation
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.IUndoableOperation.Redo">
            <summary>
            Redoes the last operation
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Undo.UndoQueue">
            <summary>
            This class stacks the last x operations from the <see cref="T:DigitalRune.Windows.TextEditor.Undo.UndoStack"/> and makes
            one undo/redo operation from it.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoQueue.#ctor(System.Collections.Generic.Stack{DigitalRune.Windows.TextEditor.Undo.IUndoableOperation},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Undo.UndoQueue"/> class.
            </summary>
            <param name="stack">The undo stack.</param>
            <param name="numops">The number of operations.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoQueue.Undo">
            <summary>
            Undoes the last operation
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoQueue.Redo">
            <summary>
            Redoes the last operation
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Undo.UndoStack">
            <summary>
            Implements an undo stack.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Undo.UndoStack.TextEditorControl">
            <summary>
            The <see cref="F:DigitalRune.Windows.TextEditor.Undo.UndoStack.TextEditorControl"/> that owns this <see cref="T:DigitalRune.Windows.TextEditor.Undo.UndoStack"/>.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Undo.UndoStack.ActionUndone">
            <summary>
            Occurs after action is undone.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Undo.UndoStack.ActionRedone">
            <summary>
            Occurs after action is redone.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Undo.UndoStack.OperationPushed">
            <summary>
            Occurs when an operation is pushed onto the undo stack.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Undo.UndoStack.AcceptChanges">
            <summary>
            Gets or sets if changes to the document are protocoled by the undo stack.
            Used internally to disable the undo stack temporarily while undoing an action.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Undo.UndoStack.CanUndo">
            <summary>
            Returns whether there are actions on the undo stack.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Undo.UndoStack.CanRedo">
            <summary>
            Returns whether there are actions on the redo stack.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Undo.UndoStack.UndoItemCount">
            <summary>
            Gets the number of actions on the undo stack.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Undo.UndoStack.RedoItemCount">
            <summary>
            Gets the number of actions on the redo stack.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoStack.StartUndoGroup">
            <summary>
            Starts a new undo group.
            </summary>
            <remarks>
            An undo group is a group of commandos that is combined into a single
            undo operation.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoStack.EndUndoGroup">
            <summary>
            Ends an undo group and pushes the group operations onto the <see cref="T:DigitalRune.Windows.TextEditor.Undo.UndoStack"/>.
            </summary>
            <remarks>
            An undo group is a group of commandos that is combined into a single
            undo operation.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoStack.AssertNoUndoGroupOpen">
            <summary>
            Asserts that no undo groups are open.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoStack.Undo">
            <summary>
            Undoes the last operation.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoStack.Redo">
            <summary>
            Redoes the last undone operation.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoStack.Push(DigitalRune.Windows.TextEditor.Undo.IUndoableOperation)">
            <summary>
            Call this method to push an UndoableOperation on the undo-stack; the redo-stack
            will be cleared.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoStack.ClearRedoStack">
            <summary>
            Clears the redo stack.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoStack.ClearAll">
            <summary>
            Clears both the undo and redo stack.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoStack.OnActionUndone">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Undo.UndoStack.ActionUndone"/> event.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.UndoStack.OnActionRedone">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Undo.UndoStack.ActionRedone"/> event.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Undo.OperationEventArgs">
            <summary>
            Provides data for the <see cref="E:DigitalRune.Windows.TextEditor.Undo.UndoStack.OperationPushed"/> events.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Undo.OperationEventArgs.#ctor(DigitalRune.Windows.TextEditor.Undo.IUndoableOperation)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Undo.OperationEventArgs"/> class.
            </summary>
            <param name="op">The operation.</param>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Undo.OperationEventArgs.Operation">
            <summary>
            Gets the operation.
            </summary>
            <value>The operation.</value>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Undo.OperationEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:DigitalRune.Windows.TextEditor.Undo.UndoStack.OperationPushed"/> event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:DigitalRune.Windows.TextEditor.Undo.OperationEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Selection.ISelection">
            <summary>
            Representing a single selection.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.ISelection.StartPosition">
            <summary>
            Gets or sets the start position of the selection.
            </summary>
            <value>The start position of the selection.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.ISelection.EndPosition">
            <summary>
            Gets or sets the end position of the selection.
            </summary>
            <value>The end position of the selection.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.ISelection.Offset">
            <summary>
            Gets the offset of the selection.
            </summary>
            <value>The offset of the selection.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.ISelection.EndOffset">
            <summary>
            Gets the end offset of the selection.
            </summary>
            <value>The end offset of the selection.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.ISelection.Length">
            <summary>
            Gets the length of the selection.
            </summary>
            <value>The length of the selection.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.ISelection.IsRectangularSelection">
            <summary>
            Gets a value indicating whether this is a rectangular selection.
            </summary>
            <value>Returns true, if the selection is rectangular</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.ISelection.IsEmpty">
            <summary>
            Gets a value indicating whether this selection is empty.
            </summary>
            <value>Returns <see langword="true"/>, if the selection is empty.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.ISelection.SelectedText">
            <summary>
            Gets the selected text.
            </summary>
            <value>The text which is selected by this selection.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.ISelection.ContainsOffset(System.Int32)">
            <summary>
            Determines whether this selection contains the specified offset.
            </summary>
            <param name="offset">The specified offset.</param>
            <returns>
            <see langword="true"/> if this selection contains the specified offset; otherwise, 
            <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.ISelection.ContainsPosition(DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Determines whether this selection contains the specified position.
            </summary>
            <param name="position">The position.</param>
            <returns>
            <see langword="true"/> if this selection contains the specified position; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Selection.DefaultSelection">
            <summary>
            Default implementation of an <see cref="T:DigitalRune.Windows.TextEditor.Selection.ISelection"/> interface.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.DefaultSelection.StartPosition">
            <summary>
            Gets or sets the start position of the selection.
            </summary>
            <value>The start position of the selection.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.DefaultSelection.EndPosition">
            <summary>
            Gets or sets the end position of the selection.
            </summary>
            <value>The end position of the selection.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.DefaultSelection.Offset">
            <summary>
            Gets the offset of the selection.
            </summary>
            <value>The offset of the selection.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.DefaultSelection.EndOffset">
            <summary>
            Gets the end offset of the selection.
            </summary>
            <value>The end offset of the selection.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.DefaultSelection.Length">
            <summary>
            Gets the length of the selection.
            </summary>
            <value>The length of the selection.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.DefaultSelection.IsEmpty">
            <summary>
            Gets a value indicating whether this selection is empty.
            </summary>
            <value>Returns true, if the selection is empty</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.DefaultSelection.IsRectangularSelection">
            <summary>
            Gets a value indicating whether this is a rectangular selection.
            </summary>
            <value>Returns true, if the selection is rectangular.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.DefaultSelection.SelectedText">
            <summary>
            Gets the selected text.
            </summary>
            <value>The text which is selected by this selection.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.DefaultSelection.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.Document.TextLocation,DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Selection.DefaultSelection"/>
            </summary>
            <param name="document">The document.</param>
            <param name="startPosition">The start position.</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.DefaultSelection.ToString">
            <summary>
            Converts a <see cref="T:DigitalRune.Windows.TextEditor.Selection.DefaultSelection"/> instance to string 
            (only for debugging purposes).
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.DefaultSelection.ContainsPosition(DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Determines whether this selection contains the specified position.
            </summary>
            <param name="position">The position.</param>
            <returns>
            	<see langword="true"/> if this selection contains the specified position; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.DefaultSelection.ContainsOffset(System.Int32)">
            <summary>
            Determines whether this selection contains the specified offset.
            </summary>
            <param name="offset">The specified offset.</param>
            <returns>
            <see langword="true"/> if this selection contains the specified offset; otherwise,
            <see langword="false"/>.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Selection.SelectionManager">
            <summary>
            Manages the selections in a document.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.SelectionManager.Selections">
            <summary>
            Gets the collection containing all selection.
            </summary>
            <value>A collection containing all selections.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.SelectionManager.HasSomethingSelected">
            <summary>
            Gets a value indicating whether this instance has something selected.
            </summary>
            <value>
            <see langword="true"/> if the <see cref="P:DigitalRune.Windows.TextEditor.Selection.SelectionManager.Selections"/> is not empty, 
            <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.SelectionManager.SelectionIsReadonly">
            <summary>
            Gets a value indicating whether the selections are read-only.
            </summary>
            <value>
            <see langword="true"/> if the selections are read-only; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.SelectionManager.SelectedText">
            <summary>
            Gets the selected text.
            </summary>
            <value>The text that is currently selected.</value>
            <remarks>
            If multiple non-consecutive texts are selected, then these texts are 
            returned as a single string.
            </remarks>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Selection.SelectionManager.SelectionChanged">
            <summary>
            Occurs when the selection is changed.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.SelectionManager.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Selection.SelectionManager"/>
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.SelectionManager.#ctor(DigitalRune.Windows.TextEditor.Document.IDocument,DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.Selection.SelectionManager"/>
            </summary>
            <param name="document">The document.</param>
            <param name="textArea">The text area.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.SelectionManager.SetSelection(DigitalRune.Windows.TextEditor.Selection.ISelection)">
            <remarks>
            Clears the selection and sets a new selection
            using the given <see cref="T:DigitalRune.Windows.TextEditor.Selection.ISelection"/> object.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.SelectionManager.SetSelection(DigitalRune.Windows.TextEditor.Document.TextLocation,DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Sets a selection.
            </summary>
            <param name="startPosition">The start position.</param>
            <param name="endPosition">The end position.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.SelectionManager.IsPositionGreaterOrEqual(DigitalRune.Windows.TextEditor.Document.TextLocation,DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Determines whether a text position is greater than or equal to another 
            text position.
            </summary>
            <param name="position1">The first position.</param>
            <param name="position2">The second position.</param>
            <returns>
            <see langword="true"/> if <paramref name="position1"/> is greater than or equal to 
            <paramref name="position2"/>; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.SelectionManager.ExtendSelection(DigitalRune.Windows.TextEditor.Document.TextLocation,DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Extends the selection.
            </summary>
            <param name="oldPosition">The old position.</param>
            <param name="newPosition">The new position.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.SelectionManager.NextValidPosition(System.Int32)">
            <summary>
            Returns the next valid position.
            </summary>
            <param name="line">The line.</param>
            <returns>The next valid position after the given line.</returns>
            <remarks>
            This methods checks that there are more lines available after current one.
            If there are then the next line is returned. Otherwise, the last position 
            on the given line is returned.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.SelectionManager.ClearWithoutUpdate">
            <summary>
            Clears the without update.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.SelectionManager.ClearSelection">
            <remarks>
            Clears the selection.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.SelectionManager.RemoveSelectedText">
            <summary>
            Removes the selected text from the buffer and clears
            the selection.
            </summary>
            <remarks>
            The position of the caret is <strong>not</strong> updated automatically.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.SelectionManager.IsSelected(System.Int32)">
            <summary>
            Determines whether the specified offset points to a section which is
            selected.
            </summary>
            <param name="offset">The offset.</param>
            <returns>
            	<see langword="true"/> if the specified offset is selected; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.SelectionManager.GetSelectionAt(System.Int32)">
            <summary>
            Returns a <see cref="T:DigitalRune.Windows.TextEditor.Selection.ISelection"/> object giving the selection in which
            the offset points to.
            </summary>
            <param name="offset">The offset.</param>
            <returns>
            	<see langword="null"/> if the offset doesn't point to a selection
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.SelectionManager.GetSelectionAtLine(System.Int32)">
            <summary>
            Gets the selection at a given line.
            </summary>
            <param name="lineNumber">The line number.</param>
            <returns>The range of selected columns.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.SelectionManager.FireSelectionChanged">
            <summary>
            Fires the selection changed.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.SelectionManager.OnSelectionChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Selection.SelectionManager.SelectionChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Selection.ColumnRange">
            <summary>
            Defines a column range.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Selection.ColumnRange.NoColumn">
            <summary>
            Defines a <see cref="T:DigitalRune.Windows.TextEditor.Selection.ColumnRange"/> that contains no columns.
            </summary>
            <remarks>
            The properties <see cref="P:DigitalRune.Windows.TextEditor.Selection.ColumnRange.StartColumn"/> and <see cref="P:DigitalRune.Windows.TextEditor.Selection.ColumnRange.EndColumn"/>
            are meaningless in this case. (But they are used internally.)
            </remarks>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Selection.ColumnRange.WholeColumn">
            <summary>
            Defines a <see cref="T:DigitalRune.Windows.TextEditor.Selection.ColumnRange"/> that contains all columns of line.
            </summary>
            <remarks>
            The properties <see cref="P:DigitalRune.Windows.TextEditor.Selection.ColumnRange.StartColumn"/> and <see cref="P:DigitalRune.Windows.TextEditor.Selection.ColumnRange.EndColumn"/>
            are meaningless in this case. (But they are used internally.)
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.ColumnRange.StartColumn">
            <summary>
            Gets or sets the start column.
            </summary>
            <value>The start column.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Selection.ColumnRange.EndColumn">
            <summary>
            Gets or sets the end column.
            </summary>
            <value>The end column.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.ColumnRange.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Selection.ColumnRange"/> class.
            </summary>
            <param name="startColumn">The start column.</param>
            <param name="endColumn">The end column.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.ColumnRange.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. <see cref="M:System.Object.GetHashCode"></see> is suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.ColumnRange.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"></see> to compare with the current <see cref="T:System.Object"></see>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"></see> is equal to the current <see cref="T:System.Object"></see>; otherwise, false.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Selection.ColumnRange.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Ime">
            <summary>
            Used internally, not for own use.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.TextAreaUpdateType">
            <summary>
            This enum describes all implemented request types
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.TextAreaUpdateType.WholeTextArea">
            <summary>
            Update the whole text area.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.TextAreaUpdateType.SingleLine">
            <summary>
            Update a single line.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.TextAreaUpdateType.SinglePosition">
            <summary>
            Update single position.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.TextAreaUpdateType.PositionToLineEnd">
            <summary>
            Update from current position to the end of the line.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.TextAreaUpdateType.PositionToEnd">
            <summary>
            Update from current position to the end.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.TextAreaUpdateType.LinesBetween">
            <summary>
            Updates the line between.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.TextAreaUpdate">
            <summary>
            This class is used to request an update of the text area.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextAreaUpdate.TextAreaUpdateType">
            <summary>
            Gets the type of the text area update.
            </summary>
            <value>The type of the text area update.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextAreaUpdate.Position">
            <summary>
            Gets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaUpdate.#ctor(DigitalRune.Windows.TextEditor.TextAreaUpdateType)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.TextAreaUpdate"/>
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaUpdate.#ctor(DigitalRune.Windows.TextEditor.TextAreaUpdateType,DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.TextAreaUpdate"/>
            </summary>
            <param name="type">The type.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaUpdate.#ctor(DigitalRune.Windows.TextEditor.TextAreaUpdateType,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.TextAreaUpdate"/>
            </summary>
            <param name="type">The type.</param>
            <param name="startLine">The start line.</param>
            <param name="endLine">The end line.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaUpdate.#ctor(DigitalRune.Windows.TextEditor.TextAreaUpdateType,System.Int32)">
            <summary>
            Creates a new instance of <see cref="T:DigitalRune.Windows.TextEditor.TextAreaUpdate"/>
            </summary>	
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaUpdate.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Properties.LineViewerStyle">
            <summary>
            Describes the caret marker
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Properties.LineViewerStyle.None">
            <summary>No line viewer will be displayed.</summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Properties.LineViewerStyle.FullRow">
            <summary>The row in which the caret is will be marked.</summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Properties.IndentStyle">
            <summary>
            Describes the indent style
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Properties.IndentStyle.None">
            <summary>No indentation occurs.</summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Properties.IndentStyle.Auto">
            <summary>The indentation from the line above will be taken to indent the current line. </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Properties.IndentStyle.Smart">
            <summary>Intelligent, context sensitive indentation will occur.</summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Properties.DocumentSelectionMode">
            <summary>
            Describes the selection mode of the text area
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Properties.DocumentSelectionMode.Normal">
            <summary>The 'normal' selection mode.</summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Properties.DocumentSelectionMode.Additive">
            <summary>
            Selections will be added to the current selection or new  ones will 
            be created (multi-select mode)
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Properties.BracketMatchingStyle">
            <summary>
            The bracket matching style.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Properties.BracketMatchingStyle.OnBracket">
            <summary>Cursor on bracket: Highlight brackets on cursor position.</summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Properties.BracketMatchingStyle.After">
            <summary> Cursor after bracket: Highlight brackets before cursor position.</summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties">
            <summary>
            Stores the properties of a text editor.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.AutoInsertCurlyBracket">
            <summary>
            Gets or sets a value indicating whether to automatically insert curly 
            brackets.
            </summary>
            <value>
            	<see langword="true"/> if automatically inserting curly brackets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.HideMouseCursor">
            <summary>
            Gets or sets a value indicating whether to hide the mouse cursor while typing.
            </summary>
            <value><see langword="true"/> to hide the mouse cursor; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.IsIconBarVisible">
            <summary>
            Gets or sets a value indicating whether the icon bar visible.
            </summary>
            <value>
            	<see langword="true"/> if the icon bar visible; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.AllowCaretBeyondEOL">
            <summary>
            Gets or sets a value indicating whether allow placing a caret beyond
            the end of the line (often called virtual space).
            </summary>
            <value>
            <see langword="true"/> if placing the caret beyond the end of line is allowed; 
            otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.ShowMatchingBracket">
            <summary>
            Gets or sets a value indicating whether to highlight matching brackets.
            </summary>
            <value>
            <see langword="true"/> if matching brackets are highlighted; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.CutCopyWholeLine">
            <summary>
            Gets or sets a value indicating whether to cut/copy the whole line when
            nothing is selected.
            </summary>
            <value><see langword="true"/> to cut/copy the whole line; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.TextRenderingHint">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Text.TextRenderingHint"/> for rendering the text.
            </summary>
            <value>The <see cref="T:System.Drawing.Text.TextRenderingHint"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.MouseWheelScrollDown">
            <summary>
            Gets or sets a value indicating whether to scroll the text down or up
            when rotating the mouse wheel (default is 'down').
            </summary>
            <value>
            	<see langword="true"/> to scroll down; <see langword="false"/> false to scroll up.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.MouseWheelTextZoom">
            <summary>
            Gets or sets a value indicating whether to zoom the text with the mouse
            wheel.
            </summary>
            <value><see langword="true"/> to zoom the text with the mouse wheel; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.LineTerminator">
            <summary>
            Gets or sets the line terminator.
            </summary>
            <value>The line terminator.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.LineViewerStyle">
            <summary>
            Gets or sets the style the current line is highlighted.
            </summary>
            <value>The line viewer style.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.ShowInvalidLines">
            <summary>
            Gets or sets a value indicating whether to show invalid lines.
            </summary>
            <value><see langword="true"/> to show invalid lines; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.VerticalRulerColumn">
            <summary>
            Gets or sets the column of the vertical ruler.
            </summary>
            <value>The column of vertical ruler.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.ShowSpaces">
            <summary>
            Gets or sets a value indicating whether to display spaces in the text area.
            </summary>
            <value><see langword="true"/> to display spaces in the text area; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.ShowTabs">
            <summary>
            Gets or sets a value indicating whether to display tabs.
            </summary>
            <value><see langword="true"/> to display tabs; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.ShowEOLMarker">
            <summary>
            Gets or sets a value indicating whether display the end-of-line marker.
            </summary>
            <value><see langword="true"/> to display the end-of-line marker; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.ConvertTabsToSpaces">
            <summary>
            Gets or sets a value indicating whether to convert tabs to spaces.
            </summary>
            <value>
            	<see langword="true"/> to convert tabs to spaces; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.ShowHorizontalRuler">
            <summary>
            Gets or sets a value indicating whether to show horizontal ruler (columns).
            </summary>
            <value><see langword="true"/> to show the horizontal ruler; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.ShowVerticalRuler">
            <summary>
            Gets or sets a value indicating whether to show the vertical ruler (vertical guide).
            </summary>
            <value><see langword="true"/> to show the vertical ruler; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.Encoding">
            <summary>
            Gets or sets the encoding.
            </summary>
            <value>The encoding.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.EnableFolding">
            <summary>
            Gets or sets a value indicating whether to enable folding.
            </summary>
            <value><see langword="true"/> if folding is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.ShowLineNumbers">
            <summary>
            Gets or sets a value indicating whether to show line numbers.
            </summary>
            <value><see langword="true"/> if line numbers are shown; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.TabIndent">
            <summary>
            The width of a tab.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.IndentationSize">
            <summary>
            The amount of spaces a tab is converted to if <see cref="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.ConvertTabsToSpaces"/> is true.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.IndentStyle">
            <summary>
            Gets or sets the indent style.
            </summary>
            <value>The indent style.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.DocumentSelectionMode">
            <summary>
            Gets or sets the selection mode.
            </summary>
            <value>The selection mode.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.FontContainer">
            <summary>
            Gets the font container.
            </summary>
            <value>The font container.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.BracketMatchingStyle">
            <summary>
            Gets or sets the bracket matching style.
            </summary>
            <value>The bracket matching style.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.SupportsReadOnlySegments">
            <summary>
            Gets or sets a value indicating whether this document supports read-only segments.
            </summary>
            <value>
            	<see langword="true"/> if the document supports read-only segments; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.ShowScrollBars">
            <summary>
            Gets or sets a value indicating whether to show scroll bars.
            </summary>
            <value><see langword="true"/> if to show scroll bars; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.EnableCompletion">
            <summary>
            Gets or sets a value indicating whether to enable code completion.
            </summary>
            <value><see langword="true"/> if code completion is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.ITextEditorProperties.EnableInsight">
            <summary>
            Gets or sets a value indicating whether to enable method insight.
            </summary>
            <value><see langword="true"/> if method insight is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties">
            <summary>
            The default properties of a text editor.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties"/> class.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.TabIndent">
            <summary>
            Gets or sets the width of a tab character.
            </summary>
            <value>The width in spaces of a tab character.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.IndentationSize">
            <summary>
            The amount of spaces a tab is converted to if <see cref="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.ConvertTabsToSpaces"/> is true.
            </summary>
            <value></value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.IndentStyle">
            <summary>
            Gets or sets the indent style.
            </summary>
            <value>The indent style.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.DocumentSelectionMode">
            <summary>
            Gets or sets the selection mode.
            </summary>
            <value>The selection mode.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.AllowCaretBeyondEOL">
            <summary>
            Gets or sets a value indicating whether allow placing a caret beyond
            the end of the line (often called virtual space).
            </summary>
            <value>
            	<see langword="true"/> if placing the caret beyond the end of line is allowed;
            otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.ShowMatchingBracket">
            <summary>
            Gets or sets a value indicating whether to highlight matching brackets.
            </summary>
            <value>
            	<see langword="true"/> if matching brackets are highlighted; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.ShowLineNumbers">
            <summary>
            Gets or sets a value indicating whether to show line numbers.
            </summary>
            <value><see langword="true"/> if line numbers are shown; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.ShowSpaces">
            <summary>
            Gets or sets a value indicating whether to display spaces in the text area.
            </summary>
            <value>
            	<see langword="true"/> to display spaces in the text area; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.ShowTabs">
            <summary>
            Gets or sets a value indicating whether to display tabs.
            </summary>
            <value><see langword="true"/> to display tabs; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.ShowEOLMarker">
            <summary>
            Gets or sets a value indicating whether display the end-of-line marker.
            </summary>
            <value>
            	<see langword="true"/> to display the end-of-line marker; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.ShowInvalidLines">
            <summary>
            Gets or sets a value indicating whether to show invalid lines.
            </summary>
            <value><see langword="true"/> to show invalid lines; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.IsIconBarVisible">
            <summary>
            Gets or sets a value indicating whether the icon bar visible.
            </summary>
            <value><see langword="true"/> if the icon bar visible; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.EnableFolding">
            <summary>
            Gets or sets a value indicating whether to enable folding.
            </summary>
            <value><see langword="true"/> if folding is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.ShowHorizontalRuler">
            <summary>
            Gets or sets a value indicating whether to show horizontal ruler (columns).
            </summary>
            <value>
            	<see langword="true"/> to show the horizontal ruler; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.ShowVerticalRuler">
            <summary>
            Gets or sets a value indicating whether to show the vertical ruler (vertical guide).
            </summary>
            <value><see langword="true"/> to show the vertical ruler; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.ConvertTabsToSpaces">
            <summary>
            Gets or sets a value indicating whether to convert tabs to spaces.
            </summary>
            <value><see langword="true"/> to convert tabs to spaces; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.TextRenderingHint">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Text.TextRenderingHint"/> for rendering the text.
            </summary>
            <value>The <see cref="T:System.Drawing.Text.TextRenderingHint"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.MouseWheelScrollDown">
            <summary>
            Gets or sets a value indicating whether to scroll the text down or up
            when rotating the mouse wheel (default is 'down').
            </summary>
            <value><see langword="true"/> to scroll down; <see langword="false"/> false to scroll up.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.MouseWheelTextZoom">
            <summary>
            Gets or sets a value indicating whether to zoom the text with the mouse
            wheel.
            </summary>
            <value>
            	<see langword="true"/> to zoom the text with the mouse wheel; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.HideMouseCursor">
            <summary>
            Gets or sets a value indicating whether to hide the mouse cursor while typing.
            </summary>
            <value><see langword="true"/> to hide the mouse cursor; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.CutCopyWholeLine">
            <summary>
            Gets or sets a value indicating whether to cut/copy the whole line when
            nothing is selected.
            </summary>
            <value><see langword="true"/> to cut/copy the whole line; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.Encoding">
            <summary>
            Gets or sets the encoding.
            </summary>
            <value>The encoding.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.VerticalRulerColumn">
            <summary>
            Gets or sets the column of the vertical ruler.
            </summary>
            <value>The column of vertical ruler.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.LineViewerStyle">
            <summary>
            Gets or sets the style the current line is highlighted.
            </summary>
            <value>The line viewer style.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.LineTerminator">
            <summary>
            Gets or sets the line terminator.
            </summary>
            <value>The line terminator.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.AutoInsertCurlyBracket">
            <summary>
            Gets or sets a value indicating whether to automatically insert curly
            brackets.
            </summary>
            <value>
            	<see langword="true"/> if automatically inserting curly brackets; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.FontContainer">
            <summary>
            Gets the font container.
            </summary>
            <value>The font container.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.BracketMatchingStyle">
            <summary>
            Gets or sets the bracket matching style.
            </summary>
            <value>The bracket matching style.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.SupportsReadOnlySegments">
            <summary>
            Gets or sets a value indicating whether this document supports read-only segments.
            </summary>
            <value>
            	<see langword="true"/> if the document supports read-only segments; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.ShowScrollBars">
            <summary>
            Gets or sets a value indicating whether to show scroll bars.
            </summary>
            <value><see langword="true"/> if to show scroll bars; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.EnableCompletion">
            <summary>
            Gets or sets a value indicating whether to enable code completion.
            </summary>
            <value>
            	<see langword="true"/> if code completion is enabled; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Properties.DefaultTextEditorProperties.EnableInsight">
            <summary>
            Gets or sets a value indicating whether to enable method insight.
            </summary>
            <value>
            	<see langword="true"/> if method insight is enabled; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.CaretMode">
            <summary>
            In this enumeration are all caret modes listed.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.CaretMode.InsertMode">
            <summary>
            If the caret is in insert mode typed characters will be
            inserted at the caret position
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.CaretMode.OverwriteMode">
            <summary>
            If the caret is in overwrite mode typed characters will
            overwrite the character at the caret position
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Caret">
            <summary>
            Renders the caret.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.Caret._isValidationRequired">
            <summary>
            Value indicating whether the current caret position needs to be validated.
            </summary>
            <remarks>
            The caret uses 'lazy validation': When a new caret position is set, the new position is not 
            immediately updated. The position is validated as soon as someone accesses the position (via 
            <see cref="P:DigitalRune.Windows.TextEditor.Caret.Line"/>, <see cref="P:DigitalRune.Windows.TextEditor.Caret.Column"/>, etc.). This is necessary for the following reasons: 
            If someone sets, <see cref="P:DigitalRune.Windows.TextEditor.Caret.Line"/> and  <see cref="P:DigitalRune.Windows.TextEditor.Caret.Column"/> independently the position 
            might be invalid after the first component is set. Therefore the validation needs to be 
            delayed until all components are set. Another reason is that during a longer update the 
            document might invalid, so the caret cannot be validated immediately. 
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Caret.DesiredColumn">
            <summary>
            Gets or sets the desired column (in pixels).
            </summary>
            <value>
            The 'prefered' xPos in which the caret moves, when it is moved
            up/down. Measured in pixels, not in characters!
            </value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Caret.CaretMode">
            <summary>
            Gets or sets the caret mode.
            </summary>
            <value>The current caret mode.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Caret.Line">
            <summary>
            Gets or sets the line.
            </summary>
            <value>The line.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Caret.Column">
            <summary>
            Gets or sets the column.
            </summary>
            <value>The column.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Caret.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Caret.Offset">
            <summary>
            Gets the offset in the text buffer.
            </summary>
            <value>The offset in the text buffer.</value>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Caret.PositionChanged">
            <remarks>
            Is called each time the caret is moved.
            </remarks>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.Caret.CaretModeChanged">
            <remarks>
            Is called each time the CaretMode has changed.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Caret.#ctor(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Caret"/> class.
            </summary>
            <param name="textArea">The text area.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Caret.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Caret.ValidatePosition(DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Validates the position.
            </summary>
            <param name="pos">The position.</param>
            <returns><paramref name="pos"/> or the closest valid position.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Caret.ValidateCaretPos">
            <summary>
            Validates the caret position.
            </summary>
            <remarks>
            If the caret position is outside the document text bounds
            it is set to the correct position by calling ValidateCaretPos.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Caret.CreateCaret">
            <summary>
            Creates the caret.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Caret.RecreateCaret">
            <summary>
            Recreates the caret.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Caret.DisposeCaret">
            <summary>
            Disposes the caret.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Caret.ScreenPosition">
            <summary>
            Gets the screen position.
            </summary>
            <value>The screen position.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Caret.UpdateCaretPosition">
            <summary>
            Updates the caret position.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Caret.OnPositionChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Caret.PositionChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Caret.OnCaretModeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.Caret.CaretModeChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.TextArea">
            <summary>
            The text area control.
            </summary>
            <remarks>
            The <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/> controls the editing in the visible part of the
            document. This control renders all the elements that are tightly coupled 
            with currently edited text: text view, line number margin, folding 
            margin and icon bar margin. (Scrollbars and the horizontal ruler are not 
            part of this control. They are part of the <see cref="T:DigitalRune.Windows.TextEditor.TextAreaControl"/>.)
            </remarks>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.TextArea._mouseCursorHidePosition">
            <summary>
            The position where the mouse cursor was when it was hidden. Sometimes the text editor gets MouseMove
            events when typing text even if the mouse is not moved.
            </summary>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.TextArea._toolTipRectangle">
            <summary>
            Rectangle in text area that caused the current tool tip.
            Prevents tooltip from re-showing when it was closed because of a click or keyboard
            input and the mouse was not used.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextArea.Document">
            <summary>
            Gets the document.
            </summary>
            <value>The document.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextArea.TextEditorProperties">
            <summary>
            Gets the text editor properties.
            </summary>
            <value>The text editor properties.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextArea.MotherTextEditorControl">
            <summary>
            Gets the mother text editor control.
            </summary>
            <value>The mother text editor control.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextArea.MotherTextAreaControl">
            <summary>
            Gets the mother text area control.
            </summary>
            <value>The mother text area control.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextArea.LeftMargins">
            <summary>
            Gets the left margins.
            </summary>
            <value>The left margins.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextArea.IconMargin">
            <summary>
            Gets the icon bar margin.
            </summary>
            <value>The icon bar margin.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextArea.LineNumberMargin">
            <summary>
            Gets the gutter margin.
            </summary>
            <value>The gutter margin.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextArea.FoldMargin">
            <summary>
            Gets the fold margin.
            </summary>
            <value>The fold margin.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextArea.TextView">
            <summary>
            Gets the text view.
            </summary>
            <value>The text view.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextArea.VirtualTop">
            <summary>
            Gets or sets the virtual top.
            </summary>
            <value>The virtual top.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextArea.MaxVScrollValue">
            <summary>
            Gets the maximal value for vertical scroll bar.
            </summary>
            <value>The maximal value for the vertical scroll bar.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextArea.Caret">
            <summary>
            Gets the caret.
            </summary>
            <value>The caret.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextArea.SelectionManager">
            <summary>
            Gets the selection manager.
            </summary>
            <value>The selection manager.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextArea.AutoClearSelection">
            <summary>
            Gets or sets a value indicating whether to automatically clear selections.
            </summary>
            <value><see langword="true"/> if selections should be cleared automatically; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextArea.EnableCutOrPaste">
            <summary>
            Gets a value indicating whether cut or paste is allowed at the current 
            selection/position.
            </summary>
            <value><see langword="true"/> if cut/paste is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextArea.ClipboardHandler">
            <summary>
            Gets the clipboard handler.
            </summary>
            <value>The clipboard handler.</value>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.TextArea.DialogKeyPress">
            <summary>
            Occurs when a dialog key (Tab, Escape, Return, arrow keys, etc.) is pressed.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.TextArea.ToolTipRequest">
            <summary>
            Occurs when tool tip is requested.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.#ctor(DigitalRune.Windows.TextEditor.TextEditorControl,DigitalRune.Windows.TextEditor.TextAreaControl)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/> class.
            </summary>
            <param name="motherTextEditorControl">The mother text editor control.</param>
            <param name="motherTextAreaControl">The mother text area control.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.InsertLeftMargin(System.Int32,DigitalRune.Windows.TextEditor.AbstractMargin)">
            <summary>
            Inserts the left margin.
            </summary>
            <param name="index">The index.</param>
            <param name="margin">The margin.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.UpdateMatchingBracket">
            <summary>
            Updates the matching brackets.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.FindMatchingBracketHighlight">
            <summary>
            Finds the pair matching brackets that need to be highlighted.
            </summary>
            <returns>A pair of matching brackets (or <see langword="null"/>).</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.SetDesiredColumn">
            <summary>
            Sets the desired column.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.SetCaretToDesiredColumn">
            <summary>
            Sets the caret to the desired column.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.OptionsChanged">
            <summary>
            Notifies all client controls that the text editor properties have changed.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.ShowHiddenCursor(System.Boolean)">
            <summary>
            Shows the mouse cursor if it has been hidden.
            </summary>
            <param name="forceShow"><see langword="true"/> to always show the cursor or <see langword="false"/> to show it only if it has been moved since it was hidden.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.OnToolTipRequest(DigitalRune.Windows.TextEditor.ToolTipRequestEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.TextArea.ToolTipRequest"/> event.
            </summary>
            <param name="e">The <see cref="T:DigitalRune.Windows.TextEditor.ToolTipRequestEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.OnMouseHover(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseHover"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.RequestToolTip(System.Drawing.Point)">
            <summary>
            Requests the tool tip.
            </summary>
            <param name="mousePos">The mouse position.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LostFocus"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.IsInputChar(System.Char)">
            <summary>
            Determines if a character is an input character that the control recognizes.
            </summary>
            <param name="charCode">The character to test.</param>
            <returns>
            true if the character should be sent directly to the control and not preprocessed; otherwise, false.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.SimulateKeyPress(System.Char)">
            <summary>
            Simulates a key press on the <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="keyChar">The key char.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyPress"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.SimulateDialogKeyPress(System.Windows.Forms.Keys)">
            <summary>
            Simulates the press of a dialog key on the <see cref="T:DigitalRune.Windows.TextEditor.TextArea"/>.
            </summary>
            <param name="keyData">The key data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key.
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"></see> values that represents the key to process.</param>
            <returns>
            true if the key was processed by the control; otherwise, false.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.OnDialogKeyPress(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.TextArea.DialogKeyPress"/> event.
            </summary>
            <param name="keyEventArgs">
            The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance  containing the event data.
            </param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.ScrollToCaret">
            <summary>
            Scrolls to the position of the caret.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.ScrollTo(System.Int32)">
            <summary>
            Scrolls to certain line.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.BeginUpdate">
            <summary>
            Begin of update.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.EndUpdate">
            <summary>
            End of update.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.InsertChar(System.Char)">
            <summary>
            Inserts a single character at the caret position
            </summary>
            <param name="ch">The character.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.InsertString(System.String)">
            <summary>
            Inserts a whole string at the caret position
            </summary>
            <param name="str">The string.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.ReplaceChar(System.Char)">
            <summary>
            Replaces a character at the caret position
            </summary>
            <param name="ch">The character.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextArea.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control"></see> and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler">
            <summary>
            Performs the clipboard actions (cut, copy, paste, ...) for a text area.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.EnableCut">
            <summary>
            Gets a value indicating whether Cut is enabled.
            </summary>
            <value><see langword="true"/> if Cut is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.EnableCopy">
            <summary>
            Gets a value indicating whether Copy is enabled.
            </summary>
            <value><see langword="true"/> if copy is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.ClipboardContainsTextDelegate">
            <summary>
            Checks whether the clipboard contains text.
            </summary>
            <returns>
            <see langword="true"/> if the clipboard contains text; otherwise <see langword="false"/>.
            </returns>
        </member>
        <member name="F:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.GetClipboardContainsText">
            <summary>
            Is called when <see cref="P:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.EnablePaste"/> is queried and checks whether the clipboards 
            contains text. If this property is <see langword="null"/> (the default value), the text editor uses
            <see cref="M:System.Windows.Forms.Clipboard.ContainsText"/>.
            </summary>
            <remarks>
            This property is useful if you want to prevent the default <see cref="M:System.Windows.Forms.Clipboard.ContainsText"/> 
            behaviour that waits for the clipboard to be available - the clipboard might never become 
            available if it is owned by a process that is paused by the debugger.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.EnablePaste">
            <summary>
            Gets a value indicating whether Paste is enabled (i.e. something is in the clipboard).
            </summary>
            <value><see langword="true"/> if Paste is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.EnableDelete">
            <summary>
            Gets a value indicating whether 'delete' is enabled.
            </summary>
            <value><see langword="true"/> if 'delete' is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.EnableSelectAll">
            <summary>
            Gets a value indicating whether 'select all' is enabled.
            </summary>
            <value><see langword="true"/> if 'select all' is enabled; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.CopyText">
            <summary>
            Occurs when a text is copied into the clipboard.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.#ctor(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler"/> class.
            </summary>
            <param name="textArea">The text area.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.Cut">
            <summary>
            Cuts the selected text and puts it in the clipboard.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.Copy">
            <summary>
            Copies the selected text into the clipboard.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.Paste">
            <summary>
            Pastes the content of the clipboard into the document.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.Delete">
            <summary>
            Deletes the currently selected text.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.SelectAll">
            <summary>
            Selects the entire document.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.OnCopyText(DigitalRune.Windows.TextEditor.CopyTextEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.CopyText"/> event.
            </summary>
            <param name="e">The <see cref="T:DigitalRune.Windows.TextEditor.CopyTextEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.CopyTextEventArgs">
            <summary>
            Event arguments for <see cref="E:DigitalRune.Windows.TextEditor.TextAreaClipboardHandler.CopyText"/> event.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.CopyTextEventArgs.Text">
            <summary>
            Gets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.CopyTextEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.CopyTextEventArgs"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.TextView">
            <summary>
            Renders the text part of the text area.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextView.Highlight">
            <summary>
            Gets or sets a pair of highlighted brackets.
            </summary>
            <value>The a pair highlighted brackets.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextView.LineHeight">
            <summary>
            Gets the height of a single line.
            </summary>
            <value>The height of a single line.</value>
            <remarks>
            Usually the same as <see cref="P:DigitalRune.Windows.TextEditor.TextView.FontHeight"/>.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextView.FontHeight">
            <summary>
            Gets the height of the font.
            </summary>
            <value>The height of the font.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextView.SpaceWidth">
            <summary>
            Gets the width of a space character.
            </summary>
            <remarks>
            This value can be quite small in some fonts - consider using <see cref="P:DigitalRune.Windows.TextEditor.TextView.ColumnWidth"/> instead.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextView.ColumnWidth">
            <summary>
            Gets the width of a column.
            </summary>
            <remarks>
            On mono-spaced fonts, this is the same value as <see cref="P:DigitalRune.Windows.TextEditor.TextView.SpaceWidth"/>. On variable-spaced
            fonts, the <see cref="P:DigitalRune.Windows.TextEditor.TextView.ColumnWidth"/> can be different to the <see cref="P:DigitalRune.Windows.TextEditor.TextView.SpaceWidth"/>.
            The columns width determines the size of a tab. For example: tab = 4 * column-width.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextView.NumberOfVisibleLines">
            <summary>
            Gets the number of visible lines.
            </summary>
            <value>The number of visible lines.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextView.NumberOfVisibleColumns">
            <summary>
            Gets the number of visible columns.
            </summary>
            <value>The number visible columns.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextView.FirstPhysicalLine">
            <summary>
            Gets the first visible <b>physical</b> line.
            </summary>
            <value>The first visible <b>physical</b> line.</value>
            <remarks>
            <para>
            A physical line is line that is rendered in the text editor, whereas a logical line is a 
            line in the document. A physical line can contain multiple logical lines, for example when
            several files are folded (collapsed) into one.
            </para>
            <para>
            The line numbers match the logical numbers: line number = (logical line + 1)
            </para>
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextView.FirstLogicalLine">
            <summary>
            Gets or sets the first visible <b>logical</b> line.
            </summary>
            <value>The first visible line.</value>
            <para>
            A logical line is a line in the document, whereas a physical line is line that is rendered 
            in the text editor. A physical line can contain multiple logical lines, for example when
            several files are folded (collapsed) into one.
            </para>
            <para>
            The line numbers match the logical numbers: line number = (logical line + 1)
            </para>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextView.RemainderOfFirstVisibleLine">
            <summary>
            Gets the remainder of the top, visible line that lies outside of the visible area.
            </summary>
            <value>The remainder of the top, visible line that lies outside of the visible area.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextView.#ctor(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.TextView"/> class.
            </summary>
            <param name="textArea">The text area.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextView.OptionsChanged">
            <summary>
            Handles changes of the text editor properties.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextView.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextView.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.AbstractMargin.Paint"/> event.
            </summary>
            <param name="eventArgs">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextView.GetMarkerBrushAt(System.Int32,System.Int32,System.Drawing.Color@,System.Collections.Generic.IList{DigitalRune.Windows.TextEditor.Markers.Marker}@)">
            <summary>
            Get the marker brush (for solid block markers) at a given position.
            </summary>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
            <param name="foreColor">The foreground color.</param>
            <param name="markers">All markers that have been found.</param>
            <returns>
            The Brush or null when no marker was found.
            </returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextView.GetWidth(System.Char,System.Drawing.Font)">
            <summary>
            Gets the width of a character.
            </summary>
            <param name="ch">The character.</param>
            <param name="font">The font.</param>
            <returns>The width in pixel.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextView.GetWidth(System.Drawing.Graphics,System.Char,System.Drawing.Font)">
            <summary>
            Gets the width of a character.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="ch">The character.</param>
            <param name="font">The font.</param>
            <returns>The width of the character in pixel.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextView.GetVisualColumn(System.Int32,System.Int32)">
            <summary>
            Counts the visual columns.
            </summary>
            <param name="logicalLine">The logical line.</param>
            <param name="logicalColumn">The logical column.</param>
            <returns>The number of visual columns.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextView.GetVisualColumnFast(DigitalRune.Windows.TextEditor.Document.LineSegment,System.Int32)">
            <summary>
            Counts the visual columns (fast version).
            </summary>
            <param name="line">The line.</param>
            <param name="logicalColumn">The logical column.</param>
            <returns>The number of visual columns.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextView.GetLogicalPosition(System.Drawing.Point)">
            <summary>
            Gets line/column for a visual point.
            </summary>
            <param name="mousePosition">The point (mouse position).</param>
            <returns>The text position (column, line) of the position (x, y).</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextView.GetLogicalPosition(System.Int32,System.Int32)">
            <summary>
            Gets line/column for a visual point.
            </summary>
            <param name="visualPosX">The x position.</param>
            <param name="visualPosY">The y position.</param>
            <returns>The text position (column, line) of the position (x, y).</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextView.GetLogicalLine(System.Int32)">
            <summary>
            Returns logical line number for a visual point.
            </summary>
            <param name="visualPosY">The y position.</param>
            <returns>The logical line.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextView.GetLogicalColumn(System.Int32,System.Int32,DigitalRune.Windows.TextEditor.Folding.Fold@)">
            <summary>
            Gets the logical column.
            </summary>
            <param name="lineNumber">The line number.</param>
            <param name="visualPosX">The visual pos X.</param>
            <param name="inFold">The fold marker that contains the columns (or <see langword="null"/>).</param>
            <returns>The logical column.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextView.GetDrawingXPos(System.Int32,System.Int32)">
            <summary>
            Gets the x position for a certain text position (column, character).
            </summary>
            <param name="logicalLine">The logical line.</param>
            <param name="logicalColumn">The logical column.</param>
            <returns></returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.LineNumberMargin">
            <summary>
            The vertical strip next to the text that shows the line numbers.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.LineNumberMargin.Cursor">
            <summary>
            Gets or sets the cursor.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.LineNumberMargin.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.LineNumberMargin.IsVisible">
            <summary>
            Gets a value indicating whether this instance is visible.
            </summary>
            <value>
            	<see langword="true"/> if this instance is visible; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.LineNumberMargin.#ctor(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.LineNumberMargin"/> class.
            </summary>
            <param name="TextArea">The text area.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.LineNumberMargin.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.AbstractMargin.Paint"/> event.
            </summary>
            <param name="eventArgs">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.LineNumberMargin.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.AbstractMargin.MouseDown"/> event.
            </summary>
            <param name="eventArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.AbstractMargin">
            <summary>
            Represents a part of the text area.
            </summary>
            <remarks>
            The text area is divided into several vertical strips, such as icon margin, line-number margin,
            fold margin, the actual text view, and possible other margins.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.AbstractMargin.DrawingPosition">
            <summary>
            Gets or sets the drawing position.
            </summary>
            <value>The drawing position.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.AbstractMargin.TextArea">
            <summary>
            Gets the text area.
            </summary>
            <value>The text area.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.AbstractMargin.Document">
            <summary>
            Gets the document.
            </summary>
            <value>The document.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.AbstractMargin.TextEditorProperties">
            <summary>
            Gets the text editor properties.
            </summary>
            <value>The text editor properties.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.AbstractMargin.Cursor">
            <summary>
            Gets or sets the cursor.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.AbstractMargin.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.AbstractMargin.IsVisible">
            <summary>
            Gets a value indicating whether this instance is visible.
            </summary>
            <value>
            	<see langword="true"/> if this instance is visible; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.AbstractMargin.Paint">
            <summary>
            Occurs when the margin is painted.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.AbstractMargin.MouseDown">
            <summary>
            Occurs when the mouse button is pressed on the margin.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.AbstractMargin.MouseMove">
            <summary>
            Occurs when the mouse is moved on the margin.
            </summary>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.AbstractMargin.MouseLeave">
            <summary>
            Occurs when the mouse leaves the margin.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.AbstractMargin.#ctor(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.AbstractMargin"/> class.
            </summary>
            <param name="textArea">The text area.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.AbstractMargin.HandleMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles a mouse down event.
            </summary>
            <param name="eventArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.AbstractMargin.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.AbstractMargin.MouseDown"/> event.
            </summary>
            <param name="eventArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.AbstractMargin.HandleMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles a mouse move.
            </summary>
            <param name="eventArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.AbstractMargin.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.AbstractMargin.MouseMove"/> event.
            </summary>
            <param name="eventArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.AbstractMargin.HandleMouseLeave(System.EventArgs)">
            <summary>
            Handles a mouse leave event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.AbstractMargin.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.AbstractMargin.MouseLeave"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.AbstractMargin.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the margin.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> context.</param>
            <param name="rect">The clipping rectangle.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.AbstractMargin.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.AbstractMargin.Paint"/> event.
            </summary>
            <param name="eventArgs">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.TextAreaControl">
            <summary>
            Container control for text area, horizontal ruler, and scrollbars.
            </summary>
            <remarks>
            This contains a <see cref="P:DigitalRune.Windows.TextEditor.TextAreaControl.TextArea"/> control and adds a horizontal ruler and scrollbars.
            It manages the scrolling/positioning (via scrollbars, mouse wheel, or code) and resizing 
            of the <see cref="P:DigitalRune.Windows.TextEditor.TextAreaControl.TextArea"/>.
            </remarks>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextAreaControl.MotherTextEditorControl">
            <summary>
            Gets the mother text editor control.
            </summary>
            <value>The mother text editor control.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextAreaControl.TextEditorProperties">
            <summary>
            Gets the text editor properties.
            </summary>
            <value>The text editor properties.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextAreaControl.TextArea">
            <summary>
            Gets the text area.
            </summary>
            <value>The text area.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextAreaControl.Caret">
            <summary>
            Gets the caret.
            </summary>
            <value>The caret.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextAreaControl.VScrollBar">
            <summary>
            Gets the vertical scroll bar.
            </summary>
            <value>The vertical scroll bar.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextAreaControl.HScrollBar">
            <summary>
            Gets the horizontal scroll bar.
            </summary>
            <value>The horizontal scroll bar.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.TextAreaControl.DoHandleMousewheel">
            <summary>
            Gets or sets a value indicating whether to handle the mouse wheel.
            </summary>
            <value><see langword="true"/> if the mouse wheel is handle by this control; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="E:DigitalRune.Windows.TextEditor.TextAreaControl.ContextMenuRequest">
            <summary>
            Occurs when the context menu is requested.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaControl.#ctor(DigitalRune.Windows.TextEditor.TextEditorControl)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.TextAreaControl"/> class.
            </summary>
            <param name="motherTextEditorControl">The mother text editor control.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaControl.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control"></see> and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaControl.OnResize(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Resize"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaControl.ResizeTextArea">
            <summary>
            Resizes the text area.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaControl.SetScrollBarBounds">
            <summary>
            Sets the scroll bar bounds.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaControl.AdjustScrollBars">
            <summary>
            Adjusts the scroll bars.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaControl.OptionsChanged">
            <summary>
            Notifies all child controls that the properties of the text edtiors have changed.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaControl.HandleMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles mouse wheel events.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaControl.ScrollToCaret">
            <summary>
            Scrolls to current caret position.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaControl.ScrollTo(System.Int32,System.Int32)">
            <summary>
            Scrolls to a given line/column.
            </summary>
            <param name="line">The line.</param>
            <param name="column">The column.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaControl.ScrollTo(System.Int32)">
            <summary>
            Scrolls to a given line.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaControl.CenterViewOn(System.Int32,System.Int32)">
            <summary>
            Scroll so that the specified line is centered.
            </summary>
            <param name="line">Line to center view on</param>
            <param name="treshold">
            If this action would cause scrolling by less than or equal to
            <paramref name="treshold"/> lines in any direction, don't scroll.  Use -1 
            to always center the view.
            </param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaControl.JumpTo(System.Int32)">
            <summary>
            Jumps to a given position in the document.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaControl.JumpTo(System.Int32,System.Int32)">
            <summary>
            Jumps to a given position in the document.
            </summary>
            <param name="line">The line.</param>
            <param name="column">The column.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaControl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            WNDs the proc.
            </summary>
            <param name="m">The m.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.TextAreaMouseHandler">
            <summary>
            This class handles all mouse stuff for a textArea.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaMouseHandler.#ctor(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.TextAreaMouseHandler"/> class.
            </summary>
            <param name="textArea">The text area.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaMouseHandler.Attach">
            <summary>
            Attaches this instance.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaMouseHandler.DoubleClickSelectionExtend">
            <summary>
            Doubles the click selection extend.
            </summary>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.IconMargin">
            <summary>
            The vertical strip next to the text that contains icons for bookmarks, breakpoints, etc.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.IconMargin.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.IconMargin.IsVisible">
            <summary>
            Gets a value indicating whether this instance is visible.
            </summary>
            <value>
            	<see langword="true"/> if this instance is visible; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.IconMargin.#ctor(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.IconMargin"/> class.
            </summary>
            <param name="textArea">The text area.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.IconMargin.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.AbstractMargin.Paint"/> event.
            </summary>
            <param name="eventArgs">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.IconMargin.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.AbstractMargin.MouseDown"/> event.
            </summary>
            <param name="eventArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.FoldMargin">
            <summary>
            The vertical strip next to the text that indicates the folds (collapsible regions) of the 
            text view.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.FoldMargin.Size">
            <summary>
            Gets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.FoldMargin.IsVisible">
            <summary>
            Gets a value indicating whether this instance is visible.
            </summary>
            <value>
            	<see langword="true"/> if this instance is visible; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.FoldMargin.#ctor(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.FoldMargin"/> class.
            </summary>
            <param name="TextArea">The text area.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.FoldMargin.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.AbstractMargin.Paint"/> event.
            </summary>
            <param name="eventArgs">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.FoldMargin.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.AbstractMargin.MouseMove"/> event.
            </summary>
            <param name="eventArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.FoldMargin.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.AbstractMargin.MouseDown"/> event.
            </summary>
            <param name="eventArgs">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.FoldMargin.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:DigitalRune.Windows.TextEditor.AbstractMargin.MouseLeave"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.TextAreaDragDropHandler.Attach(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Attaches the specified text area.
            </summary>
            <param name="textArea">The text area.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.Highlight">
            <summary>
            A pair of matching braces.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlight.OpeningBrace">
            <summary>
            Gets or sets the opening brace.
            </summary>
            <value>The opening brace.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.Highlight.ClosingBrace">
            <summary>
            Gets or sets the closing brace.
            </summary>
            <value>The closing brace.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.Highlight.#ctor(DigitalRune.Windows.TextEditor.Document.TextLocation,DigitalRune.Windows.TextEditor.Document.TextLocation)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.Highlight"/> class.
            </summary>
            <param name="openBrace">The opening brace.</param>
            <param name="closeBrace">The closing brace.</param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.BracketHighlightingScheme">
            <summary>
            Describes a bracket highlighting scheme.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.BracketHighlightingScheme.OpeningTag">
            <summary>
            Gets or sets the opening tag.
            </summary>
            <value>The opening tag.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.BracketHighlightingScheme.ClosingTag">
            <summary>
            Gets or sets the closing tag.
            </summary>
            <value>The closing tag.</value>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.BracketHighlightingScheme.#ctor(System.Char,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.BracketHighlightingScheme"/> class.
            </summary>
            <param name="opentag">The opening tag.</param>
            <param name="closingtag">The closing tag.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.BracketHighlightingScheme.GetHighlight(DigitalRune.Windows.TextEditor.Document.IDocument,System.Int32)">
            <summary>
            Gets the highlight.
            </summary>
            <param name="document">The document.</param>
            <param name="offset">The offset.</param>
            <returns>The matching bracers.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.BrushRegistry">
            <summary>
            Contains brushes/pens for the text editor to speed up drawing. Re-Creation of brushes and pens
            seems too costly.
            </summary>
            <remarks>
            All brushes and pens are cached internally. When a new brush is requested
            the <see cref="T:DigitalRune.Windows.TextEditor.BrushRegistry"/> looks up the internal cache and returns the
            appropriate brush object. If the brush is not found in the cache, then a
            new brush is created and automatically cached.
            </remarks>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.BrushRegistry.GetBrush(System.Drawing.Color)">
            <summary>
            Gets a brush with a certain color.
            </summary>
            <param name="color">The color.</param>
            <returns>The brush with the specified color.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.BrushRegistry.GetPen(System.Drawing.Color)">
            <summary>
            Gets a pen with a certain color.
            </summary>
            <param name="color">The color.</param>
            <returns>The pen with the specified color.</returns>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.BrushRegistry.GetDotPen(System.Drawing.Color)">
            <summary>
            Gets a pen for drawing dotted lines.
            </summary>
            <param name="color">The color.</param>
            <returns>A pen for drawing dotted lines.</returns>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.HRuler">
            <summary>
            Horizontal ruler - text column measuring ruler at the top of the text area.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.HRuler.#ctor(DigitalRune.Windows.TextEditor.TextArea)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.HRuler"/> class.
            </summary>
            <param name="textArea">The text area.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.HRuler.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"></see> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"></see> that contains the event data.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.HRuler.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control. 
            </summary>
            <param name="e">
            The <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains 
            information about the control to paint.
            </param>
        </member>
        <member name="T:DigitalRune.Windows.TextEditor.ToolTipRequestEventArgs">
            <summary>
            Event arguments for a tool tip request.
            </summary>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.ToolTipRequestEventArgs.MousePosition">
            <summary>
            Gets the mouse position.
            </summary>
            <value>The mouse position.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.ToolTipRequestEventArgs.LogicalPosition">
            <summary>
            Gets the logical position.
            </summary>
            <value>The logical position.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.ToolTipRequestEventArgs.InDocument">
            <summary>
            Gets a value indicating whether the mouse cursor is in the document.
            </summary>
            <value><see langword="true"/> if the mouse cursor is over document; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:DigitalRune.Windows.TextEditor.ToolTipRequestEventArgs.ToolTipShown">
            <summary>
            Gets if some client handling the event has already shown a tool tip.
            </summary>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.ToolTipRequestEventArgs.ShowToolTip(System.String)">
            <summary>
            Shows the tool tip.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:DigitalRune.Windows.TextEditor.ToolTipRequestEventArgs.#ctor(System.Drawing.Point,DigitalRune.Windows.TextEditor.Document.TextLocation,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Windows.TextEditor.ToolTipRequestEventArgs"/> class.
            </summary>
            <param name="mousePosition">The mouse position.</param>
            <param name="logicalPosition">The logical position.</param>
            <param name="inDocument">if set to <see langword="true"/> mouse cursor is over the document.</param>
        </member>
    </members>
</doc>
